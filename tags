!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	218;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	285;"	d	file:
CAPSLOCK	kern/console.c	220;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	26;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
CONSBUFSIZE	kern/console.c	381;"	d	file:
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	217;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	224;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENVGENSHIFT	kern/env.c	20;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	28;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	26;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon4
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon4
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon4
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon4
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon4
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon4
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon4
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_RTC	kern/kclock.h	9;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=3$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEN	kern/game_draw.c	48;"	d	file:
LEN	kern/game_draw.c	6;"	d	file:
LEN	obj/kern/kernel.asm	/^#define LEN 20$/;"	d
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	71;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon4
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	29;"	d	file:
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	214;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon1
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	221;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
O_ACCMODE	inc/lib.h	49;"	d
O_CREAT	inc/lib.h	51;"	d
O_EXCL	inc/lib.h	53;"	d
O_MKDIR	inc/lib.h	54;"	d
O_RDONLY	inc/lib.h	46;"	d
O_RDWR	inc/lib.h	48;"	d
O_TRUNC	inc/lib.h	52;"	d
O_WRONLY	inc/lib.h	47;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 3 09:38:39 EDT 2014$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIC	kern/draw.c	6;"	d	file:
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SCROLLLOCK	kern/console.c	222;"	d	file:
SCR_HEIGHT	kern/video.h	9;"	d
SCR_SIZE	kern/video.h	10;"	d
SCR_WIDTH	kern/video.h	8;"	d
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	216;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon1
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon1
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon1
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon1
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	20;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VMEM_ADDR	kern/video.h	11;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	70;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_CONSOLE_H_	kern/video.h	2;"	d
_DRAW_H_	kern/draw.h	2;"	d
_GAME_DRAW_H_	kern/game_draw.h	2;"	d
_GAME_H_	kern/game.h	2;"	d
_GAME_LAYOUT_H_	kern/game_layout.h	2;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_MY_BMR_	kern/pmap.c	225;"	d	file:
_MY_BMR_	obj/kern/kernel.asm	/^#define _MY_BMR_$/;"	d
_MY_PG_WALK_	kern/pmap.c	392;"	d	file:
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon6::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:	access:public
__anon6::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:	access:public
__anon6::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:	access:public
__game_restart	obj/kern/kernel.asm	/^__game_restart:$/;"	l
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
anchor_border_bottom	kern/draw.c	49;"	d	file:
anchor_border_bottom	obj/kern/kernel.asm	/^#define anchor_border_bottom (move_area_height+anchor_border_top-1)$/;"	d
anchor_border_left	kern/draw.c	46;"	d	file:
anchor_border_right	kern/draw.c	48;"	d	file:
anchor_border_right	obj/kern/kernel.asm	/^#define anchor_border_right (move_area_width+anchor_border_left-1)$/;"	d
anchor_border_top	kern/draw.c	47;"	d	file:
anchor_border_top	obj/kern/kernel.asm	/^#define anchor_border_top 0$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
black	kern/game_draw.h	9;"	d
blue	kern/game_draw.h	6;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
box	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	kern/draw.c	/^static int c[width*height]=PIC;$/;"	v	file:
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.c	/^struct Env *curenv = NULL;		\/\/ The current env$/;"	v	typeref:struct:Env
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^			default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
display_buffer	kern/video.c	/^display_buffer(void) {$/;"	f	signature:(void)
display_buffer	kern/video.h	/^void display_buffer(void);$/;"	p	signature:(void)
draw_box	kern/game_draw.c	/^draw_box() { \/*and protagonist*\/$/;"	f	file:
draw_color	kern/draw.c	/^draw_color()$/;"	f
draw_color	kern/draw.h	/^void draw_color();$/;"	p	signature:()
draw_map	kern/game_draw.c	/^draw_map() {$/;"	f	file:
draw_pixel	kern/video.h	/^draw_pixel(int x, int y, int color) {$/;"	f	signature:(int x, int y, int color)
draw_square	kern/video.c	/^draw_square(int y, int x, int color, int len) {$/;"	f	signature:(int y, int x, int color, int len)
draw_square	kern/video.h	/^void draw_square(int x, int y, int color, int len);$/;"	p	signature:(int x, int y, int color, int len)
draw_string	kern/video.h	/^void draw_string(const char*, int, int, int);$/;"	p	signature:(const char*, int, int, int)
draw_tux	kern/draw.c	/^draw_tux() $/;"	f
draw_tux	kern/draw.h	/^void draw_tux();$/;"	p	signature:()
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	signature:(uint8_t *binary, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, enum EnvType type);$/;"	p	signature:(uint8_t *binary, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof(struct Env)*NENV);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern uint8_t *vmem;$/;"	l
extern	obj/kern/kernel.asm	/^extern uint8_t vbuf[];$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 40 12 f0       	mov    $0xf0124000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100046	obj/kern/kernel.asm	/^f0100046:	b8 80 b8 1f f0       	mov    $0xf01fb880,%eax$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	2d 55 af 1e f0       	sub    $0xf01eaf55,%eax$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	00 $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	c7 04 24 55 af 1e f0 	movl   $0xf01eaf55,(%esp)$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 2a 4d 00 00       	call   f0104d92 <memset>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	e8 26 05 00 00       	call   f0100593 <cons_init>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	00 $/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	c7 04 24 e0 51 10 f0 	movl   $0xf01051e0,(%esp)$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	e8 71 36 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	e8 89 11 00 00       	call   f010120f <mem_init>$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	00 $/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 44 24 08 72 53 10 	movl   $0xf0105372,0x8(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	f0 $/;"	l
f0100096	obj/kern/kernel.asm	/^f0100096:	c7 44 24 04 fb 51 10 	movl   $0xf01051fb,0x4(%esp)$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	f0 $/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	c7 04 24 3c 52 10 f0 	movl   $0xf010523c,(%esp)$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	e8 48 36 00 00       	call   f01036f2 <cprintf>$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	c7 44 24 0c 28 00 00 	movl   $0x28,0xc(%esp)$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	00 $/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	c7 44 24 08 72 53 10 	movl   $0xf0105372,0x8(%esp)$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	f0 $/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	c7 44 24 04 fb 51 10 	movl   $0xf01051fb,0x4(%esp)$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	f0 $/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	c7 04 24 78 52 10 f0 	movl   $0xf0105278,(%esp)$/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	e8 24 36 00 00       	call   f01036f2 <cprintf>$/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	e8 76 2f 00 00       	call   f0103049 <env_init>$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	c7 44 24 0c 2a 00 00 	movl   $0x2a,0xc(%esp)$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	00 $/;"	l
f01000db	obj/kern/kernel.asm	/^f01000db:	c7 44 24 08 72 53 10 	movl   $0xf0105372,0x8(%esp)$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	f0 $/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	c7 44 24 04 fb 51 10 	movl   $0xf01051fb,0x4(%esp)$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	f0 $/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 b8 52 10 f0 	movl   $0xf01052b8,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 fb 35 00 00       	call   f01036f2 <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	c7 44 24 0c 2b 00 00 	movl   $0x2b,0xc(%esp)$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	00 $/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	c7 44 24 08 72 53 10 	movl   $0xf0105372,0x8(%esp)$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	f0 $/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	c7 44 24 04 fb 51 10 	movl   $0xf01051fb,0x4(%esp)$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	f0 $/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	c7 04 24 f4 52 10 f0 	movl   $0xf01052f4,(%esp)$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	e8 d7 35 00 00       	call   f01036f2 <cprintf>$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	e8 49 36 00 00       	call   f0103769 <trap_init>$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	c7 44 24 0c 2d 00 00 	movl   $0x2d,0xc(%esp)$/;"	l
f0100127	obj/kern/kernel.asm	/^f0100127:	00 $/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	c7 44 24 08 72 53 10 	movl   $0xf0105372,0x8(%esp)$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	f0 $/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	c7 44 24 04 fb 51 10 	movl   $0xf01051fb,0x4(%esp)$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	f0 $/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	c7 04 24 38 53 10 f0 	movl   $0xf0105338,(%esp)$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	e8 ae 35 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	00 $/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	c7 04 24 5c 63 12 f0 	movl   $0xf012635c,(%esp)$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	e8 2c 31 00 00       	call   f0103284 <env_create>$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	c9                   	leave  $/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	c3                   	ret    $/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a <_panic>:$/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a:	55                   	push   %ebp$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	89 e5                	mov    %esp,%ebp$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	56                   	push   %esi$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	53                   	push   %ebx$/;"	l
f010015f	obj/kern/kernel.asm	/^f010015f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	83 3d 40 be 1e f0 00 	cmpl   $0x0,0xf01ebe40$/;"	l
f010016c	obj/kern/kernel.asm	/^f010016c:	75 3d                	jne    f01001ab <_panic+0x51>$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	89 35 40 be 1e f0    	mov    %esi,0xf01ebe40$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	fa                   	cli    $/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	fc                   	cld    $/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100187	obj/kern/kernel.asm	/^f0100187:	c7 04 24 07 52 10 f0 	movl   $0xf0105207,(%esp)$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	e8 5f 35 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	e8 20 35 00 00       	call   f01036bf <vcprintf>$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	c7 04 24 be 5a 10 f0 	movl   $0xf0105abe,(%esp)$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	e8 47 35 00 00       	call   f01036f2 <cprintf>$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	e8 ff 05 00 00       	call   f01007b6 <monitor>$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	eb f2                	jmp    f01001ab <_panic+0x51>$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9 <_warn>:$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	55                   	push   %ebp$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	53                   	push   %ebx$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	c7 04 24 1f 52 10 f0 	movl   $0xf010521f,(%esp)$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	e8 15 35 00 00       	call   f01036f2 <cprintf>$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	e8 d3 34 00 00       	call   f01036bf <vcprintf>$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	c7 04 24 be 5a 10 f0 	movl   $0xf0105abe,(%esp)$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	e8 fa 34 00 00       	call   f01036f2 <cprintf>$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	5b                   	pop    %ebx$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	5d                   	pop    %ebp$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	c3                   	ret    $/;"	l
f0100200	obj/kern/kernel.asm	/^f0100200 <delay>:$/;"	l
f0100200	obj/kern/kernel.asm	/^f0100200:	55                   	push   %ebp$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	89 e5                	mov    %esp,%ebp$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	ec                   	in     (%dx),%al$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	ec                   	in     (%dx),%al$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	ec                   	in     (%dx),%al$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	ec                   	in     (%dx),%al$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	5d                   	pop    %ebp$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	c3                   	ret    $/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e <serial_proc_data>:$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	55                   	push   %ebp$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	ec                   	in     (%dx),%al$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	a8 01                	test   $0x1,%al$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	74 08                	je     f0100223 <serial_proc_data+0x15>$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	b2 f8                	mov    $0xf8,%dl$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	ec                   	in     (%dx),%al$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	eb 05                	jmp    f0100228 <serial_proc_data+0x1a>$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100228	obj/kern/kernel.asm	/^f0100228:	5d                   	pop    %ebp$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	c3                   	ret    $/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a <cons_intr>:$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	55                   	push   %ebp$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	89 e5                	mov    %esp,%ebp$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	53                   	push   %ebx$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	89 c3                	mov    %eax,%ebx$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	eb 29                	jmp    f010025e <cons_intr+0x34>$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	85 c0                	test   %eax,%eax$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	74 25                	je     f010025e <cons_intr+0x34>$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	8b 15 84 b1 1e f0    	mov    0xf01eb184,%edx$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	88 82 80 af 1e f0    	mov    %al,-0xfe15080(%edx)$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	a3 84 b1 1e f0       	mov    %eax,0xf01eb184$/;"	l
f010024d	obj/kern/kernel.asm	/^f010024d:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	75 0a                	jne    f010025e <cons_intr+0x34>$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	c7 05 84 b1 1e f0 00 	movl   $0x0,0xf01eb184$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	00 00 00 $/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	ff d3                	call   *%ebx$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	75 d0                	jne    f0100235 <cons_intr+0xb>$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	5b                   	pop    %ebx$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	5d                   	pop    %ebp$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	c3                   	ret    $/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b <cons_putc>:$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	55                   	push   %ebp$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	89 e5                	mov    %esp,%ebp$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	57                   	push   %edi$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	56                   	push   %esi$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	53                   	push   %ebx$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	89 c6                	mov    %eax,%esi$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	eb 05                	jmp    f0100287 <cons_putc+0x1c>$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	e8 79 ff ff ff       	call   f0100200 <delay>$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	89 fa                	mov    %edi,%edx$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	ec                   	in     (%dx),%al$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	a8 20                	test   $0x20,%al$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	75 03                	jne    f0100291 <cons_putc+0x26>$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	4b                   	dec    %ebx$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	75 f1                	jne    f0100282 <cons_putc+0x17>$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	89 f2                	mov    %esi,%edx$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	89 f0                	mov    %esi,%eax$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	ee                   	out    %al,(%dx)$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	eb 05                	jmp    f01002af <cons_putc+0x44>$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	e8 51 ff ff ff       	call   f0100200 <delay>$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	89 fa                	mov    %edi,%edx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	ec                   	in     (%dx),%al$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	84 c0                	test   %al,%al$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	78 03                	js     f01002b9 <cons_putc+0x4e>$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	4b                   	dec    %ebx$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	75 f1                	jne    f01002aa <cons_putc+0x3f>$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	ee                   	out    %al,(%dx)$/;"	l
f01002c2	obj/kern/kernel.asm	/^f01002c2:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	b0 0d                	mov    $0xd,%al$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	ee                   	out    %al,(%dx)$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	b0 08                	mov    $0x8,%al$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	ee                   	out    %al,(%dx)$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	75 06                	jne    f01002d8 <cons_putc+0x6d>$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	89 f0                	mov    %esi,%eax$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	74 78                	je     f010035c <cons_putc+0xf1>$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	7f 0b                	jg     f01002f4 <cons_putc+0x89>$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	0f 85 9e 00 00 00    	jne    f0100390 <cons_putc+0x125>$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	eb 10                	jmp    f0100304 <cons_putc+0x99>$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	74 39                	je     f0100332 <cons_putc+0xc7>$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	0f 85 8e 00 00 00    	jne    f0100390 <cons_putc+0x125>$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	eb 36                	jmp    f010033a <cons_putc+0xcf>$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	66 a1 94 b1 1e f0    	mov    0xf01eb194,%ax$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	66 85 c0             	test   %ax,%ax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	0f 84 e2 00 00 00    	je     f01003f5 <cons_putc+0x18a>$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	48                   	dec    %eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	66 a3 94 b1 1e f0    	mov    %ax,0xf01eb194$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	83 ce 20             	or     $0x20,%esi$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	8b 15 90 b1 1e f0    	mov    0xf01eb190,%edx$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	eb 78                	jmp    f01003aa <cons_putc+0x13f>$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	66 83 05 94 b1 1e f0 	addw   $0x50,0xf01eb194$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	50 $/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	66 8b 0d 94 b1 1e f0 	mov    0xf01eb194,%cx$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	89 c8                	mov    %ecx,%eax$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	66 f7 f3             	div    %bx$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	66 29 d1             	sub    %dx,%cx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	66 89 0d 94 b1 1e f0 	mov    %cx,0xf01eb194$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	eb 4e                	jmp    f01003aa <cons_putc+0x13f>$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	e8 05 ff ff ff       	call   f010026b <cons_putc>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	e8 fb fe ff ff       	call   f010026b <cons_putc>$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	e8 f1 fe ff ff       	call   f010026b <cons_putc>$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	e8 e7 fe ff ff       	call   f010026b <cons_putc>$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	e8 dd fe ff ff       	call   f010026b <cons_putc>$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	eb 1a                	jmp    f01003aa <cons_putc+0x13f>$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	66 a1 94 b1 1e f0    	mov    0xf01eb194,%ax$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	8b 15 90 b1 1e f0    	mov    0xf01eb190,%edx$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	40                   	inc    %eax$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	66 a3 94 b1 1e f0    	mov    %ax,0xf01eb194$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	66 81 3d 94 b1 1e f0 	cmpw   $0x7cf,0xf01eb194$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	cf 07 $/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	76 40                	jbe    f01003f5 <cons_putc+0x18a>$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	a1 90 b1 1e f0       	mov    0xf01eb190,%eax$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	00 $/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	e8 08 4a 00 00       	call   f0104ddc <memmove>$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	8b 15 90 b1 1e f0    	mov    0xf01eb190,%edx$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	40                   	inc    %eax$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01003eb	obj/kern/kernel.asm	/^f01003eb:	75 f2                	jne    f01003df <cons_putc+0x174>$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	66 83 2d 94 b1 1e f0 	subw   $0x50,0xf01eb194$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	50 $/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	8b 0d 8c b1 1e f0    	mov    0xf01eb18c,%ecx$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	b0 0e                	mov    $0xe,%al$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	89 ca                	mov    %ecx,%edx$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	ee                   	out    %al,(%dx)$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	66 8b 35 94 b1 1e f0 	mov    0xf01eb194,%si$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 f0                	mov    %esi,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	89 da                	mov    %ebx,%edx$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	ee                   	out    %al,(%dx)$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	b0 0f                	mov    $0xf,%al$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	89 ca                	mov    %ecx,%edx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	ee                   	out    %al,(%dx)$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	89 f0                	mov    %esi,%eax$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	89 da                	mov    %ebx,%edx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	ee                   	out    %al,(%dx)$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	5b                   	pop    %ebx$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	5e                   	pop    %esi$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	5f                   	pop    %edi$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	5d                   	pop    %ebp$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	c3                   	ret    $/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425 <kbd_proc_data>:$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	55                   	push   %ebp$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	89 e5                	mov    %esp,%ebp$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	53                   	push   %ebx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	ec                   	in     (%dx),%al$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	a8 01                	test   $0x1,%al$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	0f 84 d8 00 00 00    	je     f0100512 <kbd_proc_data+0xed>$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	b2 60                	mov    $0x60,%dl$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	ec                   	in     (%dx),%al$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	88 c2                	mov    %al,%dl$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	75 11                	jne    f0100454 <kbd_proc_data+0x2f>$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	83 0d 88 b1 1e f0 40 	orl    $0x40,0xf01eb188$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	e9 c3 00 00 00       	jmp    f0100517 <kbd_proc_data+0xf2>$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	84 c0                	test   %al,%al$/;"	l
f0100456	obj/kern/kernel.asm	/^f0100456:	79 33                	jns    f010048b <kbd_proc_data+0x66>$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	8b 0d 88 b1 1e f0    	mov    0xf01eb188,%ecx$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	75 05                	jne    f0100468 <kbd_proc_data+0x43>$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	88 c2                	mov    %al,%dl$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	8a 82 c0 53 10 f0    	mov    -0xfefac40(%edx),%al$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	f7 d0                	not    %eax$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	21 c1                	and    %eax,%ecx$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	89 0d 88 b1 1e f0    	mov    %ecx,0xf01eb188$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	e9 8c 00 00 00       	jmp    f0100517 <kbd_proc_data+0xf2>$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	8b 0d 88 b1 1e f0    	mov    0xf01eb188,%ecx$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	74 0e                	je     f01004a4 <kbd_proc_data+0x7f>$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	88 c2                	mov    %al,%dl$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	89 0d 88 b1 1e f0    	mov    %ecx,0xf01eb188$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	0f b6 82 c0 53 10 f0 	movzbl -0xfefac40(%edx),%eax$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	0b 05 88 b1 1e f0    	or     0xf01eb188,%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	0f b6 8a c0 54 10 f0 	movzbl -0xfefab40(%edx),%ecx$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	31 c8                	xor    %ecx,%eax$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	a3 88 b1 1e f0       	mov    %eax,0xf01eb188$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	89 c1                	mov    %eax,%ecx$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	8b 0c 8d c0 55 10 f0 	mov    -0xfefaa40(,%ecx,4),%ecx$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	a8 08                	test   $0x8,%al$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	74 18                	je     f01004ee <kbd_proc_data+0xc9>$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	77 05                	ja     f01004e3 <kbd_proc_data+0xbe>$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	eb 0b                	jmp    f01004ee <kbd_proc_data+0xc9>$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	77 03                	ja     f01004ee <kbd_proc_data+0xc9>$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	f7 d0                	not    %eax$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	a8 06                	test   $0x6,%al$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	75 23                	jne    f0100517 <kbd_proc_data+0xf2>$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	75 1b                	jne    f0100517 <kbd_proc_data+0xf2>$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	c7 04 24 7c 53 10 f0 	movl   $0xf010537c,(%esp)$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	e8 ea 31 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	b0 03                	mov    $0x3,%al$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	ee                   	out    %al,(%dx)$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	eb 05                	jmp    f0100517 <kbd_proc_data+0xf2>$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	89 d8                	mov    %ebx,%eax$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	83 c4 14             	add    $0x14,%esp$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	5b                   	pop    %ebx$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	5d                   	pop    %ebp$/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	c3                   	ret    $/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f <serial_intr>:$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	55                   	push   %ebp$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	89 e5                	mov    %esp,%ebp$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	80 3d 60 af 1e f0 00 	cmpb   $0x0,0xf01eaf60$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	74 0a                	je     f0100538 <serial_intr+0x19>$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	b8 0e 02 10 f0       	mov    $0xf010020e,%eax$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	e8 f2 fc ff ff       	call   f010022a <cons_intr>$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	c9                   	leave  $/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	c3                   	ret    $/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a <kbd_intr>:$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	55                   	push   %ebp$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	89 e5                	mov    %esp,%ebp$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	b8 25 04 10 f0       	mov    $0xf0100425,%eax$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	e8 e0 fc ff ff       	call   f010022a <cons_intr>$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	c9                   	leave  $/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	c3                   	ret    $/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c <cons_getc>:$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	55                   	push   %ebp$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	89 e5                	mov    %esp,%ebp$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	e8 c8 ff ff ff       	call   f010051f <serial_intr>$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	e8 de ff ff ff       	call   f010053a <kbd_intr>$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	8b 15 80 b1 1e f0    	mov    0xf01eb180,%edx$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	3b 15 84 b1 1e f0    	cmp    0xf01eb184,%edx$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	74 22                	je     f010058c <cons_getc+0x40>$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	0f b6 82 80 af 1e f0 	movzbl -0xfe15080(%edx),%eax$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	42                   	inc    %edx$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	89 15 80 b1 1e f0    	mov    %edx,0xf01eb180$/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	75 11                	jne    f0100591 <cons_getc+0x45>$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	c7 05 80 b1 1e f0 00 	movl   $0x0,0xf01eb180$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	00 00 00 $/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	eb 05                	jmp    f0100591 <cons_getc+0x45>$/;"	l
f010058c	obj/kern/kernel.asm	/^f010058c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	c9                   	leave  $/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	c3                   	ret    $/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593 <cons_init>:$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	55                   	push   %ebp$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	89 e5                	mov    %esp,%ebp$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	57                   	push   %edi$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	56                   	push   %esi$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	53                   	push   %ebx$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	5a a5 $/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	74 11                	je     f01005c9 <cons_init+0x36>$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	c7 05 8c b1 1e f0 b4 	movl   $0x3b4,0xf01eb18c$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	03 00 00 $/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	eb 16                	jmp    f01005df <cons_init+0x4c>$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	c7 05 8c b1 1e f0 d4 	movl   $0x3d4,0xf01eb18c$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	03 00 00 $/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	8b 0d 8c b1 1e f0    	mov    0xf01eb18c,%ecx$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	b0 0e                	mov    $0xe,%al$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	89 ca                	mov    %ecx,%edx$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	ee                   	out    %al,(%dx)$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	89 da                	mov    %ebx,%edx$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	ec                   	in     (%dx),%al$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	0f b6 f8             	movzbl %al,%edi$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	b0 0f                	mov    $0xf,%al$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	89 ca                	mov    %ecx,%edx$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	ee                   	out    %al,(%dx)$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	89 da                	mov    %ebx,%edx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	ec                   	in     (%dx),%al$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	89 35 90 b1 1e f0    	mov    %esi,0xf01eb190$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	09 df                	or     %ebx,%edi$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	66 89 3d 94 b1 1e f0 	mov    %di,0xf01eb194$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	b0 00                	mov    $0x0,%al$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	89 da                	mov    %ebx,%edx$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	ee                   	out    %al,(%dx)$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	b0 80                	mov    $0x80,%al$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	ee                   	out    %al,(%dx)$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	b0 0c                	mov    $0xc,%al$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	89 ca                	mov    %ecx,%edx$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	ee                   	out    %al,(%dx)$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	b0 00                	mov    $0x0,%al$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	ee                   	out    %al,(%dx)$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	b0 03                	mov    $0x3,%al$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	ee                   	out    %al,(%dx)$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	b0 00                	mov    $0x0,%al$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	ee                   	out    %al,(%dx)$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	b0 01                	mov    $0x1,%al$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	ee                   	out    %al,(%dx)$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	b2 fd                	mov    $0xfd,%dl$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	ec                   	in     (%dx),%al$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	3c ff                	cmp    $0xff,%al$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	a2 60 af 1e f0       	mov    %al,0xf01eaf60$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	89 da                	mov    %ebx,%edx$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	ec                   	in     (%dx),%al$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	89 ca                	mov    %ecx,%edx$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	ec                   	in     (%dx),%al$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	75 0c                	jne    f0100666 <cons_init+0xd3>$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	c7 04 24 88 53 10 f0 	movl   $0xf0105388,(%esp)$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	e8 8c 30 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	5b                   	pop    %ebx$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	5e                   	pop    %esi$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	5f                   	pop    %edi$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	5d                   	pop    %ebp$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	c3                   	ret    $/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e <cputchar>:$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	55                   	push   %ebp$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	e8 ef fb ff ff       	call   f010026b <cons_putc>$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c9                   	leave  $/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	c3                   	ret    $/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e <getchar>:$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	55                   	push   %ebp$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	e8 c3 fe ff ff       	call   f010054c <cons_getc>$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	85 c0                	test   %eax,%eax$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	74 f7                	je     f0100684 <getchar+0x6>$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	c9                   	leave  $/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	c3                   	ret    $/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f <iscons>:$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	55                   	push   %ebp$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	89 e5                	mov    %esp,%ebp$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	5d                   	pop    %ebp$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	c3                   	ret    $/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	00 00                	add    %al,(%eax)$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c <mon_kerninfo>:$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	55                   	push   %ebp$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	89 e5                	mov    %esp,%ebp$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	c7 04 24 d0 55 10 f0 	movl   $0xf01055d0,(%esp)$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	e8 44 30 00 00       	call   f01036f2 <cprintf>$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	00 $/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	c7 04 24 5c 56 10 f0 	movl   $0xf010565c,(%esp)$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	e8 30 30 00 00       	call   f01036f2 <cprintf>$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	00 $/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	f0 $/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	c7 04 24 84 56 10 f0 	movl   $0xf0105684,(%esp)$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	e8 14 30 00 00       	call   f01036f2 <cprintf>$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	c7 44 24 08 d6 51 10 	movl   $0x1051d6,0x8(%esp)$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	00 $/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c7 44 24 04 d6 51 10 	movl   $0xf01051d6,0x4(%esp)$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	f0 $/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	c7 04 24 a8 56 10 f0 	movl   $0xf01056a8,(%esp)$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	e8 f8 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	c7 44 24 08 55 af 1e 	movl   $0x1eaf55,0x8(%esp)$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	00 $/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	c7 44 24 04 55 af 1e 	movl   $0xf01eaf55,0x4(%esp)$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	f0 $/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	c7 04 24 cc 56 10 f0 	movl   $0xf01056cc,(%esp)$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	e8 dc 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	c7 44 24 08 80 b8 1f 	movl   $0x1fb880,0x8(%esp)$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	00 $/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	c7 44 24 04 80 b8 1f 	movl   $0xf01fb880,0x4(%esp)$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	f0 $/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	c7 04 24 f0 56 10 f0 	movl   $0xf01056f0,(%esp)$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	e8 c0 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	b8 7f bc 1f f0       	mov    $0xf01fbc7f,%eax$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	89 c2                	mov    %eax,%edx$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	85 c0                	test   %eax,%eax$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	79 06                	jns    f010074d <mon_kerninfo+0xb1>$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	c7 04 24 14 57 10 f0 	movl   $0xf0105714,(%esp)$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	e8 92 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	c9                   	leave  $/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	c3                   	ret    $/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767 <mon_help>:$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	55                   	push   %ebp$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	89 e5                	mov    %esp,%ebp$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	c7 44 24 08 e9 55 10 	movl   $0xf01055e9,0x8(%esp)$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	f0 $/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	c7 44 24 04 07 56 10 	movl   $0xf0105607,0x4(%esp)$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	f0 $/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	c7 04 24 0c 56 10 f0 	movl   $0xf010560c,(%esp)$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	e8 69 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	c7 44 24 08 40 57 10 	movl   $0xf0105740,0x8(%esp)$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	f0 $/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	c7 44 24 04 15 56 10 	movl   $0xf0105615,0x4(%esp)$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	f0 $/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	c7 04 24 0c 56 10 f0 	movl   $0xf010560c,(%esp)$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	e8 4d 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	c9                   	leave  $/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	c3                   	ret    $/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac <mon_backtrace>:$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	55                   	push   %ebp$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	5d                   	pop    %ebp$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	c3                   	ret    $/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6 <monitor>:$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	55                   	push   %ebp$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	57                   	push   %edi$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	56                   	push   %esi$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	53                   	push   %ebx$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	c7 04 24 68 57 10 f0 	movl   $0xf0105768,(%esp)$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	e8 24 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	c7 04 24 8c 57 10 f0 	movl   $0xf010578c,(%esp)$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	e8 18 2f 00 00       	call   f01036f2 <cprintf>$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	85 ff                	test   %edi,%edi$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	74 08                	je     f01007e6 <monitor+0x30>$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	e8 34 30 00 00       	call   f010381a <print_trapframe>$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	c7 04 24 1e 56 10 f0 	movl   $0xf010561e,(%esp)$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	e8 76 43 00 00       	call   f0104b68 <readline>$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	89 c3                	mov    %eax,%ebx$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	85 c0                	test   %eax,%eax$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	74 ee                	je     f01007e6 <monitor+0x30>$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	eb 04                	jmp    f010080a <monitor+0x54>$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	43                   	inc    %ebx$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	8a 03                	mov    (%ebx),%al$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	84 c0                	test   %al,%al$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	74 5e                	je     f010086e <monitor+0xb8>$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	0f be c0             	movsbl %al,%eax$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100817	obj/kern/kernel.asm	/^f0100817:	c7 04 24 22 56 10 f0 	movl   $0xf0105622,(%esp)$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	e8 3a 45 00 00       	call   f0104d5d <strchr>$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	85 c0                	test   %eax,%eax$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	75 df                	jne    f0100806 <monitor+0x50>$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	74 42                	je     f010086e <monitor+0xb8>$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	75 16                	jne    f0100847 <monitor+0x91>$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	00 $/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	c7 04 24 27 56 10 f0 	movl   $0xf0105627,(%esp)$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	e8 ad 2e 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	eb 9f                	jmp    f01007e6 <monitor+0x30>$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	46                   	inc    %esi$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	eb 01                	jmp    f010084f <monitor+0x99>$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	43                   	inc    %ebx$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	8a 03                	mov    (%ebx),%al$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	84 c0                	test   %al,%al$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	74 b5                	je     f010080a <monitor+0x54>$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	0f be c0             	movsbl %al,%eax$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	c7 04 24 22 56 10 f0 	movl   $0xf0105622,(%esp)$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	e8 f5 44 00 00       	call   f0104d5d <strchr>$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	85 c0                	test   %eax,%eax$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	74 e2                	je     f010084e <monitor+0x98>$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	eb 9c                	jmp    f010080a <monitor+0x54>$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	00 $/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	85 f6                	test   %esi,%esi$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	0f 84 68 ff ff ff    	je     f01007e6 <monitor+0x30>$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	c7 44 24 04 07 56 10 	movl   $0xf0105607,0x4(%esp)$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	f0 $/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	e8 79 44 00 00       	call   f0104d0a <strcmp>$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	85 c0                	test   %eax,%eax$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	74 1b                	je     f01008b0 <monitor+0xfa>$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	c7 44 24 04 15 56 10 	movl   $0xf0105615,0x4(%esp)$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	f0 $/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	e8 62 44 00 00       	call   f0104d0a <strcmp>$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	85 c0                	test   %eax,%eax$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	75 2c                	jne    f01008d8 <monitor+0x122>$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	b0 01                	mov    $0x1,%al$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	eb 05                	jmp    f01008b5 <monitor+0xff>$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	01 d0                	add    %edx,%eax$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	ff 14 85 bc 57 10 f0 	call   *-0xfefa844(,%eax,4)$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	85 c0                	test   %eax,%eax$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	78 1d                	js     f01008f0 <monitor+0x13a>$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	e9 0e ff ff ff       	jmp    f01007e6 <monitor+0x30>$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	c7 04 24 44 56 10 f0 	movl   $0xf0105644,(%esp)$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	e8 07 2e 00 00       	call   f01036f2 <cprintf>$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	e9 f6 fe ff ff       	jmp    f01007e6 <monitor+0x30>$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	5b                   	pop    %ebx$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	5e                   	pop    %esi$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	5f                   	pop    %edi$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	5d                   	pop    %ebp$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	c3                   	ret    $/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8 <boot_alloc>:$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	55                   	push   %ebp$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	53                   	push   %ebx$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	83 ec 24             	sub    $0x24,%esp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	89 c3                	mov    %eax,%ebx$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	83 3d 9c b1 1e f0 00 	cmpl   $0x0,0xf01eb19c$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	75 0f                	jne    f0100919 <boot_alloc+0x21>$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	b8 7f c8 1f f0       	mov    $0xf01fc87f,%eax$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	a3 9c b1 1e f0       	mov    %eax,0xf01eb19c$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	85 db                	test   %ebx,%ebx$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	75 07                	jne    f0100924 <boot_alloc+0x2c>$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	a1 9c b1 1e f0       	mov    0xf01eb19c,%eax$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	eb 45                	jmp    f0100969 <boot_alloc+0x71>$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	c7 44 24 10 6c 00 00 	movl   $0x6c,0x10(%esp)$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	00 $/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	c7 44 24 0c e1 62 10 	movl   $0xf01062e1,0xc(%esp)$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	f0 $/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	c7 44 24 08 cc 57 10 	movl   $0xf01057cc,0x8(%esp)$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	f0 $/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	a1 9c b1 1e f0       	mov    0xf01eb19c,%eax$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	c7 04 24 f0 5a 10 f0 	movl   $0xf0105af0,(%esp)$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	e8 a1 2d 00 00       	call   f01036f2 <cprintf>$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	a1 9c b1 1e f0       	mov    0xf01eb19c,%eax$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	8d 94 18 ff 0f 00 00 	lea    0xfff(%eax,%ebx,1),%edx$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	89 15 9c b1 1e f0    	mov    %edx,0xf01eb19c$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	83 c4 24             	add    $0x24,%esp$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	5b                   	pop    %ebx$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	5d                   	pop    %ebp$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	c3                   	ret    $/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f <check_va2pa>:$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	55                   	push   %ebp$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	89 e5                	mov    %esp,%ebp$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	89 d1                	mov    %edx,%ecx$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	a8 01                	test   $0x1,%al$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	74 4d                	je     f01009ce <check_va2pa+0x5f>$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	89 c1                	mov    %eax,%ecx$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	3b 0d 44 be 1e f0    	cmp    0xf01ebe44,%ecx$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	72 20                	jb     f01009b3 <check_va2pa+0x44>$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	f0 $/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	c7 44 24 04 67 03 00 	movl   $0x367,0x4(%esp)$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	00 $/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	e8 a7 f7 ff ff       	call   f010015a <_panic>$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	a8 01                	test   $0x1,%al$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	74 0e                	je     f01009d5 <check_va2pa+0x66>$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	eb 0c                	jmp    f01009da <check_va2pa+0x6b>$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	eb 05                	jmp    f01009da <check_va2pa+0x6b>$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	c9                   	leave  $/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	c3                   	ret    $/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc <nvram_read>:$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	55                   	push   %ebp$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	56                   	push   %esi$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	53                   	push   %ebx$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	89 c3                	mov    %eax,%ebx$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	e8 96 2c 00 00       	call   f0103684 <mc146818_read>$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	89 c6                	mov    %eax,%esi$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	43                   	inc    %ebx$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	e8 8b 2c 00 00       	call   f0103684 <mc146818_read>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	09 f0                	or     %esi,%eax$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	5b                   	pop    %ebx$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	5e                   	pop    %esi$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	5d                   	pop    %ebp$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	c3                   	ret    $/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05 <check_page_free_list>:$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	55                   	push   %ebp$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	57                   	push   %edi$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	56                   	push   %esi$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	53                   	push   %ebx$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	3c 01                	cmp    $0x1,%al$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	19 f6                	sbb    %esi,%esi$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	46                   	inc    %esi$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	8b 15 a0 b1 1e f0    	mov    0xf01eb1a0,%edx$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	85 d2                	test   %edx,%edx$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	75 1c                	jne    f0100a3f <check_page_free_list+0x3a>$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	c7 44 24 08 48 5b 10 	movl   $0xf0105b48,0x8(%esp)$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	f0 $/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	c7 44 24 04 a3 02 00 	movl   $0x2a3,0x4(%esp)$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	00 $/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	e8 1b f7 ff ff       	call   f010015a <_panic>$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	84 c0                	test   %al,%al$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	74 4b                	je     f0100a8e <check_page_free_list+0x89>$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	89 d0                	mov    %edx,%eax$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	39 c6                	cmp    %eax,%esi$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	0f 96 c0             	setbe  %al$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	8b 4c 85 d8          	mov    -0x28(%ebp,%eax,4),%ecx$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	89 11                	mov    %edx,(%ecx)$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	89 54 85 d8          	mov    %edx,-0x28(%ebp,%eax,4)$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	8b 12                	mov    (%edx),%edx$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	85 d2                	test   %edx,%edx$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	75 da                	jne    f0100a4f <check_page_free_list+0x4a>$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	89 10                	mov    %edx,(%eax)$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	a3 a0 b1 1e f0       	mov    %eax,0xf01eb1a0$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	8b 1d a0 b1 1e f0    	mov    0xf01eb1a0,%ebx$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	eb 63                	jmp    f0100af9 <check_page_free_list+0xf4>$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	89 d8                	mov    %ebx,%eax$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	89 c2                	mov    %eax,%edx$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	39 d6                	cmp    %edx,%esi$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	76 4a                	jbe    f0100af7 <check_page_free_list+0xf2>$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	89 c2                	mov    %eax,%edx$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	3b 15 44 be 1e f0    	cmp    0xf01ebe44,%edx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	72 20                	jb     f0100ada <check_page_free_list+0xd5>$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	f0 $/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	00 $/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	e8 80 f6 ff ff       	call   f010015a <_panic>$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	00 $/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	00 $/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	e8 9b 42 00 00       	call   f0104d92 <memset>$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	85 db                	test   %ebx,%ebx$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	75 99                	jne    f0100a96 <check_page_free_list+0x91>$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	e8 f1 fd ff ff       	call   f01008f8 <boot_alloc>$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	8b 15 a0 b1 1e f0    	mov    0xf01eb1a0,%edx$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	8b 0d 4c be 1e f0    	mov    0xf01ebe4c,%ecx$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	a1 44 be 1e f0       	mov    0xf01ebe44,%eax$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	e9 91 01 00 00       	jmp    f0100cc5 <check_page_free_list+0x2c0>$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	73 24                	jae    f0100b5d <check_page_free_list+0x158>$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	c7 44 24 0c e6 57 10 	movl   $0xf01057e6,0xc(%esp)$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	f0 $/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	f0 $/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	c7 44 24 04 bd 02 00 	movl   $0x2bd,0x4(%esp)$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	00 $/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	e8 fd f5 ff ff       	call   f010015a <_panic>$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	72 24                	jb     f0100b86 <check_page_free_list+0x181>$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	c7 44 24 0c 07 58 10 	movl   $0xf0105807,0xc(%esp)$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	f0 $/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	f0 $/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	c7 44 24 04 be 02 00 	movl   $0x2be,0x4(%esp)$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	00 $/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	e8 d4 f5 ff ff       	call   f010015a <_panic>$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	89 d0                	mov    %edx,%eax$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	a8 07                	test   $0x7,%al$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	74 24                	je     f0100bb3 <check_page_free_list+0x1ae>$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	c7 44 24 0c 6c 5b 10 	movl   $0xf0105b6c,0xc(%esp)$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	f0 $/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	f0 $/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	c7 44 24 04 bf 02 00 	movl   $0x2bf,0x4(%esp)$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	00 $/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	e8 a7 f5 ff ff       	call   f010015a <_panic>$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	75 24                	jne    f0100bdf <check_page_free_list+0x1da>$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	c7 44 24 0c 1b 58 10 	movl   $0xf010581b,0xc(%esp)$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	f0 $/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	f0 $/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	c7 44 24 04 c2 02 00 	movl   $0x2c2,0x4(%esp)$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	00 $/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	e8 7b f5 ff ff       	call   f010015a <_panic>$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	75 24                	jne    f0100c0a <check_page_free_list+0x205>$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	c7 44 24 0c 2c 58 10 	movl   $0xf010582c,0xc(%esp)$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	f0 $/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	f0 $/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	c7 44 24 04 c3 02 00 	movl   $0x2c3,0x4(%esp)$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	00 $/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	e8 50 f5 ff ff       	call   f010015a <_panic>$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	75 24                	jne    f0100c35 <check_page_free_list+0x230>$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	c7 44 24 0c a0 5b 10 	movl   $0xf0105ba0,0xc(%esp)$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	f0 $/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	f0 $/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	c7 44 24 04 c4 02 00 	movl   $0x2c4,0x4(%esp)$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	00 $/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	e8 25 f5 ff ff       	call   f010015a <_panic>$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	75 24                	jne    f0100c60 <check_page_free_list+0x25b>$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	c7 44 24 0c 45 58 10 	movl   $0xf0105845,0xc(%esp)$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	f0 $/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	f0 $/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	c7 44 24 04 c5 02 00 	movl   $0x2c5,0x4(%esp)$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	00 $/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	e8 fa f4 ff ff       	call   f010015a <_panic>$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	76 58                	jbe    f0100cbf <check_page_free_list+0x2ba>$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	77 20                	ja     f0100c91 <check_page_free_list+0x28c>$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	f0 $/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	00 $/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	e8 c9 f4 ff ff       	call   f010015a <_panic>$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	39 45 c4             	cmp    %eax,-0x3c(%ebp)$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	76 27                	jbe    f0100cc2 <check_page_free_list+0x2bd>$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	c7 44 24 0c c4 5b 10 	movl   $0xf0105bc4,0xc(%esp)$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	f0 $/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	f0 $/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	c7 44 24 04 c6 02 00 	movl   $0x2c6,0x4(%esp)$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	00 $/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	e8 9b f4 ff ff       	call   f010015a <_panic>$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	46                   	inc    %esi$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	eb 01                	jmp    f0100cc3 <check_page_free_list+0x2be>$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	43                   	inc    %ebx$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	8b 12                	mov    (%edx),%edx$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	85 d2                	test   %edx,%edx$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	0f 85 67 fe ff ff    	jne    f0100b34 <check_page_free_list+0x12f>$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	85 f6                	test   %esi,%esi$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	7f 24                	jg     f0100cf5 <check_page_free_list+0x2f0>$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	c7 44 24 0c 5f 58 10 	movl   $0xf010585f,0xc(%esp)$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	f0 $/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	f0 $/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	c7 44 24 04 ce 02 00 	movl   $0x2ce,0x4(%esp)$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	00 $/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	e8 65 f4 ff ff       	call   f010015a <_panic>$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	85 db                	test   %ebx,%ebx$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	7f 24                	jg     f0100d1d <check_page_free_list+0x318>$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	c7 44 24 0c 71 58 10 	movl   $0xf0105871,0xc(%esp)$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	f0 $/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	f0 $/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	c7 44 24 04 cf 02 00 	movl   $0x2cf,0x4(%esp)$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	00 $/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	e8 3d f4 ff ff       	call   f010015a <_panic>$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	5b                   	pop    %ebx$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	5e                   	pop    %esi$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	5f                   	pop    %edi$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	5d                   	pop    %ebp$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	c3                   	ret    $/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25 <page_init>:$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	55                   	push   %ebp$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	57                   	push   %edi$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	56                   	push   %esi$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	53                   	push   %ebx$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	a1 9c b1 1e f0       	mov    0xf01eb19c,%eax$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	89 c7                	mov    %eax,%edi$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	8b 1d a0 b1 1e f0    	mov    0xf01eb1a0,%ebx$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	e9 8d 00 00 00       	jmp    f0100de7 <page_init+0xc2>$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	85 c0                	test   %eax,%eax$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	74 22                	je     f0100d80 <page_init+0x5b>$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	81 f9 ff ff 09 00    	cmp    $0x9ffff,%ecx$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	77 1a                	ja     f0100d80 <page_init+0x5b>$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	89 d6                	mov    %edx,%esi$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	03 35 4c be 1e f0    	add    0xf01ebe4c,%esi$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	89 d3                	mov    %edx,%ebx$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	03 1d 4c be 1e f0    	add    0xf01ebe4c,%ebx$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	eb 5d                	jmp    f0100ddd <page_init+0xb8>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	77 29                	ja     f0100db1 <page_init+0x8c>$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	89 1d a0 b1 1e f0    	mov    %ebx,0xf01eb1a0$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	f0 $/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	00 $/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	e8 a9 f3 ff ff       	call   f010015a <_panic>$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	3b 4d e4             	cmp    -0x1c(%ebp),%ecx$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	72 1a                	jb     f0100dd0 <page_init+0xab>$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	89 d6                	mov    %edx,%esi$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	03 35 4c be 1e f0    	add    0xf01ebe4c,%esi$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	89 d3                	mov    %edx,%ebx$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	03 1d 4c be 1e f0    	add    0xf01ebe4c,%ebx$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	eb 0d                	jmp    f0100ddd <page_init+0xb8>$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	8b 35 4c be 1e f0    	mov    0xf01ebe4c,%esi$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	66 c7 44 16 04 01 00 	movw   $0x1,0x4(%esi,%edx,1)$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	40                   	inc    %eax$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	83 c2 08             	add    $0x8,%edx$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	81 c1 00 10 00 00    	add    $0x1000,%ecx$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	0f 82 67 ff ff ff    	jb     f0100d5a <page_init+0x35>$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	89 1d a0 b1 1e f0    	mov    %ebx,0xf01eb1a0$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	5b                   	pop    %ebx$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	5e                   	pop    %esi$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	5f                   	pop    %edi$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	5d                   	pop    %ebp$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	c3                   	ret    $/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01 <page_alloc>:$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	55                   	push   %ebp$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	53                   	push   %ebx$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	8b 1d a0 b1 1e f0    	mov    0xf01eb1a0,%ebx$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	85 db                	test   %ebx,%ebx$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	74 7d                	je     f0100e8f <page_alloc+0x8e>$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	a3 a0 b1 1e f0       	mov    %eax,0xf01eb1a0$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	00 $/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	00 $/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	e8 61 3f 00 00       	call   f0104d92 <memset>$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	74 58                	je     f0100e8f <page_alloc+0x8e>$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	89 d8                	mov    %ebx,%eax$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	89 c2                	mov    %eax,%edx$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	3b 15 44 be 1e f0    	cmp    0xf01ebe44,%edx$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	72 20                	jb     f0100e72 <page_alloc+0x71>$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	f0 $/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	00 $/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	e8 e8 f2 ff ff       	call   f010015a <_panic>$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	00 $/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	00 $/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	e8 03 3f 00 00       	call   f0104d92 <memset>$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	5b                   	pop    %ebx$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	5d                   	pop    %ebp$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	c3                   	ret    $/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97 <page_free>:$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	55                   	push   %ebp$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	74 24                	je     f0100ec9 <page_free+0x32>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	c7 44 24 0c 82 58 10 	movl   $0xf0105882,0xc(%esp)$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	f0 $/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	f0 $/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	c7 44 24 04 60 01 00 	movl   $0x160,0x4(%esp)$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	00 $/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	e8 91 f2 ff ff       	call   f010015a <_panic>$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	74 24                	je     f0100ef4 <page_free+0x5d>$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	c7 44 24 0c 96 58 10 	movl   $0xf0105896,0xc(%esp)$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	f0 $/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	f0 $/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	c7 44 24 04 61 01 00 	movl   $0x161,0x4(%esp)$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	00 $/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	e8 66 f2 ff ff       	call   f010015a <_panic>$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	8b 15 a0 b1 1e f0    	mov    0xf01eb1a0,%edx$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 10                	mov    %edx,(%eax)$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	a3 a0 b1 1e f0       	mov    %eax,0xf01eb1a0$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	c9                   	leave  $/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	c3                   	ret    $/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03 <page_decref>:$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	55                   	push   %ebp$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	4a                   	dec    %edx$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	66 85 d2             	test   %dx,%dx$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	75 08                	jne    f0100f21 <page_decref+0x1e>$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	e8 76 ff ff ff       	call   f0100e97 <page_free>$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	c9                   	leave  $/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	c3                   	ret    $/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23 <pgdir_walk>:$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	55                   	push   %ebp$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	56                   	push   %esi$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	53                   	push   %ebx$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	89 f3                	mov    %esi,%ebx$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	a8 01                	test   $0x1,%al$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	74 44                	je     f0100f83 <pgdir_walk+0x60>$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	89 c2                	mov    %eax,%edx$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	3b 15 44 be 1e f0    	cmp    0xf01ebe44,%edx$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	72 20                	jb     f0100f71 <pgdir_walk+0x4e>$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	f0 $/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	c7 44 24 04 a4 01 00 	movl   $0x1a4,0x4(%esp)$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	00 $/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	e8 e9 f1 ff ff       	call   f010015a <_panic>$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	eb 78                	jmp    f0100ffb <pgdir_walk+0xd8>$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	75 66                	jne    f0100fef <pgdir_walk+0xcc>$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	e8 6c fe ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	85 c0                	test   %eax,%eax$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	74 5d                	je     f0100ff6 <pgdir_walk+0xd3>$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	89 c2                	mov    %eax,%edx$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	89 d0                	mov    %edx,%eax$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	72 20                	jb     f0100fd8 <pgdir_walk+0xb5>$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	f0 $/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	00 $/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	e8 82 f1 ff ff       	call   f010015a <_panic>$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	8d 84 32 00 00 00 f0 	lea    -0x10000000(%edx,%esi,1),%eax$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	83 ca 07             	or     $0x7,%edx$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	89 13                	mov    %edx,(%ebx)$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	eb 0c                	jmp    f0100ffb <pgdir_walk+0xd8>$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	eb 05                	jmp    f0100ffb <pgdir_walk+0xd8>$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	5b                   	pop    %ebx$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	5e                   	pop    %esi$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	5d                   	pop    %ebp$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	c3                   	ret    $/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002 <boot_map_region>:$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	55                   	push   %ebp$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	89 e5                	mov    %esp,%ebp$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	57                   	push   %edi$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	56                   	push   %esi$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	53                   	push   %ebx$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	89 d3                	mov    %edx,%ebx$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	83 f9 ff             	cmp    $0xffffffff,%ecx$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	74 07                	je     f010101f <boot_map_region+0x1d>$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	89 ce                	mov    %ecx,%esi$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	eb 02                	jmp    f0101021 <boot_map_region+0x1f>$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	89 ce                	mov    %ecx,%esi$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	c7 04 24 a6 58 10 f0 	movl   $0xf01058a6,(%esp)$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	e8 c1 26 00 00       	call   f01036f2 <cprintf>$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	83 c8 01             	or     $0x1,%eax$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	eb 39                	jmp    f010107d <boot_map_region+0x7b>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	00 $/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	e8 c8 fe ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	89 da                	mov    %ebx,%edx$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	89 f9                	mov    %edi,%ecx$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	29 d1                	sub    %edx,%ecx$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	89 ca                	mov    %ecx,%edx$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	0b 55 dc             	or     -0x24(%ebp),%edx$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	89 10                	mov    %edx,(%eax)$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	46                   	inc    %esi$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	74 0b                	je     f0101082 <boot_map_region+0x80>$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	75 c2                	jne    f0101044 <boot_map_region+0x42>$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	c7 04 24 b2 58 10 f0 	movl   $0xf01058b2,(%esp)$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	e8 60 26 00 00       	call   f01036f2 <cprintf>$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	5b                   	pop    %ebx$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	5e                   	pop    %esi$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	5f                   	pop    %edi$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	5d                   	pop    %ebp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	c3                   	ret    $/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a <page_lookup>:$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	55                   	push   %ebp$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	89 e5                	mov    %esp,%ebp$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	53                   	push   %ebx$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	00 $/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	e8 65 fe ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	85 c0                	test   %eax,%eax$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	74 3f                	je     f0101101 <page_lookup+0x67>$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	74 41                	je     f0101108 <page_lookup+0x6e>$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	85 db                	test   %ebx,%ebx$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	74 02                	je     f01010cd <page_lookup+0x33>$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	89 03                	mov    %eax,(%ebx)$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	8b 00                	mov    (%eax),%eax$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	72 1c                	jb     f01010f6 <page_lookup+0x5c>$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	c7 44 24 08 30 5c 10 	movl   $0xf0105c30,0x8(%esp)$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	f0 $/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	00 $/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	e8 64 f0 ff ff       	call   f010015a <_panic>$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	03 05 4c be 1e f0    	add    0xf01ebe4c,%eax$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	eb 0c                	jmp    f010110d <page_lookup+0x73>$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	eb 05                	jmp    f010110d <page_lookup+0x73>$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	5b                   	pop    %ebx$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	5d                   	pop    %ebp$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	c3                   	ret    $/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113 <tlb_invalidate>:$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	55                   	push   %ebp$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	89 e5                	mov    %esp,%ebp$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	0f 01 38             	invlpg (%eax)$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	5d                   	pop    %ebp$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	c3                   	ret    $/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e <page_remove>:$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	55                   	push   %ebp$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	56                   	push   %esi$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	53                   	push   %ebx$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	e8 5b ff ff ff       	call   f010109a <page_lookup>$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	85 c0                	test   %eax,%eax$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	74 1d                	je     f0101160 <page_remove+0x42>$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	e8 b8 fd ff ff       	call   f0100f03 <page_decref>$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	e8 b3 ff ff ff       	call   f0101113 <tlb_invalidate>$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	5b                   	pop    %ebx$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	5e                   	pop    %esi$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	5d                   	pop    %ebp$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	c3                   	ret    $/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167 <page_insert>:$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	55                   	push   %ebp$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	89 e5                	mov    %esp,%ebp$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	57                   	push   %edi$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	56                   	push   %esi$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	53                   	push   %ebx$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	00 $/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	e8 96 fd ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	89 c3                	mov    %eax,%ebx$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	85 c0                	test   %eax,%eax$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	74 6f                	je     f0101202 <page_insert+0x9b>$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	8b 00                	mov    (%eax),%eax$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	a8 01                	test   $0x1,%al$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	74 46                	je     f01011df <page_insert+0x78>$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	89 f2                	mov    %esi,%edx$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	39 d0                	cmp    %edx,%eax$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	75 11                	jne    f01011c1 <page_insert+0x5a>$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	83 ca 01             	or     $0x1,%edx$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	09 d0                	or     %edx,%eax$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	eb 46                	jmp    f0101207 <page_insert+0xa0>$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	e8 4e ff ff ff       	call   f010111e <page_remove>$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	e8 34 ff ff ff       	call   f0101113 <tlb_invalidate>$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	83 c8 01             	or     $0x1,%eax$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	89 f2                	mov    %esi,%edx$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	09 d0                	or     %edx,%eax$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	eb 05                	jmp    f0101207 <page_insert+0xa0>$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	5b                   	pop    %ebx$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	5e                   	pop    %esi$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	5f                   	pop    %edi$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	5d                   	pop    %ebp$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	c3                   	ret    $/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f <mem_init>:$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	55                   	push   %ebp$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	89 e5                	mov    %esp,%ebp$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	57                   	push   %edi$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	56                   	push   %esi$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	53                   	push   %ebx$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	e8 ba f7 ff ff       	call   f01009dc <nvram_read>$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	89 c2                	mov    %eax,%edx$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	85 c0                	test   %eax,%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	79 06                	jns    f0101231 <mem_init+0x22>$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	89 15 98 b1 1e f0    	mov    %edx,0xf01eb198$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	e8 98 f7 ff ff       	call   f01009dc <nvram_read>$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	89 c2                	mov    %eax,%edx$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	89 d0                	mov    %edx,%eax$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	85 d2                	test   %edx,%edx$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	79 06                	jns    f0101255 <mem_init+0x46>$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	74 0e                	je     f0101268 <mem_init+0x59>$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	89 15 44 be 1e f0    	mov    %edx,0xf01ebe44$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	eb 0c                	jmp    f0101274 <mem_init+0x65>$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	8b 15 98 b1 1e f0    	mov    0xf01eb198,%edx$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	89 15 44 be 1e f0    	mov    %edx,0xf01ebe44$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	a1 98 b1 1e f0       	mov    0xf01eb198,%eax$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	a1 44 be 1e f0       	mov    0xf01ebe44,%eax$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	c7 04 24 50 5c 10 f0 	movl   $0xf0105c50,(%esp)$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	e8 4a 24 00 00       	call   f01036f2 <cprintf>$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	e8 46 f6 ff ff       	call   f01008f8 <boot_alloc>$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	a3 48 be 1e f0       	mov    %eax,0xf01ebe48$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	00 $/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	00 $/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	e8 c3 3a 00 00       	call   f0104d92 <memset>$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	77 20                	ja     f01012fb <mem_init+0xec>$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	f0 $/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	00 $/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	e8 5f ee ff ff       	call   f010015a <_panic>$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	a1 44 be 1e f0       	mov    0xf01ebe44,%eax$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	e8 e1 f5 ff ff       	call   f01008f8 <boot_alloc>$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	a3 4c be 1e f0       	mov    %eax,0xf01ebe4c$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	b8 00 80 01 00       	mov    $0x18000,%eax$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	e8 d2 f5 ff ff       	call   f01008f8 <boot_alloc>$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	a3 a8 b1 1e f0       	mov    %eax,0xf01eb1a8$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	e8 f5 f9 ff ff       	call   f0100d25 <page_init>$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	e8 cb f6 ff ff       	call   f0100a05 <check_page_free_list>$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	83 3d 4c be 1e f0 00 	cmpl   $0x0,0xf01ebe4c$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	75 1c                	jne    f010135f <mem_init+0x150>$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	c7 44 24 08 c3 58 10 	movl   $0xf01058c3,0x8(%esp)$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	f0 $/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	c7 44 24 04 e0 02 00 	movl   $0x2e0,0x4(%esp)$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	00 $/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	e8 fb ed ff ff       	call   f010015a <_panic>$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	a1 a0 b1 1e f0       	mov    0xf01eb1a0,%eax$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	eb 03                	jmp    f010136e <mem_init+0x15f>$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	43                   	inc    %ebx$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	8b 00                	mov    (%eax),%eax$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	85 c0                	test   %eax,%eax$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	75 f9                	jne    f010136b <mem_init+0x15c>$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	e8 83 fa ff ff       	call   f0100e01 <page_alloc>$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	89 c6                	mov    %eax,%esi$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	85 c0                	test   %eax,%eax$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	75 24                	jne    f01013a8 <mem_init+0x199>$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	c7 44 24 0c de 58 10 	movl   $0xf01058de,0xc(%esp)$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	f0 $/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	f0 $/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	c7 44 24 04 e8 02 00 	movl   $0x2e8,0x4(%esp)$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	00 $/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	e8 b2 ed ff ff       	call   f010015a <_panic>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	e8 4d fa ff ff       	call   f0100e01 <page_alloc>$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	89 c7                	mov    %eax,%edi$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	85 c0                	test   %eax,%eax$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	75 24                	jne    f01013de <mem_init+0x1cf>$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	c7 44 24 0c f4 58 10 	movl   $0xf01058f4,0xc(%esp)$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	f0 $/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	f0 $/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	c7 44 24 04 e9 02 00 	movl   $0x2e9,0x4(%esp)$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	00 $/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	e8 7c ed ff ff       	call   f010015a <_panic>$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	e8 17 fa ff ff       	call   f0100e01 <page_alloc>$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	85 c0                	test   %eax,%eax$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	75 24                	jne    f0101415 <mem_init+0x206>$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	c7 44 24 0c 0a 59 10 	movl   $0xf010590a,0xc(%esp)$/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	f0 $/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	f0 $/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	c7 44 24 04 ea 02 00 	movl   $0x2ea,0x4(%esp)$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	00 $/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	e8 45 ed ff ff       	call   f010015a <_panic>$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	39 fe                	cmp    %edi,%esi$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	75 24                	jne    f010143d <mem_init+0x22e>$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	c7 44 24 0c 20 59 10 	movl   $0xf0105920,0xc(%esp)$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	f0 $/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	f0 $/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	c7 44 24 04 ed 02 00 	movl   $0x2ed,0x4(%esp)$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	00 $/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	e8 1d ed ff ff       	call   f010015a <_panic>$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	74 05                	je     f0101447 <mem_init+0x238>$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	75 24                	jne    f010146b <mem_init+0x25c>$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	c7 44 24 0c 8c 5c 10 	movl   $0xf0105c8c,0xc(%esp)$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	f0 $/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	f0 $/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	c7 44 24 04 ee 02 00 	movl   $0x2ee,0x4(%esp)$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	00 $/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	e8 ef ec ff ff       	call   f010015a <_panic>$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	8b 15 4c be 1e f0    	mov    0xf01ebe4c,%edx$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	a1 44 be 1e f0       	mov    0xf01ebe44,%eax$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	89 f1                	mov    %esi,%ecx$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	29 d1                	sub    %edx,%ecx$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	72 24                	jb     f01014ab <mem_init+0x29c>$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	c7 44 24 0c 32 59 10 	movl   $0xf0105932,0xc(%esp)$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	f0 $/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	f0 $/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	c7 44 24 04 ef 02 00 	movl   $0x2ef,0x4(%esp)$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	00 $/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	e8 af ec ff ff       	call   f010015a <_panic>$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	89 f9                	mov    %edi,%ecx$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	29 d1                	sub    %edx,%ecx$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	39 c8                	cmp    %ecx,%eax$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	77 24                	ja     f01014dd <mem_init+0x2ce>$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	c7 44 24 0c 4f 59 10 	movl   $0xf010594f,0xc(%esp)$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	f0 $/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	f0 $/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	00 $/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	e8 7d ec ff ff       	call   f010015a <_panic>$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	29 d1                	sub    %edx,%ecx$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	89 ca                	mov    %ecx,%edx$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	39 d0                	cmp    %edx,%eax$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	77 24                	ja     f0101512 <mem_init+0x303>$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	c7 44 24 0c 6c 59 10 	movl   $0xf010596c,0xc(%esp)$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	f0 $/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	f0 $/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	c7 44 24 04 f1 02 00 	movl   $0x2f1,0x4(%esp)$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	00 $/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	e8 48 ec ff ff       	call   f010015a <_panic>$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	a1 a0 b1 1e f0       	mov    0xf01eb1a0,%eax$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	c7 05 a0 b1 1e f0 00 	movl   $0x0,0xf01eb1a0$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	00 00 00 $/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	e8 d1 f8 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	85 c0                	test   %eax,%eax$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	74 24                	je     f0101558 <mem_init+0x349>$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	c7 44 24 0c 89 59 10 	movl   $0xf0105989,0xc(%esp)$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	f0 $/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	f0 $/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	00 $/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	e8 02 ec ff ff       	call   f010015a <_panic>$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	e8 37 f9 ff ff       	call   f0100e97 <page_free>$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	e8 2f f9 ff ff       	call   f0100e97 <page_free>$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	e8 24 f9 ff ff       	call   f0100e97 <page_free>$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	e8 82 f8 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	89 c6                	mov    %eax,%esi$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	85 c0                	test   %eax,%eax$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	75 24                	jne    f01015a9 <mem_init+0x39a>$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	c7 44 24 0c de 58 10 	movl   $0xf01058de,0xc(%esp)$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	f0 $/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	f0 $/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	00 $/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	e8 b1 eb ff ff       	call   f010015a <_panic>$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	e8 4c f8 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	89 c7                	mov    %eax,%edi$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	85 c0                	test   %eax,%eax$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	75 24                	jne    f01015df <mem_init+0x3d0>$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	c7 44 24 0c f4 58 10 	movl   $0xf01058f4,0xc(%esp)$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	f0 $/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	f0 $/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	00 $/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	e8 7b eb ff ff       	call   f010015a <_panic>$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	e8 16 f8 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	85 c0                	test   %eax,%eax$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	75 24                	jne    f0101616 <mem_init+0x407>$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	c7 44 24 0c 0a 59 10 	movl   $0xf010590a,0xc(%esp)$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	f0 $/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	f0 $/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	00 $/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	e8 44 eb ff ff       	call   f010015a <_panic>$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	39 fe                	cmp    %edi,%esi$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	75 24                	jne    f010163e <mem_init+0x42f>$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	c7 44 24 0c 20 59 10 	movl   $0xf0105920,0xc(%esp)$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	f0 $/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	f0 $/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	00 $/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	e8 1c eb ff ff       	call   f010015a <_panic>$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	74 05                	je     f0101648 <mem_init+0x439>$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	75 24                	jne    f010166c <mem_init+0x45d>$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	c7 44 24 0c 8c 5c 10 	movl   $0xf0105c8c,0xc(%esp)$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	f0 $/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	f0 $/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	c7 44 24 04 04 03 00 	movl   $0x304,0x4(%esp)$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	00 $/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	e8 ee ea ff ff       	call   f010015a <_panic>$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	e8 89 f7 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	85 c0                	test   %eax,%eax$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	74 24                	je     f01016a0 <mem_init+0x491>$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	c7 44 24 0c 89 59 10 	movl   $0xf0105989,0xc(%esp)$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	f0 $/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	f0 $/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	c7 44 24 04 05 03 00 	movl   $0x305,0x4(%esp)$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	00 $/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	e8 ba ea ff ff       	call   f010015a <_panic>$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	89 f0                	mov    %esi,%eax$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	89 c2                	mov    %eax,%edx$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	3b 15 44 be 1e f0    	cmp    0xf01ebe44,%edx$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	72 20                	jb     f01016db <mem_init+0x4cc>$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	f0 $/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	00 $/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	e8 7f ea ff ff       	call   f010015a <_panic>$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	00 $/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	00 $/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	e8 9a 36 00 00       	call   f0104d92 <memset>$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	e8 97 f7 ff ff       	call   f0100e97 <page_free>$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	e8 f5 f6 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	85 c0                	test   %eax,%eax$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	75 24                	jne    f0101734 <mem_init+0x525>$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	c7 44 24 0c 98 59 10 	movl   $0xf0105998,0xc(%esp)$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	f0 $/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	f0 $/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	c7 44 24 04 0a 03 00 	movl   $0x30a,0x4(%esp)$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	00 $/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	e8 26 ea ff ff       	call   f010015a <_panic>$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	39 c6                	cmp    %eax,%esi$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	74 24                	je     f010175c <mem_init+0x54d>$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	c7 44 24 0c b6 59 10 	movl   $0xf01059b6,0xc(%esp)$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	f0 $/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	f0 $/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	c7 44 24 04 0b 03 00 	movl   $0x30b,0x4(%esp)$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	00 $/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	e8 fe e9 ff ff       	call   f010015a <_panic>$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	89 f2                	mov    %esi,%edx$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	89 d0                	mov    %edx,%eax$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	72 20                	jb     f0101797 <mem_init+0x588>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	f0 $/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	00 $/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	e8 c3 e9 ff ff       	call   f010015a <_panic>$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	74 24                	je     f01017cc <mem_init+0x5bd>$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	c7 44 24 0c c6 59 10 	movl   $0xf01059c6,0xc(%esp)$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	f0 $/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	f0 $/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	00 $/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	e8 8e e9 ff ff       	call   f010015a <_panic>$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	40                   	inc    %eax$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	39 d0                	cmp    %edx,%eax$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	75 d2                	jne    f01017a3 <mem_init+0x594>$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	89 15 a0 b1 1e f0    	mov    %edx,0xf01eb1a0$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	e8 b5 f6 ff ff       	call   f0100e97 <page_free>$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	e8 ad f6 ff ff       	call   f0100e97 <page_free>$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	e8 a2 f6 ff ff       	call   f0100e97 <page_free>$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	a1 a0 b1 1e f0       	mov    0xf01eb1a0,%eax$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	eb 03                	jmp    f01017ff <mem_init+0x5f0>$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	4b                   	dec    %ebx$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	8b 00                	mov    (%eax),%eax$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	85 c0                	test   %eax,%eax$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	75 f9                	jne    f01017fc <mem_init+0x5ed>$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	85 db                	test   %ebx,%ebx$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	74 24                	je     f010182b <mem_init+0x61c>$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	c7 44 24 0c d0 59 10 	movl   $0xf01059d0,0xc(%esp)$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	f0 $/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	f0 $/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	00 $/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	e8 2f e9 ff ff       	call   f010015a <_panic>$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	c7 04 24 ac 5c 10 f0 	movl   $0xf0105cac,(%esp)$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	e8 bb 1e 00 00       	call   f01036f2 <cprintf>$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	e8 be f5 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	89 c7                	mov    %eax,%edi$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	85 c0                	test   %eax,%eax$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	75 24                	jne    f010186d <mem_init+0x65e>$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	c7 44 24 0c de 58 10 	movl   $0xf01058de,0xc(%esp)$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	f0 $/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	f0 $/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	c7 44 24 04 7b 03 00 	movl   $0x37b,0x4(%esp)$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	00 $/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	e8 ed e8 ff ff       	call   f010015a <_panic>$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	e8 88 f5 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	89 c6                	mov    %eax,%esi$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	85 c0                	test   %eax,%eax$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	75 24                	jne    f01018a3 <mem_init+0x694>$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	c7 44 24 0c f4 58 10 	movl   $0xf01058f4,0xc(%esp)$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	f0 $/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	f0 $/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	c7 44 24 04 7c 03 00 	movl   $0x37c,0x4(%esp)$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	00 $/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	e8 b7 e8 ff ff       	call   f010015a <_panic>$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	e8 52 f5 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	89 c3                	mov    %eax,%ebx$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	85 c0                	test   %eax,%eax$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	75 24                	jne    f01018d9 <mem_init+0x6ca>$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	c7 44 24 0c 0a 59 10 	movl   $0xf010590a,0xc(%esp)$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	f0 $/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	f0 $/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	c7 44 24 04 7d 03 00 	movl   $0x37d,0x4(%esp)$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	00 $/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	e8 81 e8 ff ff       	call   f010015a <_panic>$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	39 f7                	cmp    %esi,%edi$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	75 24                	jne    f0101901 <mem_init+0x6f2>$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	c7 44 24 0c 20 59 10 	movl   $0xf0105920,0xc(%esp)$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	f0 $/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	f0 $/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	c7 44 24 04 80 03 00 	movl   $0x380,0x4(%esp)$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	00 $/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	e8 59 e8 ff ff       	call   f010015a <_panic>$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	39 c6                	cmp    %eax,%esi$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	74 04                	je     f0101909 <mem_init+0x6fa>$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	39 c7                	cmp    %eax,%edi$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	75 24                	jne    f010192d <mem_init+0x71e>$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	c7 44 24 0c 8c 5c 10 	movl   $0xf0105c8c,0xc(%esp)$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	f0 $/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	f0 $/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	c7 44 24 04 81 03 00 	movl   $0x381,0x4(%esp)$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	00 $/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	e8 2d e8 ff ff       	call   f010015a <_panic>$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	8b 15 a0 b1 1e f0    	mov    0xf01eb1a0,%edx$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	c7 05 a0 b1 1e f0 00 	movl   $0x0,0xf01eb1a0$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	00 00 00 $/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	e8 b5 f4 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	85 c0                	test   %eax,%eax$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	74 24                	je     f0101974 <mem_init+0x765>$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	c7 44 24 0c 89 59 10 	movl   $0xf0105989,0xc(%esp)$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	f0 $/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	f0 $/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	c7 44 24 04 88 03 00 	movl   $0x388,0x4(%esp)$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	00 $/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	e8 e6 e7 ff ff       	call   f010015a <_panic>$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	00 $/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	e8 0a f7 ff ff       	call   f010109a <page_lookup>$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	85 c0                	test   %eax,%eax$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	74 24                	je     f01019b8 <mem_init+0x7a9>$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	c7 44 24 0c cc 5c 10 	movl   $0xf0105ccc,0xc(%esp)$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	f0 $/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	f0 $/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	c7 44 24 04 8b 03 00 	movl   $0x38b,0x4(%esp)$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	00 $/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	e8 a2 e7 ff ff       	call   f010015a <_panic>$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	00 $/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	00 $/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	e8 8e f7 ff ff       	call   f0101167 <page_insert>$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	85 c0                	test   %eax,%eax$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	78 24                	js     f0101a01 <mem_init+0x7f2>$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 44 24 0c 04 5d 10 	movl   $0xf0105d04,0xc(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	f0 $/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	f0 $/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	c7 44 24 04 8e 03 00 	movl   $0x38e,0x4(%esp)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	00 $/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	e8 59 e7 ff ff       	call   f010015a <_panic>$/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	e8 8e f4 ff ff       	call   f0100e97 <page_free>$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	00 $/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	00 $/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	e8 3d f7 ff ff       	call   f0101167 <page_insert>$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	85 c0                	test   %eax,%eax$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	74 24                	je     f0101a52 <mem_init+0x843>$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	c7 44 24 0c 34 5d 10 	movl   $0xf0105d34,0xc(%esp)$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	f0 $/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	f0 $/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	00 $/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	e8 08 e7 ff ff       	call   f010015a <_panic>$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	8b 0d 48 be 1e f0    	mov    0xf01ebe48,%ecx$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	a1 4c be 1e f0       	mov    0xf01ebe4c,%eax$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	89 f8                	mov    %edi,%eax$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	39 c2                	cmp    %eax,%edx$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	74 24                	je     f0101a9e <mem_init+0x88f>$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	c7 44 24 0c 64 5d 10 	movl   $0xf0105d64,0xc(%esp)$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	f0 $/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	f0 $/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	00 $/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	e8 bc e6 ff ff       	call   f010015a <_panic>$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	e8 c4 ee ff ff       	call   f010096f <check_va2pa>$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	89 f2                	mov    %esi,%edx$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	74 24                	je     f0101ade <mem_init+0x8cf>$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	c7 44 24 0c 8c 5d 10 	movl   $0xf0105d8c,0xc(%esp)$/;"	l
f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	f0 $/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	f0 $/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	00 $/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	e8 7c e6 ff ff       	call   f010015a <_panic>$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	74 24                	je     f0101b09 <mem_init+0x8fa>$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	c7 44 24 0c db 59 10 	movl   $0xf01059db,0xc(%esp)$/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	f0 $/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	f0 $/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	c7 44 24 04 95 03 00 	movl   $0x395,0x4(%esp)$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	00 $/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	e8 51 e6 ff ff       	call   f010015a <_panic>$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	74 24                	je     f0101b34 <mem_init+0x925>$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	c7 44 24 0c ec 59 10 	movl   $0xf01059ec,0xc(%esp)$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	f0 $/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	f0 $/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	c7 44 24 04 96 03 00 	movl   $0x396,0x4(%esp)$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	00 $/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	e8 26 e6 ff ff       	call   f010015a <_panic>$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	00 $/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	00 $/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	e8 14 f6 ff ff       	call   f0101167 <page_insert>$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	85 c0                	test   %eax,%eax$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	74 24                	je     f0101b7b <mem_init+0x96c>$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	c7 44 24 0c bc 5d 10 	movl   $0xf0105dbc,0xc(%esp)$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	f0 $/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	f0 $/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	c7 44 24 04 99 03 00 	movl   $0x399,0x4(%esp)$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	00 $/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	e8 df e5 ff ff       	call   f010015a <_panic>$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	e8 e5 ed ff ff       	call   f010096f <check_va2pa>$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	89 da                	mov    %ebx,%edx$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	74 24                	je     f0101bc0 <mem_init+0x9b1>$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	c7 44 24 0c f8 5d 10 	movl   $0xf0105df8,0xc(%esp)$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	f0 $/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	f0 $/;"	l
f0101bac	obj/kern/kernel.asm	/^f0101bac:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	00 $/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	e8 9a e5 ff ff       	call   f010015a <_panic>$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	74 24                	je     f0101beb <mem_init+0x9dc>$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	c7 44 24 0c fd 59 10 	movl   $0xf01059fd,0xc(%esp)$/;"	l
f0101bce	obj/kern/kernel.asm	/^f0101bce:	f0 $/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	f0 $/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	c7 44 24 04 9b 03 00 	movl   $0x39b,0x4(%esp)$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	00 $/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101be6	obj/kern/kernel.asm	/^f0101be6:	e8 6f e5 ff ff       	call   f010015a <_panic>$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	e8 0a f2 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	85 c0                	test   %eax,%eax$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	74 24                	je     f0101c1f <mem_init+0xa10>$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	c7 44 24 0c 89 59 10 	movl   $0xf0105989,0xc(%esp)$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	f0 $/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	f0 $/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	c7 44 24 04 9e 03 00 	movl   $0x39e,0x4(%esp)$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	00 $/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	e8 3b e5 ff ff       	call   f010015a <_panic>$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	00 $/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	00 $/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	e8 27 f5 ff ff       	call   f0101167 <page_insert>$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	85 c0                	test   %eax,%eax$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	74 24                	je     f0101c68 <mem_init+0xa59>$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	c7 44 24 0c bc 5d 10 	movl   $0xf0105dbc,0xc(%esp)$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	f0 $/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	f0 $/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	00 $/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	e8 f2 e4 ff ff       	call   f010015a <_panic>$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	e8 f8 ec ff ff       	call   f010096f <check_va2pa>$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	89 da                	mov    %ebx,%edx$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	74 24                	je     f0101cad <mem_init+0xa9e>$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	c7 44 24 0c f8 5d 10 	movl   $0xf0105df8,0xc(%esp)$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	f0 $/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	f0 $/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	00 $/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	e8 ad e4 ff ff       	call   f010015a <_panic>$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	74 24                	je     f0101cd8 <mem_init+0xac9>$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	c7 44 24 0c fd 59 10 	movl   $0xf01059fd,0xc(%esp)$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	f0 $/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	f0 $/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	00 $/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	e8 82 e4 ff ff       	call   f010015a <_panic>$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	e8 1d f1 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	85 c0                	test   %eax,%eax$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	74 24                	je     f0101d0c <mem_init+0xafd>$/;"	l
f0101ce8	obj/kern/kernel.asm	/^f0101ce8:	c7 44 24 0c 89 59 10 	movl   $0xf0105989,0xc(%esp)$/;"	l
f0101cef	obj/kern/kernel.asm	/^f0101cef:	f0 $/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	f0 $/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	00 $/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	e8 4e e4 ff ff       	call   f010015a <_panic>$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	8b 15 48 be 1e f0    	mov    0xf01ebe48,%edx$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	8b 02                	mov    (%edx),%eax$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	89 c1                	mov    %eax,%ecx$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	3b 0d 44 be 1e f0    	cmp    0xf01ebe44,%ecx$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	72 20                	jb     f0101d46 <mem_init+0xb37>$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	f0 $/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	00 $/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101d41	obj/kern/kernel.asm	/^f0101d41:	e8 14 e4 ff ff       	call   f010015a <_panic>$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	00 $/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	00 $/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	e8 bd f1 ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	83 c2 04             	add    $0x4,%edx$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	74 24                	je     f0101d94 <mem_init+0xb85>$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	c7 44 24 0c 28 5e 10 	movl   $0xf0105e28,0xc(%esp)$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	f0 $/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101d7f	obj/kern/kernel.asm	/^f0101d7f:	f0 $/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0101d87	obj/kern/kernel.asm	/^f0101d87:	00 $/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	e8 c6 e3 ff ff       	call   f010015a <_panic>$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	00 $/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	00 $/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101db0	obj/kern/kernel.asm	/^f0101db0:	e8 b2 f3 ff ff       	call   f0101167 <page_insert>$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	85 c0                	test   %eax,%eax$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	74 24                	je     f0101ddd <mem_init+0xbce>$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	c7 44 24 0c 68 5e 10 	movl   $0xf0105e68,0xc(%esp)$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	f0 $/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	f0 $/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	00 $/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	e8 7d e3 ff ff       	call   f010015a <_panic>$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	8b 0d 48 be 1e f0    	mov    0xf01ebe48,%ecx$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	89 c8                	mov    %ecx,%eax$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	e8 7d eb ff ff       	call   f010096f <check_va2pa>$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	89 da                	mov    %ebx,%edx$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	74 24                	je     f0101e28 <mem_init+0xc19>$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	c7 44 24 0c f8 5d 10 	movl   $0xf0105df8,0xc(%esp)$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	f0 $/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	f0 $/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0101e1b	obj/kern/kernel.asm	/^f0101e1b:	00 $/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	e8 32 e3 ff ff       	call   f010015a <_panic>$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	74 24                	je     f0101e53 <mem_init+0xc44>$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	c7 44 24 0c fd 59 10 	movl   $0xf01059fd,0xc(%esp)$/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	f0 $/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	f0 $/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	00 $/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	e8 07 e3 ff ff       	call   f010015a <_panic>$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	00 $/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101e62	obj/kern/kernel.asm	/^f0101e62:	00 $/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	e8 b5 f0 ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	75 24                	jne    f0101e97 <mem_init+0xc88>$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	c7 44 24 0c a8 5e 10 	movl   $0xf0105ea8,0xc(%esp)$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	f0 $/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	f0 $/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	00 $/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	e8 c3 e2 ff ff       	call   f010015a <_panic>$/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	75 24                	jne    f0101ec5 <mem_init+0xcb6>$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	c7 44 24 0c 0e 5a 10 	movl   $0xf0105a0e,0xc(%esp)$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	f0 $/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	f0 $/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	00 $/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	e8 95 e2 ff ff       	call   f010015a <_panic>$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	00 $/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	00 $/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101edc	obj/kern/kernel.asm	/^f0101edc:	e8 86 f2 ff ff       	call   f0101167 <page_insert>$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	85 c0                	test   %eax,%eax$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	74 24                	je     f0101f09 <mem_init+0xcfa>$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	c7 44 24 0c bc 5d 10 	movl   $0xf0105dbc,0xc(%esp)$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	f0 $/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	f0 $/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	c7 44 24 04 b5 03 00 	movl   $0x3b5,0x4(%esp)$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	00 $/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	e8 51 e2 ff ff       	call   f010015a <_panic>$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	00 $/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	00 $/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	e8 fd ef ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	75 24                	jne    f0101f4f <mem_init+0xd40>$/;"	l
f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	c7 44 24 0c dc 5e 10 	movl   $0xf0105edc,0xc(%esp)$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	f0 $/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	f0 $/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	00 $/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	e8 0b e2 ff ff       	call   f010015a <_panic>$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	00 $/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	00 $/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	e8 b7 ef ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	74 24                	je     f0101f95 <mem_init+0xd86>$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	c7 44 24 0c 10 5f 10 	movl   $0xf0105f10,0xc(%esp)$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	f0 $/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	f0 $/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	00 $/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	e8 c5 e1 ff ff       	call   f010015a <_panic>$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	00 $/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	00 $/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101fae	obj/kern/kernel.asm	/^f0101fae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	e8 b1 f1 ff ff       	call   f0101167 <page_insert>$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	85 c0                	test   %eax,%eax$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	78 24                	js     f0101fde <mem_init+0xdcf>$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	c7 44 24 0c 48 5f 10 	movl   $0xf0105f48,0xc(%esp)$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	f0 $/;"	l
f0101fc2	obj/kern/kernel.asm	/^f0101fc2:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	f0 $/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	00 $/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	e8 7c e1 ff ff       	call   f010015a <_panic>$/;"	l
f0101fde	obj/kern/kernel.asm	/^f0101fde:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	00 $/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	00 $/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	e8 68 f1 ff ff       	call   f0101167 <page_insert>$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	85 c0                	test   %eax,%eax$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	74 24                	je     f0102027 <mem_init+0xe18>$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	c7 44 24 0c 80 5f 10 	movl   $0xf0105f80,0xc(%esp)$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	f0 $/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	f0 $/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	00 $/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	e8 33 e1 ff ff       	call   f010015a <_panic>$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	00 $/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	00 $/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	e8 df ee ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102047	obj/kern/kernel.asm	/^f0102047:	74 24                	je     f010206d <mem_init+0xe5e>$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	c7 44 24 0c 10 5f 10 	movl   $0xf0105f10,0xc(%esp)$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	f0 $/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102058	obj/kern/kernel.asm	/^f0102058:	f0 $/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	00 $/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	e8 ed e0 ff ff       	call   f010015a <_panic>$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	e8 f0 e8 ff ff       	call   f010096f <check_va2pa>$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	89 f0                	mov    %esi,%eax$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	74 24                	je     f01020b9 <mem_init+0xeaa>$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	c7 44 24 0c bc 5f 10 	movl   $0xf0105fbc,0xc(%esp)$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	f0 $/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	f0 $/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	00 $/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	e8 a1 e0 ff ff       	call   f010015a <_panic>$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	e8 a9 e8 ff ff       	call   f010096f <check_va2pa>$/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	74 24                	je     f01020ef <mem_init+0xee0>$/;"	l
f01020cb	obj/kern/kernel.asm	/^f01020cb:	c7 44 24 0c e8 5f 10 	movl   $0xf0105fe8,0xc(%esp)$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	f0 $/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	f0 $/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	00 $/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	e8 6b e0 ff ff       	call   f010015a <_panic>$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	74 24                	je     f010211a <mem_init+0xf0b>$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	c7 44 24 0c 24 5a 10 	movl   $0xf0105a24,0xc(%esp)$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	f0 $/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102105	obj/kern/kernel.asm	/^f0102105:	f0 $/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	00 $/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	e8 40 e0 ff ff       	call   f010015a <_panic>$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	74 24                	je     f0102145 <mem_init+0xf36>$/;"	l
f0102121	obj/kern/kernel.asm	/^f0102121:	c7 44 24 0c 35 5a 10 	movl   $0xf0105a35,0xc(%esp)$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	f0 $/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	f0 $/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	00 $/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	e8 15 e0 ff ff       	call   f010015a <_panic>$/;"	l
f0102145	obj/kern/kernel.asm	/^f0102145:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	e8 b0 ec ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	85 c0                	test   %eax,%eax$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	74 04                	je     f0102159 <mem_init+0xf4a>$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	74 24                	je     f010217d <mem_init+0xf6e>$/;"	l
f0102159	obj/kern/kernel.asm	/^f0102159:	c7 44 24 0c 18 60 10 	movl   $0xf0106018,0xc(%esp)$/;"	l
f0102160	obj/kern/kernel.asm	/^f0102160:	f0 $/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	f0 $/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	00 $/;"	l
f0102171	obj/kern/kernel.asm	/^f0102171:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	e8 dd df ff ff       	call   f010015a <_panic>$/;"	l
f010217d	obj/kern/kernel.asm	/^f010217d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	00 $/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f010218a	obj/kern/kernel.asm	/^f010218a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	e8 8c ef ff ff       	call   f010111e <page_remove>$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	8b 15 48 be 1e f0    	mov    0xf01ebe48,%edx$/;"	l
f0102198	obj/kern/kernel.asm	/^f0102198:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	e8 c7 e7 ff ff       	call   f010096f <check_va2pa>$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	74 24                	je     f01021d1 <mem_init+0xfc2>$/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	c7 44 24 0c 3c 60 10 	movl   $0xf010603c,0xc(%esp)$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	f0 $/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	f0 $/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	00 $/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01021cc	obj/kern/kernel.asm	/^f01021cc:	e8 89 df ff ff       	call   f010015a <_panic>$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	e8 91 e7 ff ff       	call   f010096f <check_va2pa>$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	89 f2                	mov    %esi,%edx$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021ec	obj/kern/kernel.asm	/^f01021ec:	39 d0                	cmp    %edx,%eax$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	74 24                	je     f0102214 <mem_init+0x1005>$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	c7 44 24 0c e8 5f 10 	movl   $0xf0105fe8,0xc(%esp)$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	f0 $/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	f0 $/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	00 $/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	e8 46 df ff ff       	call   f010015a <_panic>$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102219	obj/kern/kernel.asm	/^f0102219:	74 24                	je     f010223f <mem_init+0x1030>$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	c7 44 24 0c db 59 10 	movl   $0xf01059db,0xc(%esp)$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	f0 $/;"	l
f0102223	obj/kern/kernel.asm	/^f0102223:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010222a	obj/kern/kernel.asm	/^f010222a:	f0 $/;"	l
f010222b	obj/kern/kernel.asm	/^f010222b:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	00 $/;"	l
f0102233	obj/kern/kernel.asm	/^f0102233:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	e8 1b df ff ff       	call   f010015a <_panic>$/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	74 24                	je     f010226a <mem_init+0x105b>$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	c7 44 24 0c 35 5a 10 	movl   $0xf0105a35,0xc(%esp)$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	f0 $/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	f0 $/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	00 $/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	e8 f0 de ff ff       	call   f010015a <_panic>$/;"	l
f010226a	obj/kern/kernel.asm	/^f010226a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102271	obj/kern/kernel.asm	/^f0102271:	00 $/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	00 $/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	e8 de ee ff ff       	call   f0101167 <page_insert>$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	85 c0                	test   %eax,%eax$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	74 24                	je     f01022b1 <mem_init+0x10a2>$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	c7 44 24 0c 60 60 10 	movl   $0xf0106060,0xc(%esp)$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	f0 $/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	f0 $/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	00 $/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	e8 a9 de ff ff       	call   f010015a <_panic>$/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	75 24                	jne    f01022dc <mem_init+0x10cd>$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	c7 44 24 0c 46 5a 10 	movl   $0xf0105a46,0xc(%esp)$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	f0 $/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01022c7	obj/kern/kernel.asm	/^f01022c7:	f0 $/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	00 $/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	e8 7e de ff ff       	call   f010015a <_panic>$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	74 24                	je     f0102305 <mem_init+0x10f6>$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	c7 44 24 0c 52 5a 10 	movl   $0xf0105a52,0xc(%esp)$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	f0 $/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	f0 $/;"	l
f01022f1	obj/kern/kernel.asm	/^f01022f1:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	00 $/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	e8 55 de ff ff       	call   f010015a <_panic>$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010230c	obj/kern/kernel.asm	/^f010230c:	00 $/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	e8 04 ee ff ff       	call   f010111e <page_remove>$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	e8 43 e6 ff ff       	call   f010096f <check_va2pa>$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	74 24                	je     f0102355 <mem_init+0x1146>$/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	c7 44 24 0c 3c 60 10 	movl   $0xf010603c,0xc(%esp)$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	f0 $/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	f0 $/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	00 $/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	e8 05 de ff ff       	call   f010015a <_panic>$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010235a	obj/kern/kernel.asm	/^f010235a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	e8 0d e6 ff ff       	call   f010096f <check_va2pa>$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	74 24                	je     f010238b <mem_init+0x117c>$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	c7 44 24 0c 98 60 10 	movl   $0xf0106098,0xc(%esp)$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	f0 $/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	f0 $/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	c7 44 24 04 d9 03 00 	movl   $0x3d9,0x4(%esp)$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	00 $/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	e8 cf dd ff ff       	call   f010015a <_panic>$/;"	l
f010238b	obj/kern/kernel.asm	/^f010238b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	74 24                	je     f01023b6 <mem_init+0x11a7>$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	c7 44 24 0c 67 5a 10 	movl   $0xf0105a67,0xc(%esp)$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	f0 $/;"	l
f010239a	obj/kern/kernel.asm	/^f010239a:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	f0 $/;"	l
f01023a2	obj/kern/kernel.asm	/^f01023a2:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	00 $/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	e8 a4 dd ff ff       	call   f010015a <_panic>$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	74 24                	je     f01023e1 <mem_init+0x11d2>$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	c7 44 24 0c 35 5a 10 	movl   $0xf0105a35,0xc(%esp)$/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	f0 $/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	f0 $/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	00 $/;"	l
f01023d5	obj/kern/kernel.asm	/^f01023d5:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	e8 79 dd ff ff       	call   f010015a <_panic>$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	e8 14 ea ff ff       	call   f0100e01 <page_alloc>$/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	85 c0                	test   %eax,%eax$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	74 04                	je     f01023f5 <mem_init+0x11e6>$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	39 c6                	cmp    %eax,%esi$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	74 24                	je     f0102419 <mem_init+0x120a>$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	c7 44 24 0c c0 60 10 	movl   $0xf01060c0,0xc(%esp)$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	f0 $/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102404	obj/kern/kernel.asm	/^f0102404:	f0 $/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f010240c	obj/kern/kernel.asm	/^f010240c:	00 $/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	e8 41 dd ff ff       	call   f010015a <_panic>$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	e8 dc e9 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	85 c0                	test   %eax,%eax$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	74 24                	je     f010244d <mem_init+0x123e>$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	c7 44 24 0c 89 59 10 	movl   $0xf0105989,0xc(%esp)$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	f0 $/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	f0 $/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	c7 44 24 04 e1 03 00 	movl   $0x3e1,0x4(%esp)$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	00 $/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	e8 0d dd ff ff       	call   f010015a <_panic>$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	89 fa                	mov    %edi,%edx$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	39 d1                	cmp    %edx,%ecx$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	74 24                	je     f0102490 <mem_init+0x1281>$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	c7 44 24 0c 64 5d 10 	movl   $0xf0105d64,0xc(%esp)$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	f0 $/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	f0 $/;"	l
f010247c	obj/kern/kernel.asm	/^f010247c:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	00 $/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	e8 ca dc ff ff       	call   f010015a <_panic>$/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	74 24                	je     f01024c1 <mem_init+0x12b2>$/;"	l
f010249d	obj/kern/kernel.asm	/^f010249d:	c7 44 24 0c ec 59 10 	movl   $0xf01059ec,0xc(%esp)$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	f0 $/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	f0 $/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	00 $/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	e8 99 dc ff ff       	call   f010015a <_panic>$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	e8 c8 e9 ff ff       	call   f0100e97 <page_free>$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	00 $/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	00 $/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	e8 37 ea ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	8b 0d 48 be 1e f0    	mov    0xf01ebe48,%ecx$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	8b 15 44 be 1e f0    	mov    0xf01ebe44,%edx$/;"	l
f0102507	obj/kern/kernel.asm	/^f0102507:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	72 23                	jb     f010253e <mem_init+0x132f>$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0102529	obj/kern/kernel.asm	/^f0102529:	f0 $/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	00 $/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	e8 1c dc ff ff       	call   f010015a <_panic>$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	39 d0                	cmp    %edx,%eax$/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	74 24                	je     f010256f <mem_init+0x1360>$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	c7 44 24 0c 78 5a 10 	movl   $0xf0105a78,0xc(%esp)$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	f0 $/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	f0 $/;"	l
f010255b	obj/kern/kernel.asm	/^f010255b:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	00 $/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	e8 eb db ff ff       	call   f010015a <_panic>$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	89 f8                	mov    %edi,%eax$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	89 c1                	mov    %eax,%ecx$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	77 20                	ja     f01025b4 <mem_init+0x13a5>$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	f0 $/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	00 $/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	e8 a6 db ff ff       	call   f010015a <_panic>$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	00 $/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	00 $/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	e8 c1 27 00 00       	call   f0104d92 <memset>$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	e8 be e8 ff ff       	call   f0100e97 <page_free>$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	00 $/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	00 $/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	e8 2d e9 ff ff       	call   f0100f23 <pgdir_walk>$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	89 fa                	mov    %edi,%edx$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102601	obj/kern/kernel.asm	/^f0102601:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	89 d0                	mov    %edx,%eax$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	72 20                	jb     f0102631 <mem_init+0x1422>$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	f0 $/;"	l
f010261d	obj/kern/kernel.asm	/^f010261d:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	00 $/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	e8 29 db ff ff       	call   f010015a <_panic>$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	74 24                	je     f0102669 <mem_init+0x145a>$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	c7 44 24 0c 90 5a 10 	movl   $0xf0105a90,0xc(%esp)$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	f0 $/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	f0 $/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	00 $/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	e8 f1 da ff ff       	call   f010015a <_panic>$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	83 c0 04             	add    $0x4,%eax$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	39 d0                	cmp    %edx,%eax$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	75 d0                	jne    f0102640 <mem_init+0x1431>$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0102684	obj/kern/kernel.asm	/^f0102684:	89 0d a0 b1 1e f0    	mov    %ecx,0xf01eb1a0$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	e8 05 e8 ff ff       	call   f0100e97 <page_free>$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	e8 fd e7 ff ff       	call   f0100e97 <page_free>$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	e8 f5 e7 ff ff       	call   f0100e97 <page_free>$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	c7 04 24 a7 5a 10 f0 	movl   $0xf0105aa7,(%esp)$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	e8 44 10 00 00       	call   f01036f2 <cprintf>$/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	a1 4c be 1e f0       	mov    0xf01ebe4c,%eax$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	77 20                	ja     f01026da <mem_init+0x14cb>$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f01026c5	obj/kern/kernel.asm	/^f01026c5:	f0 $/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	c7 44 24 04 bc 00 00 	movl   $0xbc,0x4(%esp)$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	00 $/;"	l
f01026ce	obj/kern/kernel.asm	/^f01026ce:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	e8 80 da ff ff       	call   f010015a <_panic>$/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	8b 15 44 be 1e f0    	mov    0xf01ebe44,%edx$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	00 $/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	e8 f6 e8 ff ff       	call   f0101002 <boot_map_region>$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	a1 a8 b1 1e f0       	mov    0xf01eb1a8,%eax$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	77 20                	ja     f0102738 <mem_init+0x1529>$/;"	l
f0102718	obj/kern/kernel.asm	/^f0102718:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	f0 $/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	00 $/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	e8 22 da ff ff       	call   f010015a <_panic>$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	00 $/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	b9 00 80 01 00       	mov    $0x18000,%ecx$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	e8 a6 e8 ff ff       	call   f0101002 <boot_map_region>$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	b8 00 c0 11 f0       	mov    $0xf011c000,%eax$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	77 20                	ja     f0102788 <mem_init+0x1579>$/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	f0 $/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	c7 44 24 04 d7 00 00 	movl   $0xd7,0x4(%esp)$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	00 $/;"	l
f010277c	obj/kern/kernel.asm	/^f010277c:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	e8 d2 d9 ff ff       	call   f010015a <_panic>$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	00 $/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	c7 04 24 00 c0 11 00 	movl   $0x11c000,(%esp)$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	e8 57 e8 ff ff       	call   f0101002 <boot_map_region>$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	00 $/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027ba	obj/kern/kernel.asm	/^f01027ba:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	e8 34 e8 ff ff       	call   f0101002 <boot_map_region>$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	8b 1d 48 be 1e f0    	mov    0xf01ebe48,%ebx$/;"	l
f01027d4	obj/kern/kernel.asm	/^f01027d4:	8b 15 44 be 1e f0    	mov    0xf01ebe44,%edx$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	8d 3c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%edi$/;"	l
f01027e4	obj/kern/kernel.asm	/^f01027e4:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	eb 70                	jmp    f0102861 <mem_init+0x1652>$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edx$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	89 d8                	mov    %ebx,%eax$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	e8 71 e1 ff ff       	call   f010096f <check_va2pa>$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	8b 15 4c be 1e f0    	mov    0xf01ebe4c,%edx$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	77 20                	ja     f010282c <mem_init+0x161d>$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	f0 $/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	c7 44 24 04 33 03 00 	movl   $0x333,0x4(%esp)$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	00 $/;"	l
f0102820	obj/kern/kernel.asm	/^f0102820:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	e8 2e d9 ff ff       	call   f010015a <_panic>$/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	39 d0                	cmp    %edx,%eax$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	74 24                	je     f010285b <mem_init+0x164c>$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	c7 44 24 0c e4 60 10 	movl   $0xf01060e4,0xc(%esp)$/;"	l
f010283e	obj/kern/kernel.asm	/^f010283e:	f0 $/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	f0 $/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	c7 44 24 04 33 03 00 	movl   $0x333,0x4(%esp)$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	00 $/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	e8 ff d8 ff ff       	call   f010015a <_panic>$/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102861	obj/kern/kernel.asm	/^f0102861:	39 f7                	cmp    %esi,%edi$/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	77 8c                	ja     f01027f1 <mem_init+0x15e2>$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	8d 96 00 00 c0 ee    	lea    -0x11400000(%esi),%edx$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	89 d8                	mov    %ebx,%eax$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	e8 f8 e0 ff ff       	call   f010096f <check_va2pa>$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	8b 15 a8 b1 1e f0    	mov    0xf01eb1a8,%edx$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	77 20                	ja     f01028a5 <mem_init+0x1696>$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	f0 $/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	c7 44 24 04 38 03 00 	movl   $0x338,0x4(%esp)$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	00 $/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	e8 b5 d8 ff ff       	call   f010015a <_panic>$/;"	l
f01028a5	obj/kern/kernel.asm	/^f01028a5:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	39 d0                	cmp    %edx,%eax$/;"	l
f01028ae	obj/kern/kernel.asm	/^f01028ae:	74 24                	je     f01028d4 <mem_init+0x16c5>$/;"	l
f01028b0	obj/kern/kernel.asm	/^f01028b0:	c7 44 24 0c 18 61 10 	movl   $0xf0106118,0xc(%esp)$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	f0 $/;"	l
f01028b8	obj/kern/kernel.asm	/^f01028b8:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	f0 $/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	c7 44 24 04 38 03 00 	movl   $0x338,0x4(%esp)$/;"	l
f01028c7	obj/kern/kernel.asm	/^f01028c7:	00 $/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	e8 86 d8 ff ff       	call   f010015a <_panic>$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	81 fe 00 80 01 00    	cmp    $0x18000,%esi$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	75 88                	jne    f010286a <mem_init+0x165b>$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	eb 3b                	jmp    f010292a <mem_init+0x171b>$/;"	l
f01028ef	obj/kern/kernel.asm	/^f01028ef:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edx$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	89 d8                	mov    %ebx,%eax$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	e8 73 e0 ff ff       	call   f010096f <check_va2pa>$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	39 c6                	cmp    %eax,%esi$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	74 24                	je     f0102924 <mem_init+0x1715>$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	c7 44 24 0c 4c 61 10 	movl   $0xf010614c,0xc(%esp)$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	f0 $/;"	l
f0102908	obj/kern/kernel.asm	/^f0102908:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	f0 $/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	00 $/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	e8 36 d8 ff ff       	call   f010015a <_panic>$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	39 fe                	cmp    %edi,%esi$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	72 c1                	jb     f01028ef <mem_init+0x16e0>$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	bf 00 c0 11 f0       	mov    $0xf011c000,%edi$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	81 c7 00 80 00 20    	add    $0x20008000,%edi$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	89 f2                	mov    %esi,%edx$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	89 d8                	mov    %ebx,%eax$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	e8 28 e0 ff ff       	call   f010096f <check_va2pa>$/;"	l
f0102947	obj/kern/kernel.asm	/^f0102947:	8d 14 37             	lea    (%edi,%esi,1),%edx$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	39 d0                	cmp    %edx,%eax$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	74 24                	je     f0102972 <mem_init+0x1763>$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	c7 44 24 0c 74 61 10 	movl   $0xf0106174,0xc(%esp)$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	f0 $/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	f0 $/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	c7 44 24 04 40 03 00 	movl   $0x340,0x4(%esp)$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	00 $/;"	l
f0102966	obj/kern/kernel.asm	/^f0102966:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	e8 e8 d7 ff ff       	call   f010015a <_panic>$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esi$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	75 be                	jne    f010293e <mem_init+0x172f>$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	ba 00 00 c0 ef       	mov    $0xefc00000,%edx$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	89 d8                	mov    %ebx,%eax$/;"	l
f0102987	obj/kern/kernel.asm	/^f0102987:	e8 e3 df ff ff       	call   f010096f <check_va2pa>$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	74 24                	je     f01029b5 <mem_init+0x17a6>$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	c7 44 24 0c bc 61 10 	movl   $0xf01061bc,0xc(%esp)$/;"	l
f0102998	obj/kern/kernel.asm	/^f0102998:	f0 $/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	f0 $/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	c7 44 24 04 41 03 00 	movl   $0x341,0x4(%esp)$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	00 $/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	e8 a5 d7 ff ff       	call   f010015a <_panic>$/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	72 3c                	jb     f01029fd <mem_init+0x17ee>$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	3d bd 03 00 00       	cmp    $0x3bd,%eax$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	76 07                	jbe    f01029cf <mem_init+0x17c0>$/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	75 2e                	jne    f01029fd <mem_init+0x17ee>$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	0f 85 aa 00 00 00    	jne    f0102a83 <mem_init+0x1874>$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	c7 44 24 0c c0 5a 10 	movl   $0xf0105ac0,0xc(%esp)$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	f0 $/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	f0 $/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	c7 44 24 04 4a 03 00 	movl   $0x34a,0x4(%esp)$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	00 $/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	e8 5d d7 ff ff       	call   f010015a <_panic>$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	76 55                	jbe    f0102a59 <mem_init+0x184a>$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	8b 14 83             	mov    (%ebx,%eax,4),%edx$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	75 24                	jne    f0102a30 <mem_init+0x1821>$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	c7 44 24 0c c0 5a 10 	movl   $0xf0105ac0,0xc(%esp)$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	f0 $/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	f0 $/;"	l
f0102a1c	obj/kern/kernel.asm	/^f0102a1c:	c7 44 24 04 4e 03 00 	movl   $0x34e,0x4(%esp)$/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	00 $/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	e8 2a d7 ff ff       	call   f010015a <_panic>$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	75 4e                	jne    f0102a83 <mem_init+0x1874>$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	c7 44 24 0c d1 5a 10 	movl   $0xf0105ad1,0xc(%esp)$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	f0 $/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	f0 $/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	00 $/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	e8 01 d7 ff ff       	call   f010015a <_panic>$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	74 24                	je     f0102a83 <mem_init+0x1874>$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	c7 44 24 0c e2 5a 10 	movl   $0xf0105ae2,0xc(%esp)$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	f0 $/;"	l
f0102a67	obj/kern/kernel.asm	/^f0102a67:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	f0 $/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	c7 44 24 04 52 03 00 	movl   $0x352,0x4(%esp)$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	00 $/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	e8 d7 d6 ff ff       	call   f010015a <_panic>$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	40                   	inc    %eax$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	0f 85 2b ff ff ff    	jne    f01029ba <mem_init+0x17ab>$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	c7 04 24 ec 61 10 f0 	movl   $0xf01061ec,(%esp)$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	e8 57 0c 00 00       	call   f01036f2 <cprintf>$/;"	l
f0102a9b	obj/kern/kernel.asm	/^f0102a9b:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	77 20                	ja     f0102ac7 <mem_init+0x18b8>$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102aab	obj/kern/kernel.asm	/^f0102aab:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	f0 $/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
f0102aba	obj/kern/kernel.asm	/^f0102aba:	00 $/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	e8 93 d6 ff ff       	call   f010015a <_panic>$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	e8 2c df ff ff       	call   f0100a05 <check_page_free_list>$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102ae7	obj/kern/kernel.asm	/^f0102ae7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	e8 0e e3 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	89 c6                	mov    %eax,%esi$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	85 c0                	test   %eax,%eax$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	75 24                	jne    f0102b1d <mem_init+0x190e>$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	c7 44 24 0c de 58 10 	movl   $0xf01058de,0xc(%esp)$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	f0 $/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	f0 $/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	00 $/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	e8 3d d6 ff ff       	call   f010015a <_panic>$/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	e8 d8 e2 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	89 c7                	mov    %eax,%edi$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	85 c0                	test   %eax,%eax$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	75 24                	jne    f0102b53 <mem_init+0x1944>$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	c7 44 24 0c f4 58 10 	movl   $0xf01058f4,0xc(%esp)$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	f0 $/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	f0 $/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	00 $/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	e8 07 d6 ff ff       	call   f010015a <_panic>$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	e8 a2 e2 ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	89 c3                	mov    %eax,%ebx$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	85 c0                	test   %eax,%eax$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	75 24                	jne    f0102b89 <mem_init+0x197a>$/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	c7 44 24 0c 0a 59 10 	movl   $0xf010590a,0xc(%esp)$/;"	l
f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	f0 $/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	f0 $/;"	l
f0102b75	obj/kern/kernel.asm	/^f0102b75:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	00 $/;"	l
f0102b7d	obj/kern/kernel.asm	/^f0102b7d:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	e8 d1 d5 ff ff       	call   f010015a <_panic>$/;"	l
f0102b89	obj/kern/kernel.asm	/^f0102b89:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	e8 06 e3 ff ff       	call   f0100e97 <page_free>$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	89 f8                	mov    %edi,%eax$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	89 c2                	mov    %eax,%edx$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102ba4	obj/kern/kernel.asm	/^f0102ba4:	3b 15 44 be 1e f0    	cmp    0xf01ebe44,%edx$/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	72 20                	jb     f0102bcc <mem_init+0x19bd>$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102bb0	obj/kern/kernel.asm	/^f0102bb0:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	f0 $/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	00 $/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	e8 8e d5 ff ff       	call   f010015a <_panic>$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	00 $/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	00 $/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	e8 a9 21 00 00       	call   f0104d92 <memset>$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	89 d8                	mov    %ebx,%eax$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	89 c2                	mov    %eax,%edx$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	3b 15 44 be 1e f0    	cmp    0xf01ebe44,%edx$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	72 20                	jb     f0102c24 <mem_init+0x1a15>$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	f0 $/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	00 $/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	e8 36 d5 ff ff       	call   f010015a <_panic>$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	00 $/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	00 $/;"	l
f0102c34	obj/kern/kernel.asm	/^f0102c34:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102c39	obj/kern/kernel.asm	/^f0102c39:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	e8 51 21 00 00       	call   f0104d92 <memset>$/;"	l
f0102c41	obj/kern/kernel.asm	/^f0102c41:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	00 $/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	00 $/;"	l
f0102c51	obj/kern/kernel.asm	/^f0102c51:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102c55	obj/kern/kernel.asm	/^f0102c55:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c5d	obj/kern/kernel.asm	/^f0102c5d:	e8 05 e5 ff ff       	call   f0101167 <page_insert>$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	74 24                	je     f0102c8d <mem_init+0x1a7e>$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	c7 44 24 0c db 59 10 	movl   $0xf01059db,0xc(%esp)$/;"	l
f0102c70	obj/kern/kernel.asm	/^f0102c70:	f0 $/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	f0 $/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	c7 44 24 04 1a 04 00 	movl   $0x41a,0x4(%esp)$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	00 $/;"	l
f0102c81	obj/kern/kernel.asm	/^f0102c81:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	e8 cd d4 ff ff       	call   f010015a <_panic>$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	01 01 01 $/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	74 24                	je     f0102cbd <mem_init+0x1aae>$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	c7 44 24 0c 0c 62 10 	movl   $0xf010620c,0xc(%esp)$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	f0 $/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	f0 $/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	00 $/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	e8 9d d4 ff ff       	call   f010015a <_panic>$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	00 $/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	00 $/;"	l
f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	e8 89 e4 ff ff       	call   f0101167 <page_insert>$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	02 02 02 $/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	74 24                	je     f0102d0e <mem_init+0x1aff>$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	c7 44 24 0c 30 62 10 	movl   $0xf0106230,0xc(%esp)$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	f0 $/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	f0 $/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	c7 44 24 04 1d 04 00 	movl   $0x41d,0x4(%esp)$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	00 $/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	e8 4c d4 ff ff       	call   f010015a <_panic>$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	74 24                	je     f0102d39 <mem_init+0x1b2a>$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	c7 44 24 0c fd 59 10 	movl   $0xf01059fd,0xc(%esp)$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	f0 $/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	f0 $/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	00 $/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	e8 21 d4 ff ff       	call   f010015a <_panic>$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	74 24                	je     f0102d64 <mem_init+0x1b55>$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	c7 44 24 0c 67 5a 10 	movl   $0xf0105a67,0xc(%esp)$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	f0 $/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	f0 $/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f0102d57	obj/kern/kernel.asm	/^f0102d57:	00 $/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	e8 f6 d3 ff ff       	call   f010015a <_panic>$/;"	l
f0102d64	obj/kern/kernel.asm	/^f0102d64:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	03 03 03 $/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	89 d8                	mov    %ebx,%eax$/;"	l
f0102d70	obj/kern/kernel.asm	/^f0102d70:	2b 05 4c be 1e f0    	sub    0xf01ebe4c,%eax$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	89 c2                	mov    %eax,%edx$/;"	l
f0102d7e	obj/kern/kernel.asm	/^f0102d7e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	3b 15 44 be 1e f0    	cmp    0xf01ebe44,%edx$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	72 20                	jb     f0102da9 <mem_init+0x1b9a>$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	f0 $/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	00 $/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	e8 b1 d3 ff ff       	call   f010015a <_panic>$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	03 03 03 $/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	74 24                	je     f0102dd9 <mem_init+0x1bca>$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	c7 44 24 0c 54 62 10 	movl   $0xf0106254,0xc(%esp)$/;"	l
f0102dbc	obj/kern/kernel.asm	/^f0102dbc:	f0 $/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	f0 $/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	00 $/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	e8 81 d3 ff ff       	call   f010015a <_panic>$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	00 $/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	e8 30 e3 ff ff       	call   f010111e <page_remove>$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	74 24                	je     f0102e19 <mem_init+0x1c0a>$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	c7 44 24 0c 35 5a 10 	movl   $0xf0105a35,0xc(%esp)$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	f0 $/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	f0 $/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	00 $/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	e8 41 d3 ff ff       	call   f010015a <_panic>$/;"	l
f0102e19	obj/kern/kernel.asm	/^f0102e19:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	89 f2                	mov    %esi,%edx$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	2b 15 4c be 1e f0    	sub    0xf01ebe4c,%edx$/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102e31	obj/kern/kernel.asm	/^f0102e31:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	74 24                	je     f0102e5c <mem_init+0x1c4d>$/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	c7 44 24 0c 64 5d 10 	movl   $0xf0105d64,0xc(%esp)$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	f0 $/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	f0 $/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	00 $/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	e8 fe d2 ff ff       	call   f010015a <_panic>$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	74 24                	je     f0102e8d <mem_init+0x1c7e>$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	c7 44 24 0c ec 59 10 	movl   $0xf01059ec,0xc(%esp)$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	f0 $/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	f0 $/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	00 $/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	c7 04 24 cc 57 10 f0 	movl   $0xf01057cc,(%esp)$/;"	l
f0102e88	obj/kern/kernel.asm	/^f0102e88:	e8 cd d2 ff ff       	call   f010015a <_panic>$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	e8 fc df ff ff       	call   f0100e97 <page_free>$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	c7 04 24 80 62 10 f0 	movl   $0xf0106280,(%esp)$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	e8 4b 08 00 00       	call   f01036f2 <cprintf>$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	5b                   	pop    %ebx$/;"	l
f0102eab	obj/kern/kernel.asm	/^f0102eab:	5e                   	pop    %esi$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	5f                   	pop    %edi$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	5d                   	pop    %ebp$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	c3                   	ret    $/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf <user_mem_check>:$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	55                   	push   %ebp$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	5d                   	pop    %ebp$/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	c3                   	ret    $/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9 <user_mem_assert>:$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	55                   	push   %ebp$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	53                   	push   %ebx$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102ed0	obj/kern/kernel.asm	/^f0102ed0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	e8 cc ff ff ff       	call   f0102eaf <user_mem_check>$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	85 c0                	test   %eax,%eax$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	79 23                	jns    f0102f0a <user_mem_assert+0x51>$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	00 $/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	c7 04 24 ac 62 10 f0 	movl   $0xf01062ac,(%esp)$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	e8 f0 07 00 00       	call   f01036f2 <cprintf>$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	e8 bb 06 00 00       	call   f01035c5 <env_destroy>$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	83 c4 14             	add    $0x14,%esp$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	5b                   	pop    %ebx$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	5d                   	pop    %ebp$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	c3                   	ret    $/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10 <region_alloc>:$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	55                   	push   %ebp$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	57                   	push   %edi$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	56                   	push   %esi$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	53                   	push   %ebx$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	89 c6                	mov    %eax,%esi$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	89 d3                	mov    %edx,%ebx$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	01 ca                	add    %ecx,%edx$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	89 d7                	mov    %edx,%edi$/;"	l
f0102f27	obj/kern/kernel.asm	/^f0102f27:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	eb 6d                	jmp    f0102f9c <region_alloc+0x8c>$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	e8 c6 de ff ff       	call   f0100e01 <page_alloc>$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	85 c0                	test   %eax,%eax$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	75 1c                	jne    f0102f5b <region_alloc+0x4b>$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	c7 44 24 08 ec 62 10 	movl   $0xf01062ec,0x8(%esp)$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	f0 $/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	c7 44 24 04 21 01 00 	movl   $0x121,0x4(%esp)$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	00 $/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	e8 ff d1 ff ff       	call   f010015a <_panic>$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	00 $/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	8b 46 5c             	mov    0x5c(%esi),%eax$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	e8 f1 e1 ff ff       	call   f0101167 <page_insert>$/;"	l
f0102f76	obj/kern/kernel.asm	/^f0102f76:	85 c0                	test   %eax,%eax$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	74 1c                	je     f0102f96 <region_alloc+0x86>$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	c7 44 24 08 60 63 10 	movl   $0xf0106360,0x8(%esp)$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	f0 $/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	c7 44 24 04 24 01 00 	movl   $0x124,0x4(%esp)$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	00 $/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	e8 c4 d1 ff ff       	call   f010015a <_panic>$/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	76 8f                	jbe    f0102f2f <region_alloc+0x1f>$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	5b                   	pop    %ebx$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	5e                   	pop    %esi$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	5f                   	pop    %edi$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	5d                   	pop    %ebp$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	c3                   	ret    $/;"	l
f0102fa8	obj/kern/kernel.asm	/^f0102fa8 <envid2env>:$/;"	l
f0102fa8	obj/kern/kernel.asm	/^f0102fa8:	55                   	push   %ebp$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	53                   	push   %ebx$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	8a 5d 10             	mov    0x10(%ebp),%bl$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	85 c0                	test   %eax,%eax$/;"	l
f0102fb7	obj/kern/kernel.asm	/^f0102fb7:	75 0e                	jne    f0102fc7 <envid2env+0x1f>$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	eb 55                	jmp    f010301c <envid2env+0x74>$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	89 c2                	mov    %eax,%edx$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	03 15 a8 b1 1e f0    	add    0xf01eb1a8,%edx$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	83 7a 54 00          	cmpl   $0x0,0x54(%edx)$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	74 05                	je     f0102fe6 <envid2env+0x3e>$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	39 42 48             	cmp    %eax,0x48(%edx)$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	74 0d                	je     f0102ff3 <envid2env+0x4b>$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	eb 29                	jmp    f010301c <envid2env+0x74>$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	84 db                	test   %bl,%bl$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	74 1e                	je     f0103015 <envid2env+0x6d>$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	39 c2                	cmp    %eax,%edx$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	74 15                	je     f0103015 <envid2env+0x6d>$/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	39 5a 4c             	cmp    %ebx,0x4c(%edx)$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	74 0d                	je     f0103015 <envid2env+0x6d>$/;"	l
f0103008	obj/kern/kernel.asm	/^f0103008:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	eb 07                	jmp    f010301c <envid2env+0x74>$/;"	l
f0103015	obj/kern/kernel.asm	/^f0103015:	89 11                	mov    %edx,(%ecx)$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	5b                   	pop    %ebx$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	5d                   	pop    %ebp$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	c3                   	ret    $/;"	l
f010301f	obj/kern/kernel.asm	/^f010301f <env_init_percpu>:$/;"	l
f010301f	obj/kern/kernel.asm	/^f010301f:	55                   	push   %ebp$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	89 e5                	mov    %esp,%ebp$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	b8 00 63 12 f0       	mov    $0xf0126300,%eax$/;"	l
f0103027	obj/kern/kernel.asm	/^f0103027:	0f 01 10             	lgdtl  (%eax)$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	8e e8                	mov    %eax,%gs$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	8e e0                	mov    %eax,%fs$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	b0 10                	mov    $0x10,%al$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	8e c0                	mov    %eax,%es$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	8e d8                	mov    %eax,%ds$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	8e d0                	mov    %eax,%ss$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	ea 42 30 10 f0 08 00 	ljmp   $0x8,$0xf0103042$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	b0 00                	mov    $0x0,%al$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	0f 00 d0             	lldt   %ax$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	5d                   	pop    %ebp$/;"	l
f0103048	obj/kern/kernel.asm	/^f0103048:	c3                   	ret    $/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049 <env_init>:$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	55                   	push   %ebp$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	89 e5                	mov    %esp,%ebp$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	c7 44 24 08 00 80 01 	movl   $0x18000,0x8(%esp)$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	00 $/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	00 $/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	a1 a8 b1 1e f0       	mov    0xf01eb1a8,%eax$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	e8 26 1d 00 00       	call   f0104d92 <memset>$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	8b 0d a8 b1 1e f0    	mov    0xf01eb1a8,%ecx$/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	89 0d ac b1 1e f0    	mov    %ecx,0xf01eb1ac$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	8d 41 60             	lea    0x60(%ecx),%eax$/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	89 40 e4             	mov    %eax,-0x1c(%eax)$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	42                   	inc    %edx$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	83 c0 60             	add    $0x60,%eax$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	75 f1                	jne    f0103080 <env_init+0x37>$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	c7 81 e4 7f 01 00 00 	movl   $0x0,0x17fe4(%ecx)$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	00 00 00 $/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	e8 81 ff ff ff       	call   f010301f <env_init_percpu>$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	c9                   	leave  $/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	c3                   	ret    $/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0 <env_alloc>:$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	55                   	push   %ebp$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	57                   	push   %edi$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	56                   	push   %esi$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	53                   	push   %ebx$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	8b 1d ac b1 1e f0    	mov    0xf01eb1ac,%ebx$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	85 db                	test   %ebx,%ebx$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	0f 84 b9 01 00 00    	je     f0103270 <env_alloc+0x1d0>$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01030be	obj/kern/kernel.asm	/^f01030be:	e8 3e dd ff ff       	call   f0100e01 <page_alloc>$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	89 c6                	mov    %eax,%esi$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	85 c0                	test   %eax,%eax$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	0f 84 aa 01 00 00    	je     f0103277 <env_alloc+0x1d7>$/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	8b 3d 4c be 1e f0    	mov    0xf01ebe4c,%edi$/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	29 f8                	sub    %edi,%eax$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	8b 0d 44 be 1e f0    	mov    0xf01ebe44,%ecx$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	89 c2                	mov    %eax,%edx$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	39 ca                	cmp    %ecx,%edx$/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	72 20                	jb     f010310a <env_alloc+0x6a>$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	f0 $/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	00 $/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	e8 50 d0 ff ff       	call   f010015a <_panic>$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	89 53 5c             	mov    %edx,0x5c(%ebx)$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	a1 48 be 1e f0       	mov    0xf01ebe48,%eax$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	29 f8                	sub    %edi,%eax$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	89 c7                	mov    %eax,%edi$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	39 f9                	cmp    %edi,%ecx$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	77 20                	ja     f0103149 <env_alloc+0xa9>$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	f0 $/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	00 $/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	e8 11 d0 ff ff       	call   f010015a <_panic>$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	00 $/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	e8 7a 1c 00 00       	call   f0104ddc <memmove>$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	77 20                	ja     f0103190 <env_alloc+0xf0>$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	f0 $/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	00 $/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	e8 ca cf ff ff       	call   f010015a <_panic>$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	89 c1                	mov    %eax,%ecx$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	81 e1 00 fc ff ff    	and    $0xfffffc00,%ecx$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	7f 05                	jg     f01031b6 <env_alloc+0x116>$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	89 d8                	mov    %ebx,%eax$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	2b 05 a8 b1 1e f0    	sub    0xf01eb1a8,%eax$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	c1 f8 05             	sar    $0x5,%eax$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f01031c7	obj/kern/kernel.asm	/^f01031c7:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	89 d6                	mov    %edx,%esi$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	01 f2                	add    %esi,%edx$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	89 d6                	mov    %edx,%esi$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	01 f2                	add    %esi,%edx$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	8d 04 50             	lea    (%eax,%edx,2),%eax$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	09 c1                	or     %eax,%ecx$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	89 4b 48             	mov    %ecx,0x48(%ebx)$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	00 $/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010320a	obj/kern/kernel.asm	/^f010320a:	00 $/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	e8 7f 1b 00 00       	call   f0104d92 <memset>$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	a3 ac b1 1e f0       	mov    %eax,0xf01eb1ac$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	89 18                	mov    %ebx,(%eax)$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	85 c0                	test   %eax,%eax$/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	74 05                	je     f0103250 <env_alloc+0x1b0>$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	eb 05                	jmp    f0103255 <env_alloc+0x1b5>$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	c7 04 24 11 63 10 f0 	movl   $0xf0106311,(%esp)$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	e8 89 04 00 00       	call   f01036f2 <cprintf>$/;"	l
f0103269	obj/kern/kernel.asm	/^f0103269:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	eb 0c                	jmp    f010327c <env_alloc+0x1dc>$/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	eb 05                	jmp    f010327c <env_alloc+0x1dc>$/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	5b                   	pop    %ebx$/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	5e                   	pop    %esi$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	5f                   	pop    %edi$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	5d                   	pop    %ebp$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	c3                   	ret    $/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284 <env_create>:$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	55                   	push   %ebp$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	89 e5                	mov    %esp,%ebp$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	57                   	push   %edi$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	56                   	push   %esi$/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	53                   	push   %ebx$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103297	obj/kern/kernel.asm	/^f0103297:	00 $/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	e8 fd fd ff ff       	call   f01030a0 <env_alloc>$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	85 c0                	test   %eax,%eax$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	75 1c                	jne    f01032c3 <env_create+0x3f>$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	c7 44 24 08 26 63 10 	movl   $0xf0106326,0x8(%esp)$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	f0 $/;"	l
f01032af	obj/kern/kernel.asm	/^f01032af:	c7 44 24 04 88 01 00 	movl   $0x188,0x4(%esp)$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	00 $/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	e8 97 ce ff ff       	call   f010015a <_panic>$/;"	l
f01032c3	obj/kern/kernel.asm	/^f01032c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	0f 20 da             	mov    %cr3,%edx$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	77 20                	ja     f01032f9 <env_create+0x75>$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	f0 $/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	c7 44 24 04 61 01 00 	movl   $0x161,0x4(%esp)$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	00 $/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	e8 61 ce ff ff       	call   f010015a <_panic>$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01032fe	obj/kern/kernel.asm	/^f01032fe:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103307	obj/kern/kernel.asm	/^f0103307:	74 1c                	je     f0103325 <env_create+0xa1>$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	c7 44 24 08 84 63 10 	movl   $0xf0106384,0x8(%esp)$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	f0 $/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	00 $/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	e8 35 ce ff ff       	call   f010015a <_panic>$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	89 fb                	mov    %edi,%ebx$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	01 de                	add    %ebx,%esi$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	eb 34                	jmp    f0103369 <env_create+0xe5>$/;"	l
f0103335	obj/kern/kernel.asm	/^f0103335:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	75 2c                	jne    f0103366 <env_create+0xe2>$/;"	l
f010333a	obj/kern/kernel.asm	/^f010333a:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010333d	obj/kern/kernel.asm	/^f010333d:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	e8 c8 fb ff ff       	call   f0102f10 <region_alloc>$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	01 d8                	add    %ebx,%eax$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	e8 76 1a 00 00       	call   f0104ddc <memmove>$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	39 de                	cmp    %ebx,%esi$/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	77 c8                	ja     f0103335 <env_create+0xb1>$/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103370	obj/kern/kernel.asm	/^f0103370:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	e8 88 fb ff ff       	call   f0102f10 <region_alloc>$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	5b                   	pop    %ebx$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	5e                   	pop    %esi$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	5f                   	pop    %edi$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	5d                   	pop    %ebp$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	c3                   	ret    $/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396 <env_free>:$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	55                   	push   %ebp$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	89 e5                	mov    %esp,%ebp$/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	57                   	push   %edi$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	56                   	push   %esi$/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	53                   	push   %ebx$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	39 c7                	cmp    %eax,%edi$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	75 37                	jne    f01033e2 <env_free+0x4c>$/;"	l
f01033ab	obj/kern/kernel.asm	/^f01033ab:	8b 15 48 be 1e f0    	mov    0xf01ebe48,%edx$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	77 20                	ja     f01033d9 <env_free+0x43>$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	f0 $/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	c7 44 24 04 9b 01 00 	movl   $0x19b,0x4(%esp)$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	00 $/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	e8 81 cd ff ff       	call   f010015a <_panic>$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	0f 22 da             	mov    %edx,%cr3$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	8b 57 48             	mov    0x48(%edi),%edx$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	85 c0                	test   %eax,%eax$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	74 05                	je     f01033ee <env_free+0x58>$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	eb 05                	jmp    f01033f3 <env_free+0x5d>$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	c7 04 24 3c 63 10 f0 	movl   $0xf010633c,(%esp)$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	e8 eb 02 00 00       	call   f01036f2 <cprintf>$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	0f 84 fe 00 00 00    	je     f010352a <env_free+0x194>$/;"	l
f010342c	obj/kern/kernel.asm	/^f010342c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	c7 44 24 0c aa 01 00 	movl   $0x1aa,0xc(%esp)$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	00 $/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	c7 44 24 08 fe 63 10 	movl   $0xf01063fe,0x8(%esp)$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	f0 $/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	c7 44 24 04 06 63 10 	movl   $0xf0106306,0x4(%esp)$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	f0 $/;"	l
f010344a	obj/kern/kernel.asm	/^f010344a:	c7 04 24 a4 63 10 f0 	movl   $0xf01063a4,(%esp)$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	e8 9c 02 00 00       	call   f01036f2 <cprintf>$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	89 f0                	mov    %esi,%eax$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	72 20                	jb     f0103486 <env_free+0xf0>$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	c7 44 24 08 24 5b 10 	movl   $0xf0105b24,0x8(%esp)$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	f0 $/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	c7 44 24 04 ab 01 00 	movl   $0x1ab,0x4(%esp)$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	00 $/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	e8 d4 cc ff ff       	call   f010015a <_panic>$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	c7 44 24 0c ac 01 00 	movl   $0x1ac,0xc(%esp)$/;"	l
f010348d	obj/kern/kernel.asm	/^f010348d:	00 $/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	c7 44 24 08 fe 63 10 	movl   $0xf01063fe,0x8(%esp)$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	f0 $/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	c7 44 24 04 06 63 10 	movl   $0xf0106306,0x4(%esp)$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	f0 $/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	c7 04 24 a4 63 10 f0 	movl   $0xf01063a4,(%esp)$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	e8 48 02 00 00       	call   f01036f2 <cprintf>$/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	01 $/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	74 17                	je     f01034d9 <env_free+0x143>$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	89 d8                	mov    %ebx,%eax$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	e8 45 dc ff ff       	call   f010111e <page_remove>$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	43                   	inc    %ebx$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	75 d6                	jne    f01034b8 <env_free+0x122>$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	72 1c                	jb     f0103516 <env_free+0x180>$/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	c7 44 24 08 30 5c 10 	movl   $0xf0105c30,0x8(%esp)$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	f0 $/;"	l
f0103502	obj/kern/kernel.asm	/^f0103502:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	00 $/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	e8 44 cc ff ff       	call   f010015a <_panic>$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	03 05 4c be 1e f0    	add    0xf01ebe4c,%eax$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	e8 d9 d9 ff ff       	call   f0100f03 <page_decref>$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	0f 85 d4 fe ff ff    	jne    f010340e <env_free+0x78>$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	77 20                	ja     f0103564 <env_free+0x1ce>$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f010354f	obj/kern/kernel.asm	/^f010354f:	f0 $/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	00 $/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	e8 f6 cb ff ff       	call   f010015a <_panic>$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	c7 47 5c 00 00 00 00 	movl   $0x0,0x5c(%edi)$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	3b 05 44 be 1e f0    	cmp    0xf01ebe44,%eax$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	72 1c                	jb     f0103597 <env_free+0x201>$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	c7 44 24 08 30 5c 10 	movl   $0xf0105c30,0x8(%esp)$/;"	l
f0103582	obj/kern/kernel.asm	/^f0103582:	f0 $/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	00 $/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	c7 04 24 d8 57 10 f0 	movl   $0xf01057d8,(%esp)$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	e8 c3 cb ff ff       	call   f010015a <_panic>$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	03 05 4c be 1e f0    	add    0xf01ebe4c,%eax$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	e8 5b d9 ff ff       	call   f0100f03 <page_decref>$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	a1 ac b1 1e f0       	mov    0xf01eb1ac,%eax$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	89 3d ac b1 1e f0    	mov    %edi,0xf01eb1ac$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	5b                   	pop    %ebx$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	5e                   	pop    %esi$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	5f                   	pop    %edi$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	5d                   	pop    %ebp$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	c3                   	ret    $/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5 <env_destroy>:$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	55                   	push   %ebp$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	e8 c0 fd ff ff       	call   f0103396 <env_free>$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	c7 04 24 c8 63 10 f0 	movl   $0xf01063c8,(%esp)$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	e8 10 01 00 00       	call   f01036f2 <cprintf>$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	e8 c8 d1 ff ff       	call   f01007b6 <monitor>$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	eb f2                	jmp    f01035e2 <env_destroy+0x1d>$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0 <env_pop_tf>:$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	55                   	push   %ebp$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	61                   	popa   $/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	07                   	pop    %es$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	1f                   	pop    %ds$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	cf                   	iret   $/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	c7 44 24 08 52 63 10 	movl   $0xf0106352,0x8(%esp)$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	f0 $/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	c7 44 24 04 e2 01 00 	movl   $0x1e2,0x4(%esp)$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	00 $/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	e8 3e cb ff ff       	call   f010015a <_panic>$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c <env_run>:$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	55                   	push   %ebp$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	89 e5                	mov    %esp,%ebp$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	8b 15 a4 b1 1e f0    	mov    0xf01eb1a4,%edx$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	83 7a 54 03          	cmpl   $0x3,0x54(%edx)$/;"	l
f010362f	obj/kern/kernel.asm	/^f010362f:	75 07                	jne    f0103638 <env_run+0x1c>$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	c7 42 54 02 00 00 00 	movl   $0x2,0x54(%edx)$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	a3 a4 b1 1e f0       	mov    %eax,0xf01eb1a4$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	ff 40 58             	incl   0x58(%eax)$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	8b 50 5c             	mov    0x5c(%eax),%edx$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	77 20                	ja     f0103672 <env_run+0x56>$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	c7 44 24 08 0c 5c 10 	movl   $0xf0105c0c,0x8(%esp)$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	f0 $/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	c7 44 24 04 07 02 00 	movl   $0x207,0x4(%esp)$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	00 $/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	c7 04 24 06 63 10 f0 	movl   $0xf0106306,(%esp)$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	e8 e8 ca ff ff       	call   f010015a <_panic>$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	0f 22 da             	mov    %edx,%cr3$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	e8 6d ff ff ff       	call   f01035f0 <env_pop_tf>$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684 <mc146818_read>:$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	55                   	push   %ebp$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	89 e5                	mov    %esp,%ebp$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010368f	obj/kern/kernel.asm	/^f010368f:	ee                   	out    %al,(%dx)$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	b2 71                	mov    $0x71,%dl$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	ec                   	in     (%dx),%al$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	5d                   	pop    %ebp$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	c3                   	ret    $/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698 <mc146818_write>:$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	55                   	push   %ebp$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	89 e5                	mov    %esp,%ebp$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	ee                   	out    %al,(%dx)$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	b2 71                	mov    $0x71,%dl$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	ee                   	out    %al,(%dx)$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	5d                   	pop    %ebp$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	c3                   	ret    $/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac <putch>:$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	55                   	push   %ebp$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	e8 b1 cf ff ff       	call   f010066e <cputchar>$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	c9                   	leave  $/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	c3                   	ret    $/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf <vcprintf>:$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	55                   	push   %ebp$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	c7 04 24 ac 36 10 f0 	movl   $0xf01036ac,(%esp)$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	e8 45 10 00 00       	call   f0104732 <vprintfmt>$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	c9                   	leave  $/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	c3                   	ret    $/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2 <cprintf>:$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	55                   	push   %ebp$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01036f8	obj/kern/kernel.asm	/^f01036f8:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	e8 b5 ff ff ff       	call   f01036bf <vcprintf>$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	c9                   	leave  $/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	c3                   	ret    $/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c <trap_init_percpu>:$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	55                   	push   %ebp$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	89 e5                	mov    %esp,%ebp$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	c7 05 c4 b9 1e f0 00 	movl   $0xf0000000,0xf01eb9c4$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	00 00 f0 $/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	66 c7 05 c8 b9 1e f0 	movw   $0x10,0xf01eb9c8$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	10 00 $/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	66 c7 05 48 63 12 f0 	movw   $0x67,0xf0126348$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	67 00 $/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	b8 c0 b9 1e f0       	mov    $0xf01eb9c0,%eax$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	66 a3 4a 63 12 f0    	mov    %ax,0xf012634a$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	89 c2                	mov    %eax,%edx$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	88 15 4c 63 12 f0    	mov    %dl,0xf012634c$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	c6 05 4e 63 12 f0 40 	movb   $0x40,0xf012634e$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	a2 4f 63 12 f0       	mov    %al,0xf012634f$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	c6 05 4d 63 12 f0 89 	movb   $0x89,0xf012634d$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	0f 00 d8             	ltr    %ax$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	b8 50 63 12 f0       	mov    $0xf0126350,%eax$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	5d                   	pop    %ebp$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	c3                   	ret    $/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769 <trap_init>:$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	55                   	push   %ebp$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	89 e5                	mov    %esp,%ebp$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	e8 9b ff ff ff       	call   f010370c <trap_init_percpu>$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	5d                   	pop    %ebp$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	c3                   	ret    $/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773 <print_regs>:$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	55                   	push   %ebp$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	89 e5                	mov    %esp,%ebp$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	53                   	push   %ebx$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	8b 03                	mov    (%ebx),%eax$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	c7 04 24 07 64 10 f0 	movl   $0xf0106407,(%esp)$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	e8 63 ff ff ff       	call   f01036f2 <cprintf>$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	c7 04 24 16 64 10 f0 	movl   $0xf0106416,(%esp)$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	e8 50 ff ff ff       	call   f01036f2 <cprintf>$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	c7 04 24 25 64 10 f0 	movl   $0xf0106425,(%esp)$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	e8 3d ff ff ff       	call   f01036f2 <cprintf>$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	c7 04 24 34 64 10 f0 	movl   $0xf0106434,(%esp)$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	e8 2a ff ff ff       	call   f01036f2 <cprintf>$/;"	l
f01037c8	obj/kern/kernel.asm	/^f01037c8:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	c7 04 24 43 64 10 f0 	movl   $0xf0106443,(%esp)$/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	e8 17 ff ff ff       	call   f01036f2 <cprintf>$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	c7 04 24 52 64 10 f0 	movl   $0xf0106452,(%esp)$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	e8 04 ff ff ff       	call   f01036f2 <cprintf>$/;"	l
f01037ee	obj/kern/kernel.asm	/^f01037ee:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	c7 04 24 61 64 10 f0 	movl   $0xf0106461,(%esp)$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	e8 f1 fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	c7 04 24 70 64 10 f0 	movl   $0xf0106470,(%esp)$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	e8 de fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103814	obj/kern/kernel.asm	/^f0103814:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	5b                   	pop    %ebx$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	5d                   	pop    %ebp$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	c3                   	ret    $/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a <print_trapframe>:$/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	55                   	push   %ebp$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	89 e5                	mov    %esp,%ebp$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	53                   	push   %ebx$/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	c7 04 24 a6 65 10 f0 	movl   $0xf01065a6,(%esp)$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	e8 be fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	e8 37 ff ff ff       	call   f0103773 <print_regs>$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	c7 04 24 c1 64 10 f0 	movl   $0xf01064c1,(%esp)$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	e8 a2 fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	c7 04 24 d4 64 10 f0 	movl   $0xf01064d4,(%esp)$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	e8 8e fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103867	obj/kern/kernel.asm	/^f0103867:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	77 09                	ja     f0103875 <print_trapframe+0x5b>$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	8b 14 85 80 67 10 f0 	mov    -0xfef9880(,%eax,4),%edx$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	eb 11                	jmp    f0103886 <print_trapframe+0x6c>$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	75 07                	jne    f0103881 <print_trapframe+0x67>$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	ba 7f 64 10 f0       	mov    $0xf010647f,%edx$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	eb 05                	jmp    f0103886 <print_trapframe+0x6c>$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	ba 8b 64 10 f0       	mov    $0xf010648b,%edx$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	c7 04 24 e7 64 10 f0 	movl   $0xf01064e7,(%esp)$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	e8 58 fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	3b 1d 28 ba 1e f0    	cmp    0xf01eba28,%ebx$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	75 19                	jne    f01038bb <print_trapframe+0xa1>$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	75 13                	jne    f01038bb <print_trapframe+0xa1>$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01038ab	obj/kern/kernel.asm	/^f01038ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	c7 04 24 f9 64 10 f0 	movl   $0xf01064f9,(%esp)$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	e8 37 fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	c7 04 24 08 65 10 f0 	movl   $0xf0106508,(%esp)$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	e8 24 fe ff ff       	call   f01036f2 <cprintf>$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	75 4d                	jne    f0103921 <print_trapframe+0x107>$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	a8 01                	test   $0x1,%al$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	74 07                	je     f01038e2 <print_trapframe+0xc8>$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	b9 9a 64 10 f0       	mov    $0xf010649a,%ecx$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	eb 05                	jmp    f01038e7 <print_trapframe+0xcd>$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	b9 a5 64 10 f0       	mov    $0xf01064a5,%ecx$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	a8 02                	test   $0x2,%al$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	74 07                	je     f01038f2 <print_trapframe+0xd8>$/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	ba b1 64 10 f0       	mov    $0xf01064b1,%edx$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	eb 05                	jmp    f01038f7 <print_trapframe+0xdd>$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	ba b7 64 10 f0       	mov    $0xf01064b7,%edx$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	a8 04                	test   $0x4,%al$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	74 07                	je     f0103902 <print_trapframe+0xe8>$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	b8 bc 64 10 f0       	mov    $0xf01064bc,%eax$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	eb 05                	jmp    f0103907 <print_trapframe+0xed>$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	b8 d1 65 10 f0       	mov    $0xf01065d1,%eax$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	c7 04 24 16 65 10 f0 	movl   $0xf0106516,(%esp)$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	e8 d3 fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	eb 0c                	jmp    f010392d <print_trapframe+0x113>$/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	c7 04 24 be 5a 10 f0 	movl   $0xf0105abe,(%esp)$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	e8 c5 fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	c7 04 24 25 65 10 f0 	movl   $0xf0106525,(%esp)$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	e8 b2 fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	c7 04 24 34 65 10 f0 	movl   $0xf0106534,(%esp)$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	e8 9e fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	c7 04 24 47 65 10 f0 	movl   $0xf0106547,(%esp)$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	e8 8b fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	74 27                	je     f0103994 <print_trapframe+0x17a>$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	c7 04 24 56 65 10 f0 	movl   $0xf0106556,(%esp)$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	e8 72 fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	c7 04 24 65 65 10 f0 	movl   $0xf0106565,(%esp)$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	e8 5e fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	5b                   	pop    %ebx$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	5d                   	pop    %ebp$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	c3                   	ret    $/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a <trap>:$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	55                   	push   %ebp$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	89 e5                	mov    %esp,%ebp$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	57                   	push   %edi$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	56                   	push   %esi$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	fc                   	cld    $/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	9c                   	pushf  $/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	58                   	pop    %eax$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	f6 c4 02             	test   $0x2,%ah$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	74 24                	je     f01039d1 <trap+0x37>$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	c7 44 24 0c 78 65 10 	movl   $0xf0106578,0xc(%esp)$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	f0 $/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	f0 $/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	c7 44 24 04 a7 00 00 	movl   $0xa7,0x4(%esp)$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	00 $/;"	l
f01039c5	obj/kern/kernel.asm	/^f01039c5:	c7 04 24 91 65 10 f0 	movl   $0xf0106591,(%esp)$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	e8 89 c7 ff ff       	call   f010015a <_panic>$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	c7 04 24 9d 65 10 f0 	movl   $0xf010659d,(%esp)$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	e8 11 fd ff ff       	call   f01036f2 <cprintf>$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	83 e0 03             	and    $0x3,%eax$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	75 3c                	jne    f0103a29 <trap+0x8f>$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	85 c0                	test   %eax,%eax$/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	75 24                	jne    f0103a1a <trap+0x80>$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	c7 44 24 0c b8 65 10 	movl   $0xf01065b8,0xc(%esp)$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	f0 $/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	f0 $/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	00 $/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	c7 04 24 91 65 10 f0 	movl   $0xf0106591,(%esp)$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	e8 40 c7 ff ff       	call   f010015a <_panic>$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	89 c7                	mov    %eax,%edi$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	8b 35 a4 b1 1e f0    	mov    0xf01eb1a4,%esi$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	89 35 28 ba 1e f0    	mov    %esi,0xf01eba28$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	e8 e3 fd ff ff       	call   f010381a <print_trapframe>$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	75 1c                	jne    f0103a5a <trap+0xc0>$/;"	l
f0103a3e	obj/kern/kernel.asm	/^f0103a3e:	c7 44 24 08 bf 65 10 	movl   $0xf01065bf,0x8(%esp)$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	f0 $/;"	l
f0103a46	obj/kern/kernel.asm	/^f0103a46:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	00 $/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	c7 04 24 91 65 10 f0 	movl   $0xf0106591,(%esp)$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	e8 00 c7 ff ff       	call   f010015a <_panic>$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	e8 5e fb ff ff       	call   f01035c5 <env_destroy>$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	85 c0                	test   %eax,%eax$/;"	l
f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	74 06                	je     f0103a76 <trap+0xdc>$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	74 24                	je     f0103a9a <trap+0x100>$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	c7 44 24 0c 1c 67 10 	movl   $0xf010671c,0xc(%esp)$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	f0 $/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	f0 $/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	c7 44 24 04 bf 00 00 	movl   $0xbf,0x4(%esp)$/;"	l
f0103a8d	obj/kern/kernel.asm	/^f0103a8d:	00 $/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	c7 04 24 91 65 10 f0 	movl   $0xf0106591,(%esp)$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	e8 c0 c6 ff ff       	call   f010015a <_panic>$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	e8 7a fb ff ff       	call   f010361c <env_run>$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2 <page_fault_handler>:$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	55                   	push   %ebp$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	89 e5                	mov    %esp,%ebp$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	53                   	push   %ebx$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	8b 53 30             	mov    0x30(%ebx),%edx$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103ab6	obj/kern/kernel.asm	/^f0103ab6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103aba	obj/kern/kernel.asm	/^f0103aba:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	c7 04 24 48 67 10 f0 	movl   $0xf0106748,(%esp)$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	e8 20 fc ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	e8 40 fd ff ff       	call   f010381a <print_trapframe>$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	a1 a4 b1 1e f0       	mov    0xf01eb1a4,%eax$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	e8 de fa ff ff       	call   f01035c5 <env_destroy>$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	5b                   	pop    %ebx$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	5d                   	pop    %ebp$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	c3                   	ret    $/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	00 00                	add    %al,(%eax)$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0 <syscall>:$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	55                   	push   %ebp$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103af6	obj/kern/kernel.asm	/^f0103af6:	c7 44 24 08 d0 67 10 	movl   $0xf01067d0,0x8(%esp)$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	f0 $/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	00 $/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	c7 04 24 e8 67 10 f0 	movl   $0xf01067e8,(%esp)$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	e8 48 c6 ff ff       	call   f010015a <_panic>$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14 <stab_binsearch>:$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	55                   	push   %ebp$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	57                   	push   %edi$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	56                   	push   %esi$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	53                   	push   %ebx$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	8b 01                	mov    (%ecx),%eax$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	e9 83 00 00 00       	jmp    f0103bbf <stab_binsearch+0xab>$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	01 d8                	add    %ebx,%eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	89 c7                	mov    %eax,%edi$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0103b46	obj/kern/kernel.asm	/^f0103b46:	01 c7                	add    %eax,%edi$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	d1 ff                	sar    %edi$/;"	d
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	89 f8                	mov    %edi,%eax$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	eb 01                	jmp    f0103b59 <stab_binsearch+0x45>$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	48                   	dec    %eax$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	7f 1e                	jg     f0103b7b <stab_binsearch+0x67>$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	39 f1                	cmp    %esi,%ecx$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	75 f1                	jne    f0103b58 <stab_binsearch+0x44>$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	76 18                	jbe    f0103b91 <stab_binsearch+0x7d>$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	eb 05                	jmp    f0103b80 <stab_binsearch+0x6c>$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	eb 3f                	jmp    f0103bbf <stab_binsearch+0xab>$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	89 02                	mov    %eax,(%edx)$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	eb 2e                	jmp    f0103bbf <stab_binsearch+0xab>$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	73 15                	jae    f0103bab <stab_binsearch+0x97>$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	49                   	dec    %ecx$/;"	l
f0103b9a	obj/kern/kernel.asm	/^f0103b9a:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	89 08                	mov    %ecx,(%eax)$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	eb 14                	jmp    f0103bbf <stab_binsearch+0xab>$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0103bae	obj/kern/kernel.asm	/^f0103bae:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	89 c3                	mov    %eax,%ebx$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	0f 8e 74 ff ff ff    	jle    f0103b3c <stab_binsearch+0x28>$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	75 0d                	jne    f0103bdb <stab_binsearch+0xc7>$/;"	l
f0103bce	obj/kern/kernel.asm	/^f0103bce:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	8b 02                	mov    (%edx),%eax$/;"	l
f0103bd3	obj/kern/kernel.asm	/^f0103bd3:	48                   	dec    %eax$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	eb 2a                	jmp    f0103c05 <stab_binsearch+0xf1>$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	8b 01                	mov    (%ecx),%eax$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	8b 5d ec             	mov    -0x14(%ebp),%ebx$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	eb 01                	jmp    f0103bf2 <stab_binsearch+0xde>$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	48                   	dec    %eax$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	39 c8                	cmp    %ecx,%eax$/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	7e 0a                	jle    f0103c00 <stab_binsearch+0xec>$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103bfe	obj/kern/kernel.asm	/^f0103bfe:	75 f1                	jne    f0103bf1 <stab_binsearch+0xdd>$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	89 02                	mov    %eax,(%edx)$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	5b                   	pop    %ebx$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	5e                   	pop    %esi$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	5f                   	pop    %edi$/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	5d                   	pop    %ebp$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	c3                   	ret    $/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d <debuginfo_eip>:$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	55                   	push   %ebp$/;"	l
f0103c0e	obj/kern/kernel.asm	/^f0103c0e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	57                   	push   %edi$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	56                   	push   %esi$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	53                   	push   %ebx$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103c19	obj/kern/kernel.asm	/^f0103c19:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	c7 06 f7 67 10 f0    	movl   $0xf01067f7,(%esi)$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	c7 46 08 f7 67 10 f0 	movl   $0xf01067f7,0x8(%esi)$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	77 22                	ja     f0103c6b <debuginfo_eip+0x5e>$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	8b 1d 00 00 20 00    	mov    0x200000,%ebx$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	8b 1d 08 00 20 00    	mov    0x200008,%ebx$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	8b 1d 0c 00 20 00    	mov    0x20000c,%ebx$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	eb 1a                	jmp    f0103c85 <debuginfo_eip+0x78>$/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	c7 45 d0 1b ba 11 f0 	movl   $0xf011ba1b,-0x30(%ebp)$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	c7 45 cc e9 19 11 f0 	movl   $0xf01119e9,-0x34(%ebp)$/;"	l
f0103c79	obj/kern/kernel.asm	/^f0103c79:	b8 e8 19 11 f0       	mov    $0xf01119e8,%eax$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	c7 45 d4 90 84 10 f0 	movl   $0xf0108490,-0x2c(%ebp)$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	39 5d cc             	cmp    %ebx,-0x34(%ebp)$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	0f 83 24 01 00 00    	jae    f0103db5 <debuginfo_eip+0x1a8>$/;"	l
f0103c91	obj/kern/kernel.asm	/^f0103c91:	80 7b ff 00          	cmpb   $0x0,-0x1(%ebx)$/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	0f 85 21 01 00 00    	jne    f0103dbc <debuginfo_eip+0x1af>$/;"	l
f0103c9b	obj/kern/kernel.asm	/^f0103c9b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0103ca8	obj/kern/kernel.asm	/^f0103ca8:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	89 d1                	mov    %edx,%ecx$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	01 ca                	add    %ecx,%edx$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	89 d1                	mov    %edx,%ecx$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	01 ca                	add    %ecx,%edx$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	8d 44 50 ff          	lea    -0x1(%eax,%edx,2),%eax$/;"	l
f0103cc3	obj/kern/kernel.asm	/^f0103cc3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	e8 35 fe ff ff       	call   f0103b14 <stab_binsearch>$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	85 c0                	test   %eax,%eax$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	0f 84 d9 00 00 00    	je     f0103dc3 <debuginfo_eip+0x1b6>$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103ced	obj/kern/kernel.asm	/^f0103ced:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	e8 08 fe ff ff       	call   f0103b14 <stab_binsearch>$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	3b 5d d8             	cmp    -0x28(%ebp),%ebx$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	7f 23                	jg     f0103d37 <debuginfo_eip+0x12a>$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	8d 04 82             	lea    (%edx,%eax,4),%eax$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	8b 10                	mov    (%eax),%edx$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	2b 4d cc             	sub    -0x34(%ebp),%ecx$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	39 ca                	cmp    %ecx,%edx$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	73 06                	jae    f0103d2f <debuginfo_eip+0x122>$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	03 55 cc             	add    -0x34(%ebp),%edx$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	89 56 08             	mov    %edx,0x8(%esi)$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	eb 06                	jmp    f0103d3d <debuginfo_eip+0x130>$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	00 $/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	e8 2a 10 00 00       	call   f0104d7a <strfind>$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	8d 44 82 08          	lea    0x8(%edx,%eax,4),%eax$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	eb 04                	jmp    f0103d69 <debuginfo_eip+0x15c>$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	4b                   	dec    %ebx$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	7c 19                	jl     f0103d86 <debuginfo_eip+0x179>$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	8a 50 fc             	mov    -0x4(%eax),%dl$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	74 69                	je     f0103dde <debuginfo_eip+0x1d1>$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	75 eb                	jne    f0103d65 <debuginfo_eip+0x158>$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	74 e6                	je     f0103d65 <debuginfo_eip+0x158>$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	eb 5d                	jmp    f0103dde <debuginfo_eip+0x1d1>$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	03 45 cc             	add    -0x34(%ebp),%eax$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	89 06                	mov    %eax,(%esi)$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	39 c8                	cmp    %ecx,%eax$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	7d 3a                	jge    f0103dca <debuginfo_eip+0x1bd>$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	40                   	inc    %eax$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	eb 04                	jmp    f0103da1 <debuginfo_eip+0x194>$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	ff 46 14             	incl   0x14(%esi)$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	40                   	inc    %eax$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	39 c8                	cmp    %ecx,%eax$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	74 2c                	je     f0103dd1 <debuginfo_eip+0x1c4>$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	80 7a f4 a0          	cmpb   $0xa0,-0xc(%edx)$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	74 ef                	je     f0103d9d <debuginfo_eip+0x190>$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	eb 21                	jmp    f0103dd6 <debuginfo_eip+0x1c9>$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	eb 1a                	jmp    f0103dd6 <debuginfo_eip+0x1c9>$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	eb 13                	jmp    f0103dd6 <debuginfo_eip+0x1c9>$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	eb 0c                	jmp    f0103dd6 <debuginfo_eip+0x1c9>$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	eb 05                	jmp    f0103dd6 <debuginfo_eip+0x1c9>$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	5b                   	pop    %ebx$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	5e                   	pop    %esi$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	5f                   	pop    %edi$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	5d                   	pop    %ebp$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	c3                   	ret    $/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	8b 04 83             	mov    (%ebx,%eax,4),%eax$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	39 d0                	cmp    %edx,%eax$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	72 90                	jb     f0103d81 <debuginfo_eip+0x174>$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	eb 93                	jmp    f0103d86 <debuginfo_eip+0x179>$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4 <draw_tux>:$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	55                   	push   %ebp$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	89 e5                	mov    %esp,%ebp$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	57                   	push   %edi$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	56                   	push   %esi$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	53                   	push   %ebx$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	c7 04 24 01 68 10 f0 	movl   $0xf0106801,(%esp)$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	e8 e9 f8 ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	e8 ea 01 00 00       	call   f0103ff8 <prepare_buffer>$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	c7 04 24 1d 68 10 f0 	movl   $0xf010681d,(%esp)$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	e8 d8 f8 ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f0103e21	obj/kern/kernel.asm	/^f0103e21:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	e8 51 c8 ff ff       	call   f010067e <getchar>$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	75 0b                	jne    f0103e3d <draw_tux+0x49>$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	7e 25                	jle    f0103e5d <draw_tux+0x69>$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	ff 4d d4             	decl   -0x2c(%ebp)$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	eb 2e                	jmp    f0103e6b <draw_tux+0x77>$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	75 0b                	jne    f0103e4d <draw_tux+0x59>$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	83 7d d0 26          	cmpl   $0x26,-0x30(%ebp)$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	7f e0                	jg     f0103e28 <draw_tux+0x34>$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	ff 45 d0             	incl   -0x30(%ebp)$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	eb 1e                	jmp    f0103e6b <draw_tux+0x77>$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	75 0b                	jne    f0103e5d <draw_tux+0x69>$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	83 7d d4 5d          	cmpl   $0x5d,-0x2c(%ebp)$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	7f d0                	jg     f0103e28 <draw_tux+0x34>$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	ff 45 d4             	incl   -0x2c(%ebp)$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	eb 0e                	jmp    f0103e6b <draw_tux+0x77>$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	75 c6                	jne    f0103e28 <draw_tux+0x34>$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	7e c0                	jle    f0103e28 <draw_tux+0x34>$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	ff 4d d0             	decl   -0x30(%ebp)$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	e8 88 01 00 00       	call   f0103ff8 <prepare_buffer>$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	eb 7a                	jmp    f0103eff <draw_tux+0x10b>$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	85 db                	test   %ebx,%ebx$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	78 10                	js     f0103e99 <draw_tux+0xa5>$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	81 ff c7 00 00 00    	cmp    $0xc7,%edi$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	7f 08                	jg     f0103e99 <draw_tux+0xa5>$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	81 fb 3f 01 00 00    	cmp    $0x13f,%ebx$/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	7e 24                	jle    f0103ebd <draw_tux+0xc9>$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	c7 44 24 0c 70 68 10 	movl   $0xf0106870,0xc(%esp)$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	f0 $/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	f0 $/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	00 $/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	c7 04 24 32 68 10 f0 	movl   $0xf0106832,(%esp)$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	e8 9d c2 ff ff       	call   f010015a <_panic>$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	88 84 0e 60 be 1e f0 	mov    %al,-0xfe141a0(%esi,%ecx,1)$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	41                   	inc    %ecx$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	43                   	inc    %ebx$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	81 f9 e1 00 00 00    	cmp    $0xe1,%ecx$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	75 7e                	jne    f0103f4c <draw_tux+0x158>$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	ff 45 dc             	incl   -0x24(%ebp)$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	81 7d dc a0 00 00 00 	cmpl   $0xa0,-0x24(%ebp)$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	75 22                	jne    f0103eff <draw_tux+0x10b>$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	c7 04 24 41 68 10 f0 	movl   $0xf0106841,(%esp)$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	e8 09 f8 ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	e8 2e 01 00 00       	call   f010401c <display_buffer>$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	c7 04 24 5d 68 10 f0 	movl   $0xf010685d,(%esp)$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	e8 f8 f7 ff ff       	call   f01036f2 <cprintf>$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	e9 29 ff ff ff       	jmp    f0103e28 <draw_tux+0x34>$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	f7 6d dc             	imull  -0x24(%ebp)$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	d1 fa                	sar    %edx$/;"	d
f0103f09	obj/kern/kernel.asm	/^f0103f09:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	29 c2                	sub    %eax,%edx$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	8d 04 92             	lea    (%edx,%edx,4),%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	8d 04 42             	lea    (%edx,%eax,2),%eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	8d 04 82             	lea    (%edx,%eax,4),%eax$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	89 f9                	mov    %edi,%ecx$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	89 fa                	mov    %edi,%edx$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	01 ca                	add    %ecx,%edx$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	8b 04 85 c0 68 10 f0 	mov    -0xfef9740(,%eax,4),%eax$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	85 ff                	test   %edi,%edi$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	0f 88 5e ff ff ff    	js     f0103e99 <draw_tux+0xa5>$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	89 de                	mov    %ebx,%esi$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	01 d6                	add    %edx,%esi$/;"	l
f0103f47	obj/kern/kernel.asm	/^f0103f47:	e9 39 ff ff ff       	jmp    f0103e85 <draw_tux+0x91>$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	f7 e9                	imul   %ecx$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	d1 fa                	sar    %edx$/;"	d
f0103f55	obj/kern/kernel.asm	/^f0103f55:	89 c8                	mov    %ecx,%eax$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	29 c2                	sub    %eax,%edx$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	03 55 e4             	add    -0x1c(%ebp),%edx$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	8b 04 95 c0 68 10 f0 	mov    -0xfef9740(,%edx,4),%eax$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	e9 1a ff ff ff       	jmp    f0103e85 <draw_tux+0x91>$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b <draw_color>:$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	55                   	push   %ebp$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	56                   	push   %esi$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	53                   	push   %ebx$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	e8 80 00 00 00       	call   f0103ff8 <prepare_buffer>$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	e8 01 c7 ff ff       	call   f010067e <getchar>$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	74 f6                	je     f0103f78 <draw_color+0xd>$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	eb 62                	jmp    f0103fe6 <draw_color+0x7b>$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	85 c0                	test   %eax,%eax$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	78 13                	js     f0103f9b <draw_color+0x30>$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	85 d2                	test   %edx,%edx$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	78 0f                	js     f0103f9b <draw_color+0x30>$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	3d c8 00 00 00       	cmp    $0xc8,%eax$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	74 08                	je     f0103f9b <draw_color+0x30>$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	81 fa 40 01 00 00    	cmp    $0x140,%edx$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	75 24                	jne    f0103fbf <draw_color+0x54>$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	c7 44 24 0c 70 68 10 	movl   $0xf0106870,0xc(%esp)$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	f0 $/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	f0 $/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	00 $/;"	l
f0103fb3	obj/kern/kernel.asm	/^f0103fb3:	c7 04 24 32 68 10 f0 	movl   $0xf0106832,(%esp)$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	e8 9b c1 ff ff       	call   f010015a <_panic>$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	89 c3                	mov    %eax,%ebx$/;"	l
f0103fc1	obj/kern/kernel.asm	/^f0103fc1:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	89 c1                	mov    %eax,%ecx$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	c1 e1 06             	shl    $0x6,%ecx$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	01 f3                	add    %esi,%ebx$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	40                   	inc    %eax$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	3d a0 00 00 00       	cmp    $0xa0,%eax$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	75 ae                	jne    f0103f84 <draw_color+0x19>$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	42                   	inc    %edx$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	81 fa 00 01 00 00    	cmp    $0x100,%edx$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	75 0c                	jne    f0103feb <draw_color+0x80>$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	e8 38 00 00 00       	call   f010401c <display_buffer>$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	eb 92                	jmp    f0103f78 <draw_color+0xd>$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	8d b2 60 be 1e f0    	lea    -0xfe141a0(%edx),%esi$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	eb 90                	jmp    f0103f88 <draw_color+0x1d>$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8 <prepare_buffer>:$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	55                   	push   %ebp$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	c7 44 24 08 00 fa 00 	movl   $0xfa00,0x8(%esp)$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	00 $/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	00 $/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	c7 04 24 60 be 1e f0 	movl   $0xf01ebe60,(%esp)$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	e8 78 0d 00 00       	call   f0104d92 <memset>$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	c9                   	leave  $/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	c3                   	ret    $/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c <display_buffer>:$/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	55                   	push   %ebp$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	89 e5                	mov    %esp,%ebp$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	c7 05 58 63 12 f0 00 	movl   $0xf00a0000,0xf0126358$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	00 0a f0 $/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	c7 44 24 08 00 fa 00 	movl   $0xfa00,0x8(%esp)$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	00 $/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	c7 44 24 04 60 be 1e 	movl   $0xf01ebe60,0x4(%esp)$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	f0 $/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	c7 04 24 00 00 0a f0 	movl   $0xf00a0000,(%esp)$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	e8 94 0d 00 00       	call   f0104ddc <memmove>$/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048:	c9                   	leave  $/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	c3                   	ret    $/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a <draw_square>:$/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a:	55                   	push   %ebp$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	89 e5                	mov    %esp,%ebp$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	57                   	push   %edi$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	56                   	push   %esi$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	53                   	push   %ebx$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	78 0f                	js     f0104068 <draw_square+0x1e>$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	e9 84 00 00 00       	jmp    f01040ec <draw_square+0xa2>$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	c7 44 24 0c 40 7f 10 	movl   $0xf0107f40,0xc(%esp)$/;"	l
f010406f	obj/kern/kernel.asm	/^f010406f:	f0 $/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	f0 $/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	00 $/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	c7 04 24 49 7f 10 f0 	movl   $0xf0107f49,(%esp)$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	e8 ce c0 ff ff       	call   f010015a <_panic>$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	89 c2                	mov    %eax,%edx$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	85 c0                	test   %eax,%eax$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	78 15                	js     f01040a7 <draw_square+0x5d>$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	85 f6                	test   %esi,%esi$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	78 11                	js     f01040a7 <draw_square+0x5d>$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	3d c7 00 00 00       	cmp    $0xc7,%eax$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	7f 0a                	jg     f01040a7 <draw_square+0x5d>$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	40                   	inc    %eax$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	81 7d d8 3f 01 00 00 	cmpl   $0x13f,-0x28(%ebp)$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	7e 24                	jle    f01040cb <draw_square+0x81>$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	c7 44 24 0c 70 68 10 	movl   $0xf0106870,0xc(%esp)$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	f0 $/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	f0 $/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	00 $/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	c7 04 24 32 68 10 f0 	movl   $0xf0106832,(%esp)$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	e8 8f c0 ff ff       	call   f010015a <_panic>$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	89 d3                	mov    %edx,%ebx$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	03 5d e4             	add    -0x1c(%ebp),%ebx$/;"	l
f01040d9	obj/kern/kernel.asm	/^f01040d9:	8a 55 10             	mov    0x10(%ebp),%dl$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	88 14 3b             	mov    %dl,(%ebx,%edi,1)$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	41                   	inc    %ecx$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	3b 4d 14             	cmp    0x14(%ebp),%ecx$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	75 a4                	jne    f010408c <draw_square+0x42>$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	46                   	inc    %esi$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	74 16                	je     f010410a <draw_square+0xc0>$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	8d 96 60 be 1e f0    	lea    -0xfe141a0(%esi),%edx$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	eb d9                	jmp    f01040e3 <draw_square+0x99>$/;"	l
f010410a	obj/kern/kernel.asm	/^f010410a:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	5b                   	pop    %ebx$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	5e                   	pop    %esi$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	5f                   	pop    %edi$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	5d                   	pop    %ebp$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	c3                   	ret    $/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114 <protag_infrontof_box>:$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	55                   	push   %ebp$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	89 e5                	mov    %esp,%ebp$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	03 05 78 b8 1f f0    	add    0xf01fb878,%eax$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	39 05 60 b8 1f f0    	cmp    %eax,0xf01fb860$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	75 10                	jne    f0104135 <protag_infrontof_box+0x21>$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	89 d1                	mov    %edx,%ecx$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	03 0d 7c b8 1f f0    	add    0xf01fb87c,%ecx$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	39 0d 64 b8 1f f0    	cmp    %ecx,0xf01fb864$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	74 37                	je     f010416c <protag_infrontof_box+0x58>$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	3b 05 68 b8 1f f0    	cmp    0xf01fb868,%eax$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	75 10                	jne    f010414d <protag_infrontof_box+0x39>$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	89 d1                	mov    %edx,%ecx$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	03 0d 7c b8 1f f0    	add    0xf01fb87c,%ecx$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	39 0d 6c b8 1f f0    	cmp    %ecx,0xf01fb86c$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	74 26                	je     f0104173 <protag_infrontof_box+0x5f>$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	3b 05 70 b8 1f f0    	cmp    0xf01fb870,%eax$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	75 25                	jne    f010417a <protag_infrontof_box+0x66>$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	03 15 7c b8 1f f0    	add    0xf01fb87c,%edx$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	39 15 74 b8 1f f0    	cmp    %edx,0xf01fb874$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	0f 94 c0             	sete   %al$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	eb 13                	jmp    f010417f <protag_infrontof_box+0x6b>$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	eb 0c                	jmp    f010417f <protag_infrontof_box+0x6b>$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	eb 05                	jmp    f010417f <protag_infrontof_box+0x6b>$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	5d                   	pop    %ebp$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	c3                   	ret    $/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181 <protag_move>:$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	55                   	push   %ebp$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	89 e5                	mov    %esp,%ebp$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	57                   	push   %edi$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	56                   	push   %esi$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	53                   	push   %ebx$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	89 c3                	mov    %eax,%ebx$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	89 d6                	mov    %edx,%esi$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	89 d0                	mov    %edx,%eax$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	03 05 7c b8 1f f0    	add    0xf01fb87c,%eax$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	8d 14 c0             	lea    (%eax,%eax,8),%edx$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	89 d8                	mov    %ebx,%eax$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	03 05 78 b8 1f f0    	add    0xf01fb878,%eax$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	01 d0                	add    %edx,%eax$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	83 3c 85 a0 7f 10 f0 	cmpl   $0x1,-0xfef8060(,%eax,4)$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	01 $/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	75 11                	jne    f01041be <protag_move+0x3d>$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	c7 04 24 56 7f 10 f0 	movl   $0xf0107f56,(%esp)$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	e8 39 f5 ff ff       	call   f01036f2 <cprintf>$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	e9 1b 01 00 00       	jmp    f01042d9 <protag_move+0x158>$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	89 f2                	mov    %esi,%edx$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	89 d8                	mov    %ebx,%eax$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	e8 4d ff ff ff       	call   f0104114 <protag_infrontof_box>$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	85 c0                	test   %eax,%eax$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	0f 84 eb 00 00 00    	je     f01042ba <protag_move+0x139>$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	8b 14 cd 64 b8 1f f0 	mov    -0xfe0479c(,%ecx,8),%edx$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	01 f2                	add    %esi,%edx$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	89 da                	mov    %ebx,%edx$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	03 14 cd 60 b8 1f f0 	add    -0xfe047a0(,%ecx,8),%edx$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	8d 3c ff             	lea    (%edi,%edi,8),%edi$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	01 d7                	add    %edx,%edi$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	83 3c bd a0 7f 10 f0 	cmpl   $0x1,-0xfef8060(,%edi,4)$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	01 $/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	75 11                	jne    f010420d <protag_move+0x8c>$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	c7 04 24 60 7f 10 f0 	movl   $0xf0107f60,(%esp)$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	e8 ea f4 ff ff       	call   f01036f2 <cprintf>$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	e9 cc 00 00 00       	jmp    f01042d9 <protag_move+0x158>$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	85 c9                	test   %ecx,%ecx$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	74 3c                	je     f010424d <protag_move+0xcc>$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	3b 15 68 b8 1f f0    	cmp    0xf01fb868,%edx$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	75 0b                	jne    f0104224 <protag_move+0xa3>$/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	3b 3d 6c b8 1f f0    	cmp    0xf01fb86c,%edi$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	74 13                	je     f0104237 <protag_move+0xb6>$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	3b 15 70 b8 1f f0    	cmp    0xf01fb870,%edx$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	75 1c                	jne    f0104248 <protag_move+0xc7>$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	3b 3d 74 b8 1f f0    	cmp    0xf01fb874,%edi$/;"	l
f0104235	obj/kern/kernel.asm	/^f0104235:	75 11                	jne    f0104248 <protag_move+0xc7>$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	c7 04 24 6a 7f 10 f0 	movl   $0xf0107f6a,(%esp)$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	e8 af f4 ff ff       	call   f01036f2 <cprintf>$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	e9 91 00 00 00       	jmp    f01042d9 <protag_move+0x158>$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	74 39                	je     f0104286 <protag_move+0x105>$/;"	l
f010424d	obj/kern/kernel.asm	/^f010424d:	3b 15 60 b8 1f f0    	cmp    0xf01fb860,%edx$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	75 0b                	jne    f0104260 <protag_move+0xdf>$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	3b 3d 64 b8 1f f0    	cmp    0xf01fb864,%edi$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	74 13                	je     f0104273 <protag_move+0xf2>$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	3b 15 70 b8 1f f0    	cmp    0xf01fb870,%edx$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	75 19                	jne    f0104281 <protag_move+0x100>$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	3b 3d 74 b8 1f f0    	cmp    0xf01fb874,%edi$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	75 0e                	jne    f0104281 <protag_move+0x100>$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	c7 04 24 74 7f 10 f0 	movl   $0xf0107f74,(%esp)$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	e8 73 f4 ff ff       	call   f01036f2 <cprintf>$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	eb 58                	jmp    f01042d9 <protag_move+0x158>$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	74 42                	je     f01042c8 <protag_move+0x147>$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	3b 15 60 b8 1f f0    	cmp    0xf01fb860,%edx$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	75 0b                	jne    f0104299 <protag_move+0x118>$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	3b 0d 64 b8 1f f0    	cmp    0xf01fb864,%ecx$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	74 13                	je     f01042ac <protag_move+0x12b>$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	3b 15 68 b8 1f f0    	cmp    0xf01fb868,%edx$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	75 27                	jne    f01042c8 <protag_move+0x147>$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	3b 3d 6c b8 1f f0    	cmp    0xf01fb86c,%edi$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	75 1c                	jne    f01042c8 <protag_move+0x147>$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	c7 04 24 7e 7f 10 f0 	movl   $0xf0107f7e,(%esp)$/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	e8 3a f4 ff ff       	call   f01036f2 <cprintf>$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	eb 1f                	jmp    f01042d9 <protag_move+0x158>$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	01 1d 78 b8 1f f0    	add    %ebx,0xf01fb878$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	01 35 7c b8 1f f0    	add    %esi,0xf01fb87c$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	eb 11                	jmp    f01042d9 <protag_move+0x158>$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	48                   	dec    %eax$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	01 1c c5 60 b8 1f f0 	add    %ebx,-0xfe047a0(,%eax,8)$/;"	l
f01042d0	obj/kern/kernel.asm	/^f01042d0:	01 34 c5 64 b8 1f f0 	add    %esi,-0xfe0479c(,%eax,8)$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	eb e1                	jmp    f01042ba <protag_move+0x139>$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	5b                   	pop    %ebx$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	5e                   	pop    %esi$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	5f                   	pop    %edi$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	5d                   	pop    %ebp$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	c3                   	ret    $/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1 <game_loop>:$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	55                   	push   %ebp$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	c7 05 78 b8 1f f0 03 	movl   $0x3,0xf01fb878$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	00 00 00 $/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	c7 05 7c b8 1f f0 01 	movl   $0x1,0xf01fb87c$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	00 00 00 $/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	c7 05 60 b8 1f f0 03 	movl   $0x3,0xf01fb860$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	00 00 00 $/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	c7 05 64 b8 1f f0 02 	movl   $0x2,0xf01fb864$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	00 00 00 $/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	c7 05 68 b8 1f f0 02 	movl   $0x2,0xf01fb868$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	00 00 00 $/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	c7 05 6c b8 1f f0 02 	movl   $0x2,0xf01fb86c$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	00 00 00 $/;"	l
f0104323	obj/kern/kernel.asm	/^f0104323:	c7 05 70 b8 1f f0 02 	movl   $0x2,0xf01fb870$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	00 00 00 $/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	c7 05 74 b8 1f f0 03 	movl   $0x3,0xf01fb874$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	00 00 00 $/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	e8 c0 00 00 00       	call   f01043fc <game_display>$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	e8 3d c3 ff ff       	call   f010067e <getchar>$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	75 11                	jne    f0104357 <game_loop+0x76>$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	e8 2c fe ff ff       	call   f0104181 <protag_move>$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	eb 43                	jmp    f010439a <game_loop+0xb9>$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	75 0e                	jne    f010436a <game_loop+0x89>$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	b0 00                	mov    $0x0,%al$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	e8 19 fe ff ff       	call   f0104181 <protag_move>$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	eb 30                	jmp    f010439a <game_loop+0xb9>$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	75 0e                	jne    f010437d <game_loop+0x9c>$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	b0 01                	mov    $0x1,%al$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	e8 06 fe ff ff       	call   f0104181 <protag_move>$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	eb 1d                	jmp    f010439a <game_loop+0xb9>$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	75 0e                	jne    f0104390 <game_loop+0xaf>$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	b0 00                	mov    $0x0,%al$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	e8 f3 fd ff ff       	call   f0104181 <protag_move>$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	eb 0a                	jmp    f010439a <game_loop+0xb9>$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	83 f8 72             	cmp    $0x72,%eax$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	75 a7                	jne    f010433c <game_loop+0x5b>$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	e9 4d ff ff ff       	jmp    f01042e7 <game_loop+0x6>$/;"	l
f010439a	obj/kern/kernel.asm	/^f010439a:	e8 5d 00 00 00       	call   f01043fc <game_display>$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	a1 64 b8 1f f0       	mov    0xf01fb864,%eax$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	03 05 60 b8 1f f0    	add    0xf01fb860,%eax$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	83 3c 85 a0 7f 10 f0 	cmpl   $0x2,-0xfef8060(,%eax,4)$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	02 $/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	75 85                	jne    f010433c <game_loop+0x5b>$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	a1 6c b8 1f f0       	mov    0xf01fb86c,%eax$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	03 05 68 b8 1f f0    	add    0xf01fb868,%eax$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	83 3c 85 a0 7f 10 f0 	cmpl   $0x2,-0xfef8060(,%eax,4)$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	02 $/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd:	0f 85 69 ff ff ff    	jne    f010433c <game_loop+0x5b>$/;"	l
f01043d3	obj/kern/kernel.asm	/^f01043d3:	a1 74 b8 1f f0       	mov    0xf01fb874,%eax$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	03 05 70 b8 1f f0    	add    0xf01fb870,%eax$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	83 3c 85 a0 7f 10 f0 	cmpl   $0x2,-0xfef8060(,%eax,4)$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	02 $/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	0f 85 4d ff ff ff    	jne    f010433c <game_loop+0x5b>$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	e8 00 fa ff ff       	call   f0103df4 <draw_tux>$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	e9 43 ff ff ff       	jmp    f010433c <game_loop+0x5b>$/;"	l
f01043f9	obj/kern/kernel.asm	/^f01043f9:	00 00                	add    %al,(%eax)$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc <game_display>:$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	55                   	push   %ebp$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	57                   	push   %edi$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	56                   	push   %esi$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	53                   	push   %ebx$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	c7 04 24 e4 80 10 f0 	movl   $0xf01080e4,(%esp)$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	e8 e1 f2 ff ff       	call   f01036f2 <cprintf>$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	e9 ac 01 00 00       	jmp    f01045d0 <game_display+0x1d4>$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	8b 06                	mov    (%esi),%eax$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	85 c0                	test   %eax,%eax$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	75 21                	jne    f010444b <game_display+0x4f>$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	00 $/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	c7 44 24 08 09 00 00 	movl   $0x9,0x8(%esp)$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	00 $/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	e8 04 fc ff ff       	call   f010404a <draw_square>$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	e9 8d 00 00 00       	jmp    f01044d8 <game_display+0xdc>$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	75 1e                	jne    f010446e <game_display+0x72>$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	00 $/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	c7 44 24 08 14 00 00 	movl   $0x14,0x8(%esp)$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	00 $/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	e8 de fb ff ff       	call   f010404a <draw_square>$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	eb 6a                	jmp    f01044d8 <game_display+0xdc>$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	75 1e                	jne    f0104491 <game_display+0x95>$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	00 $/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	c7 44 24 08 06 00 00 	movl   $0x6,0x8(%esp)$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	00 $/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	e8 bb fb ff ff       	call   f010404a <draw_square>$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	eb 47                	jmp    f01044d8 <game_display+0xdc>$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	75 1e                	jne    f01044b4 <game_display+0xb8>$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	00 $/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	00 $/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	e8 98 fb ff ff       	call   f010404a <draw_square>$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	eb 24                	jmp    f01044d8 <game_display+0xdc>$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	c7 44 24 0c 2a 58 10 	movl   $0xf010582a,0xc(%esp)$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	f0 $/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	c7 44 24 08 f2 57 10 	movl   $0xf01057f2,0x8(%esp)$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	f0 $/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	00 $/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	c7 04 24 f5 80 10 f0 	movl   $0xf01080f5,(%esp)$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	e8 82 bc ff ff       	call   f010015a <_panic>$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	83 c6 04             	add    $0x4,%esi$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	83 c3 14             	add    $0x14,%ebx$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	81 fb b4 00 00 00    	cmp    $0xb4,%ebx$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	0f 85 3a ff ff ff    	jne    f0104424 <game_display+0x28>$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	ff 45 e4             	incl   -0x1c(%ebp)$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	83 45 e0 14          	addl   $0x14,-0x20(%ebp)$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	83 7d e4 09          	cmpl   $0x9,-0x1c(%ebp)$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	0f 85 d5 00 00 00    	jne    f01045d0 <game_display+0x1d4>$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	00 $/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	c7 44 24 08 0e 00 00 	movl   $0xe,0x8(%esp)$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	00 $/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	a1 7c b8 1f f0       	mov    0xf01fb87c,%eax$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104516	obj/kern/kernel.asm	/^f0104516:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	a1 78 b8 1f f0       	mov    0xf01fb878,%eax$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	e8 1d fb ff ff       	call   f010404a <draw_square>$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	00 $/;"	l
f0104535	obj/kern/kernel.asm	/^f0104535:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	00 $/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	a1 64 b8 1f f0       	mov    0xf01fb864,%eax$/;"	l
f0104542	obj/kern/kernel.asm	/^f0104542:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	a1 60 b8 1f f0       	mov    0xf01fb860,%eax$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	e8 eb fa ff ff       	call   f010404a <draw_square>$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	00 $/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	00 $/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	a1 6c b8 1f f0       	mov    0xf01fb86c,%eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	a1 68 b8 1f f0       	mov    0xf01fb868,%eax$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	e8 b9 fa ff ff       	call   f010404a <draw_square>$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	00 $/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	00 $/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	a1 74 b8 1f f0       	mov    0xf01fb874,%eax$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045b0	obj/kern/kernel.asm	/^f01045b0:	a1 70 b8 1f f0       	mov    0xf01fb870,%eax$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01045b8	obj/kern/kernel.asm	/^f01045b8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	e8 87 fa ff ff       	call   f010404a <draw_square>$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	e8 54 fa ff ff       	call   f010401c <display_buffer>$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	5b                   	pop    %ebx$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	5e                   	pop    %esi$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	5f                   	pop    %edi$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	5d                   	pop    %ebp$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	c3                   	ret    $/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	8d 04 d2             	lea    (%edx,%edx,8),%eax$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	8d 34 85 20 81 10 f0 	lea    -0xfef7ee0(,%eax,4),%esi$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	e9 3a fe ff ff       	jmp    f0104424 <game_display+0x28>$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec <printnum>:$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	55                   	push   %ebp$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	57                   	push   %edi$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	56                   	push   %esi$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	53                   	push   %ebx$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	89 d7                	mov    %edx,%edi$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	85 c0                	test   %eax,%eax$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	75 08                	jne    f0104618 <printnum+0x2c>$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	77 57                	ja     f010466f <printnum+0x83>$/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	4b                   	dec    %ebx$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	00 $/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	e8 3e 09 00 00       	call   f0104f88 <__udivdi3>$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	89 fa                	mov    %edi,%edx$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	e8 89 ff ff ff       	call   f01045ec <printnum>$/;"	l
f0104663	obj/kern/kernel.asm	/^f0104663:	eb 0f                	jmp    f0104674 <printnum+0x88>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	4b                   	dec    %ebx$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	85 db                	test   %ebx,%ebx$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	7f f1                	jg     f0104665 <printnum+0x79>$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	00 $/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	e8 0b 0a 00 00       	call   f01050a8 <__umoddi3>$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	0f be 80 64 82 10 f0 	movsbl -0xfef7d9c(%eax),%eax$/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	5b                   	pop    %ebx$/;"	l
f01046b2	obj/kern/kernel.asm	/^f01046b2:	5e                   	pop    %esi$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	5f                   	pop    %edi$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	5d                   	pop    %ebp$/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	c3                   	ret    $/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6 <getuint>:$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	55                   	push   %ebp$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	7e 0e                	jle    f01046cc <getuint+0x16>$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	8b 10                	mov    (%eax),%edx$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	89 08                	mov    %ecx,(%eax)$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	8b 02                	mov    (%edx),%eax$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	eb 22                	jmp    f01046ee <getuint+0x38>$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	85 d2                	test   %edx,%edx$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	74 10                	je     f01046e0 <getuint+0x2a>$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	8b 10                	mov    (%eax),%edx$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	89 08                	mov    %ecx,(%eax)$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	8b 02                	mov    (%edx),%eax$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	eb 0e                	jmp    f01046ee <getuint+0x38>$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	8b 10                	mov    (%eax),%edx$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	89 08                	mov    %ecx,(%eax)$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	8b 02                	mov    (%edx),%eax$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	5d                   	pop    %ebp$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	c3                   	ret    $/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0 <sprintputch>:$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	55                   	push   %ebp$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	ff 40 08             	incl   0x8(%eax)$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	8b 10                	mov    (%eax),%edx$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	73 08                	jae    f0104708 <sprintputch+0x18>$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	88 0a                	mov    %cl,(%edx)$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	42                   	inc    %edx$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	89 10                	mov    %edx,(%eax)$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	5d                   	pop    %ebp$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	c3                   	ret    $/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a <printfmt>:$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	55                   	push   %ebp$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	89 e5                	mov    %esp,%ebp$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	e8 02 00 00 00       	call   f0104732 <vprintfmt>$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	c9                   	leave  $/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	c3                   	ret    $/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732 <vprintfmt>:$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	55                   	push   %ebp$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	89 e5                	mov    %esp,%ebp$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	57                   	push   %edi$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	56                   	push   %esi$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	53                   	push   %ebx$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	eb 12                	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	85 c0                	test   %eax,%eax$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	0f 84 8b 03 00 00    	je     f0104ad6 <vprintfmt+0x3a4>$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104755	obj/kern/kernel.asm	/^f0104755:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	46                   	inc    %esi$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	75 e5                	jne    f0104743 <vprintfmt+0x11>$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	eb 26                	jmp    f01047a2 <vprintfmt+0x70>$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	eb 1d                	jmp    f01047a2 <vprintfmt+0x70>$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	eb 14                	jmp    f01047a2 <vprintfmt+0x70>$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	eb 08                	jmp    f01047a2 <vprintfmt+0x70>$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	8d 56 01             	lea    0x1(%esi),%edx$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	8a 16                	mov    (%esi),%dl$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	83 ea 23             	sub    $0x23,%edx$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	0f 87 01 03 00 00    	ja     f0104aba <vprintfmt+0x388>$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	ff 24 95 00 83 10 f0 	jmp    *-0xfef7d00(,%edx,4)$/;"	l
f01047c3	obj/kern/kernel.asm	/^f01047c3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	0f be 06             	movsbl (%esi),%eax$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	77 2a                	ja     f0104807 <vprintfmt+0xd5>$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	46                   	inc    %esi$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	eb eb                	jmp    f01047cb <vprintfmt+0x99>$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	8b 38                	mov    (%eax),%edi$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	eb 17                	jmp    f0104807 <vprintfmt+0xd5>$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	78 98                	js     f010478e <vprintfmt+0x5c>$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	eb a7                	jmp    f01047a2 <vprintfmt+0x70>$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	eb 9b                	jmp    f01047a2 <vprintfmt+0x70>$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	79 95                	jns    f01047a2 <vprintfmt+0x70>$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	eb 8b                	jmp    f010479a <vprintfmt+0x68>$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	41                   	inc    %ecx$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	eb 8d                	jmp    f01047a2 <vprintfmt+0x70>$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	8b 00                	mov    (%eax),%eax$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	e9 23 ff ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	8b 00                	mov    (%eax),%eax$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	85 c0                	test   %eax,%eax$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	79 02                	jns    f0104843 <vprintfmt+0x111>$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	f7 d8                	neg    %eax$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	89 c2                	mov    %eax,%edx$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	7f 0b                	jg     f0104855 <vprintfmt+0x123>$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	8b 04 85 60 84 10 f0 	mov    -0xfef7ba0(,%eax,4),%eax$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	85 c0                	test   %eax,%eax$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	75 23                	jne    f0104878 <vprintfmt+0x146>$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	c7 44 24 08 7c 82 10 	movl   $0xf010827c,0x8(%esp)$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	f0 $/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	e8 9a fe ff ff       	call   f010470a <printfmt>$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	e9 dd fe ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	c7 44 24 08 04 58 10 	movl   $0xf0105804,0x8(%esp)$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	f0 $/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	e8 77 fe ff ff       	call   f010470a <printfmt>$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	e9 ba fe ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f010489b	obj/kern/kernel.asm	/^f010489b:	89 f9                	mov    %edi,%ecx$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01048a9	obj/kern/kernel.asm	/^f01048a9:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	8b 30                	mov    (%eax),%esi$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	85 f6                	test   %esi,%esi$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	75 05                	jne    f01048b7 <vprintfmt+0x185>$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	be 75 82 10 f0       	mov    $0xf0108275,%esi$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	0f 8e 84 00 00 00    	jle    f0104945 <vprintfmt+0x213>$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	74 7e                	je     f0104945 <vprintfmt+0x213>$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	e8 73 03 00 00       	call   f0104c46 <strnlen>$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	29 c2                	sub    %eax,%edx$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	89 de                	mov    %ebx,%esi$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	89 d3                	mov    %edx,%ebx$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	89 c7                	mov    %eax,%edi$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	eb 0b                	jmp    f01048f8 <vprintfmt+0x1c6>$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	4b                   	dec    %ebx$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	85 db                	test   %ebx,%ebx$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	7f f1                	jg     f01048ed <vprintfmt+0x1bb>$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	89 f3                	mov    %esi,%ebx$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	85 c0                	test   %eax,%eax$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	79 05                	jns    f0104910 <vprintfmt+0x1de>$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	29 c2                	sub    %eax,%edx$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	eb 2b                	jmp    f0104945 <vprintfmt+0x213>$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	74 18                	je     f0104938 <vprintfmt+0x206>$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	76 10                	jbe    f0104938 <vprintfmt+0x206>$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	eb 0a                	jmp    f0104942 <vprintfmt+0x210>$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	46                   	inc    %esi$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	85 c0                	test   %eax,%eax$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	74 21                	je     f010496e <vprintfmt+0x23c>$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	85 ff                	test   %edi,%edi$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	78 c9                	js     f010491a <vprintfmt+0x1e8>$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	4f                   	dec    %edi$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	79 c6                	jns    f010491a <vprintfmt+0x1e8>$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	89 de                	mov    %ebx,%esi$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	eb 18                	jmp    f0104976 <vprintfmt+0x244>$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	ff d7                	call   *%edi$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	4b                   	dec    %ebx$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	eb 08                	jmp    f0104976 <vprintfmt+0x244>$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	89 de                	mov    %ebx,%esi$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	85 db                	test   %ebx,%ebx$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	7f e4                	jg     f010495e <vprintfmt+0x22c>$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	89 f3                	mov    %esi,%ebx$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104982	obj/kern/kernel.asm	/^f0104982:	e9 ce fd ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010498a	obj/kern/kernel.asm	/^f010498a:	7e 10                	jle    f010499c <vprintfmt+0x26a>$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	8b 30                	mov    (%eax),%esi$/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	eb 26                	jmp    f01049c2 <vprintfmt+0x290>$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	85 c9                	test   %ecx,%ecx$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	74 12                	je     f01049b2 <vprintfmt+0x280>$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	8b 30                	mov    (%eax),%esi$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	89 f7                	mov    %esi,%edi$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	eb 10                	jmp    f01049c2 <vprintfmt+0x290>$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	8b 30                	mov    (%eax),%esi$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	89 f7                	mov    %esi,%edi$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	85 ff                	test   %edi,%edi$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	78 0a                	js     f01049d0 <vprintfmt+0x29e>$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	e9 ac 00 00 00       	jmp    f0104a7c <vprintfmt+0x34a>$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	f7 de                	neg    %esi$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	83 d7 00             	adc    $0x0,%edi$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	f7 df                	neg    %edi$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	e9 8d 00 00 00       	jmp    f0104a7c <vprintfmt+0x34a>$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	89 ca                	mov    %ecx,%edx$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	e8 bd fc ff ff       	call   f01046b6 <getuint>$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	89 c6                	mov    %eax,%esi$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	89 d7                	mov    %edx,%edi$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	eb 78                	jmp    f0104a7c <vprintfmt+0x34a>$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	e9 1f fd ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	8b 30                	mov    (%eax),%esi$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	eb 13                	jmp    f0104a7c <vprintfmt+0x34a>$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	89 ca                	mov    %ecx,%edx$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	e8 43 fc ff ff       	call   f01046b6 <getuint>$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	89 c6                	mov    %eax,%esi$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 d7                	mov    %edx,%edi$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	89 da                	mov    %ebx,%edx$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	e8 4c fb ff ff       	call   f01045ec <printnum>$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	e9 ad fc ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	e9 9b fc ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	eb 01                	jmp    f0104acb <vprintfmt+0x399>$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	4e                   	dec    %esi$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	75 f9                	jne    f0104aca <vprintfmt+0x398>$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	e9 7f fc ff ff       	jmp    f0104755 <vprintfmt+0x23>$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	5b                   	pop    %ebx$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	5e                   	pop    %esi$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	5f                   	pop    %edi$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	5d                   	pop    %ebp$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	c3                   	ret    $/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade <vsnprintf>:$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	55                   	push   %ebp$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	85 c0                	test   %eax,%eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	74 30                	je     f0104b2f <vsnprintf+0x51>$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	85 d2                	test   %edx,%edx$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	7e 33                	jle    f0104b36 <vsnprintf+0x58>$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	c7 04 24 f0 46 10 f0 	movl   $0xf01046f0,(%esp)$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	e8 0e fc ff ff       	call   f0104732 <vprintfmt>$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	eb 0c                	jmp    f0104b3b <vsnprintf+0x5d>$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	eb 05                	jmp    f0104b3b <vsnprintf+0x5d>$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	c9                   	leave  $/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	c3                   	ret    $/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d <snprintf>:$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	55                   	push   %ebp$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	e8 7b ff ff ff       	call   f0104ade <vsnprintf>$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	c9                   	leave  $/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	c3                   	ret    $/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	00 00                	add    %al,(%eax)$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68 <readline>:$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	55                   	push   %ebp$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	57                   	push   %edi$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	56                   	push   %esi$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	53                   	push   %ebx$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	85 c0                	test   %eax,%eax$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	74 10                	je     f0104b88 <readline+0x20>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	c7 04 24 04 58 10 f0 	movl   $0xf0105804,(%esp)$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	e8 6a eb ff ff       	call   f01036f2 <cprintf>$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	e8 fb ba ff ff       	call   f010068f <iscons>$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	89 c7                	mov    %eax,%edi$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	e8 de ba ff ff       	call   f010067e <getchar>$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	89 c3                	mov    %eax,%ebx$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	85 c0                	test   %eax,%eax$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	79 17                	jns    f0104bbd <readline+0x55>$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	c7 04 24 80 84 10 f0 	movl   $0xf0108480,(%esp)$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	e8 3c eb ff ff       	call   f01036f2 <cprintf>$/;"	l
f0104bb6	obj/kern/kernel.asm	/^f0104bb6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	eb 69                	jmp    f0104c26 <readline+0xbe>$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	74 05                	je     f0104bc7 <readline+0x5f>$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	75 17                	jne    f0104bde <readline+0x76>$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	85 f6                	test   %esi,%esi$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	7e 13                	jle    f0104bde <readline+0x76>$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	85 ff                	test   %edi,%edi$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	74 0c                	je     f0104bdb <readline+0x73>$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	e8 93 ba ff ff       	call   f010066e <cputchar>$/;"	l
f0104bdb	obj/kern/kernel.asm	/^f0104bdb:	4e                   	dec    %esi$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	eb bd                	jmp    f0104b9b <readline+0x33>$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	7e 1d                	jle    f0104c00 <readline+0x98>$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	7f 15                	jg     f0104c00 <readline+0x98>$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	85 ff                	test   %edi,%edi$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	74 08                	je     f0104bf7 <readline+0x8f>$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	e8 77 ba ff ff       	call   f010066e <cputchar>$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	88 9e 40 ba 1e f0    	mov    %bl,-0xfe145c0(%esi)$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	46                   	inc    %esi$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	eb 9b                	jmp    f0104b9b <readline+0x33>$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	74 05                	je     f0104c0a <readline+0xa2>$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	75 91                	jne    f0104b9b <readline+0x33>$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	85 ff                	test   %edi,%edi$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	74 0c                	je     f0104c1a <readline+0xb2>$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	e8 54 ba ff ff       	call   f010066e <cputchar>$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	c6 86 40 ba 1e f0 00 	movb   $0x0,-0xfe145c0(%esi)$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	b8 40 ba 1e f0       	mov    $0xf01eba40,%eax$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	5b                   	pop    %ebx$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	5e                   	pop    %esi$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	5f                   	pop    %edi$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	5d                   	pop    %ebp$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	c3                   	ret    $/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30 <strlen>:$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	55                   	push   %ebp$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	eb 01                	jmp    f0104c3e <strlen+0xe>$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	40                   	inc    %eax$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	75 f9                	jne    f0104c3d <strlen+0xd>$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	5d                   	pop    %ebp$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	c3                   	ret    $/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46 <strnlen>:$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	55                   	push   %ebp$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	eb 01                	jmp    f0104c57 <strnlen+0x11>$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	40                   	inc    %eax$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	39 d0                	cmp    %edx,%eax$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	74 06                	je     f0104c61 <strnlen+0x1b>$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	75 f5                	jne    f0104c56 <strnlen+0x10>$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	5d                   	pop    %ebp$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	c3                   	ret    $/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63 <strcpy>:$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	55                   	push   %ebp$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	53                   	push   %ebx$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	42                   	inc    %edx$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	84 c9                	test   %cl,%cl$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	75 f5                	jne    f0104c72 <strcpy+0xf>$/;"	l
f0104c7d	obj/kern/kernel.asm	/^f0104c7d:	5b                   	pop    %ebx$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	5d                   	pop    %ebp$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	c3                   	ret    $/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80 <strcat>:$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	55                   	push   %ebp$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	53                   	push   %ebx$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	e8 9e ff ff ff       	call   f0104c30 <strlen>$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	01 d8                	add    %ebx,%eax$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	e8 c0 ff ff ff       	call   f0104c63 <strcpy>$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	89 d8                	mov    %ebx,%eax$/;"	l
f0104ca5	obj/kern/kernel.asm	/^f0104ca5:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	5b                   	pop    %ebx$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	5d                   	pop    %ebp$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	c3                   	ret    $/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab <strncpy>:$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	55                   	push   %ebp$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	56                   	push   %esi$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	53                   	push   %ebx$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	eb 0c                	jmp    f0104ccc <strncpy+0x21>$/;"	l
f0104cc0	obj/kern/kernel.asm	/^f0104cc0:	8a 1a                	mov    (%edx),%bl$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	41                   	inc    %ecx$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	39 f1                	cmp    %esi,%ecx$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	75 f0                	jne    f0104cc0 <strncpy+0x15>$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	5b                   	pop    %ebx$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	5e                   	pop    %esi$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	5d                   	pop    %ebp$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	c3                   	ret    $/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4 <strlcpy>:$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	55                   	push   %ebp$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cd7	obj/kern/kernel.asm	/^f0104cd7:	56                   	push   %esi$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	53                   	push   %ebx$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	85 d2                	test   %edx,%edx$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	75 0a                	jne    f0104cf0 <strlcpy+0x1c>$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	89 f0                	mov    %esi,%eax$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	eb 1a                	jmp    f0104d04 <strlcpy+0x30>$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	88 18                	mov    %bl,(%eax)$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	40                   	inc    %eax$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	41                   	inc    %ecx$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	eb 02                	jmp    f0104cf2 <strlcpy+0x1e>$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	89 f0                	mov    %esi,%eax$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	4a                   	dec    %edx$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	74 0a                	je     f0104cff <strlcpy+0x2b>$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	8a 19                	mov    (%ecx),%bl$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	84 db                	test   %bl,%bl$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	75 ef                	jne    f0104cea <strlcpy+0x16>$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	89 c2                	mov    %eax,%edx$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	eb 02                	jmp    f0104d01 <strlcpy+0x2d>$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	89 c2                	mov    %eax,%edx$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	29 f0                	sub    %esi,%eax$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	5b                   	pop    %ebx$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	5e                   	pop    %esi$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	5d                   	pop    %ebp$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	c3                   	ret    $/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a <strcmp>:$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	55                   	push   %ebp$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104d13	obj/kern/kernel.asm	/^f0104d13:	eb 02                	jmp    f0104d17 <strcmp+0xd>$/;"	l
f0104d15	obj/kern/kernel.asm	/^f0104d15:	41                   	inc    %ecx$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	42                   	inc    %edx$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	8a 01                	mov    (%ecx),%al$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	84 c0                	test   %al,%al$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	74 04                	je     f0104d21 <strcmp+0x17>$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	3a 02                	cmp    (%edx),%al$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	74 f4                	je     f0104d15 <strcmp+0xb>$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	29 d0                	sub    %edx,%eax$/;"	l
f0104d29	obj/kern/kernel.asm	/^f0104d29:	5d                   	pop    %ebp$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	c3                   	ret    $/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b <strncmp>:$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	55                   	push   %ebp$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	53                   	push   %ebx$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	eb 03                	jmp    f0104d3d <strncmp+0x12>$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	4a                   	dec    %edx$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	40                   	inc    %eax$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	41                   	inc    %ecx$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	85 d2                	test   %edx,%edx$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	74 14                	je     f0104d55 <strncmp+0x2a>$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	8a 18                	mov    (%eax),%bl$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	84 db                	test   %bl,%bl$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	74 04                	je     f0104d4b <strncmp+0x20>$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0104d49	obj/kern/kernel.asm	/^f0104d49:	74 ef                	je     f0104d3a <strncmp+0xf>$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	29 d0                	sub    %edx,%eax$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	eb 05                	jmp    f0104d5a <strncmp+0x2f>$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	5b                   	pop    %ebx$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	5d                   	pop    %ebp$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	c3                   	ret    $/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d <strchr>:$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	55                   	push   %ebp$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	eb 05                	jmp    f0104d6d <strchr+0x10>$/;"	l
f0104d68	obj/kern/kernel.asm	/^f0104d68:	38 ca                	cmp    %cl,%dl$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	74 0c                	je     f0104d78 <strchr+0x1b>$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	40                   	inc    %eax$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	8a 10                	mov    (%eax),%dl$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	84 d2                	test   %dl,%dl$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	75 f5                	jne    f0104d68 <strchr+0xb>$/;"	l
f0104d73	obj/kern/kernel.asm	/^f0104d73:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	5d                   	pop    %ebp$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	c3                   	ret    $/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a <strfind>:$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	55                   	push   %ebp$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	eb 05                	jmp    f0104d8a <strfind+0x10>$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	38 ca                	cmp    %cl,%dl$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	74 07                	je     f0104d90 <strfind+0x16>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	40                   	inc    %eax$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	8a 10                	mov    (%eax),%dl$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	84 d2                	test   %dl,%dl$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	75 f5                	jne    f0104d85 <strfind+0xb>$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	5d                   	pop    %ebp$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	c3                   	ret    $/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92 <memset>:$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	55                   	push   %ebp$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	57                   	push   %edi$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	56                   	push   %esi$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	53                   	push   %ebx$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	85 c9                	test   %ecx,%ecx$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	74 30                	je     f0104dd5 <memset+0x43>$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	75 25                	jne    f0104dd2 <memset+0x40>$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	75 20                	jne    f0104dd2 <memset+0x40>$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	89 d3                	mov    %edx,%ebx$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	89 d6                	mov    %edx,%esi$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	89 d0                	mov    %edx,%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	09 f0                	or     %esi,%eax$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	09 d0                	or     %edx,%eax$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	09 d8                	or     %ebx,%eax$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	fc                   	cld    $/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	eb 03                	jmp    f0104dd5 <memset+0x43>$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	fc                   	cld    $/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	89 f8                	mov    %edi,%eax$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	5b                   	pop    %ebx$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	5e                   	pop    %esi$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	5f                   	pop    %edi$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	5d                   	pop    %ebp$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	c3                   	ret    $/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc <memmove>:$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	55                   	push   %ebp$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	57                   	push   %edi$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	56                   	push   %esi$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	39 c6                	cmp    %eax,%esi$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	73 34                	jae    f0104e22 <memmove+0x46>$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	39 d0                	cmp    %edx,%eax$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	73 2d                	jae    f0104e22 <memmove+0x46>$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	75 1b                	jne    f0104e18 <memmove+0x3c>$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	75 13                	jne    f0104e18 <memmove+0x3c>$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	75 0e                	jne    f0104e18 <memmove+0x3c>$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0104e0d	obj/kern/kernel.asm	/^f0104e0d:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104e13	obj/kern/kernel.asm	/^f0104e13:	fd                   	std    $/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	eb 07                	jmp    f0104e1f <memmove+0x43>$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	4f                   	dec    %edi$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	fd                   	std    $/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	fc                   	cld    $/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	eb 20                	jmp    f0104e42 <memmove+0x66>$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	75 13                	jne    f0104e3d <memmove+0x61>$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	a8 03                	test   $0x3,%al$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	75 0f                	jne    f0104e3d <memmove+0x61>$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	75 0a                	jne    f0104e3d <memmove+0x61>$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	89 c7                	mov    %eax,%edi$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	fc                   	cld    $/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	eb 05                	jmp    f0104e42 <memmove+0x66>$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	89 c7                	mov    %eax,%edi$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	fc                   	cld    $/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	5e                   	pop    %esi$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	5f                   	pop    %edi$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	5d                   	pop    %ebp$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	c3                   	ret    $/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46 <memcpy>:$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	55                   	push   %ebp$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	e8 77 ff ff ff       	call   f0104ddc <memmove>$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	c9                   	leave  $/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	c3                   	ret    $/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67 <memcmp>:$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	55                   	push   %ebp$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	57                   	push   %edi$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	56                   	push   %esi$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	53                   	push   %ebx$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	eb 16                	jmp    f0104e93 <memcmp+0x2c>$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	8a 04 17             	mov    (%edi,%edx,1),%al$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	42                   	inc    %edx$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	8a 4c 16 ff          	mov    -0x1(%esi,%edx,1),%cl$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	38 c8                	cmp    %cl,%al$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	74 0a                	je     f0104e93 <memcmp+0x2c>$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	29 c8                	sub    %ecx,%eax$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	eb 09                	jmp    f0104e9c <memcmp+0x35>$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	39 da                	cmp    %ebx,%edx$/;"	l
f0104e95	obj/kern/kernel.asm	/^f0104e95:	75 e6                	jne    f0104e7d <memcmp+0x16>$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	5b                   	pop    %ebx$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	5e                   	pop    %esi$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	5f                   	pop    %edi$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	5d                   	pop    %ebp$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	c3                   	ret    $/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1 <memfind>:$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	55                   	push   %ebp$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	89 c2                	mov    %eax,%edx$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	eb 05                	jmp    f0104eb6 <memfind+0x15>$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	38 08                	cmp    %cl,(%eax)$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	74 05                	je     f0104eba <memfind+0x19>$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	40                   	inc    %eax$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	39 d0                	cmp    %edx,%eax$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	72 f7                	jb     f0104eb1 <memfind+0x10>$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	5d                   	pop    %ebp$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	c3                   	ret    $/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc <strtol>:$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	55                   	push   %ebp$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	57                   	push   %edi$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	56                   	push   %esi$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	53                   	push   %ebx$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	eb 01                	jmp    f0104ecb <strtol+0xf>$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	42                   	inc    %edx$/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	8a 02                	mov    (%edx),%al$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	3c 20                	cmp    $0x20,%al$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	74 f9                	je     f0104eca <strtol+0xe>$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	3c 09                	cmp    $0x9,%al$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	74 f5                	je     f0104eca <strtol+0xe>$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	75 08                	jne    f0104ee1 <strtol+0x25>$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	42                   	inc    %edx$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	eb 13                	jmp    f0104ef4 <strtol+0x38>$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	75 0a                	jne    f0104eef <strtol+0x33>$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	eb 05                	jmp    f0104ef4 <strtol+0x38>$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	85 db                	test   %ebx,%ebx$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	74 05                	je     f0104efd <strtol+0x41>$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	75 28                	jne    f0104f25 <strtol+0x69>$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	8a 02                	mov    (%edx),%al$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	3c 30                	cmp    $0x30,%al$/;"	l
f0104f01	obj/kern/kernel.asm	/^f0104f01:	75 10                	jne    f0104f13 <strtol+0x57>$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	75 0a                	jne    f0104f13 <strtol+0x57>$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	83 c2 02             	add    $0x2,%edx$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	eb 12                	jmp    f0104f25 <strtol+0x69>$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	85 db                	test   %ebx,%ebx$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	75 0e                	jne    f0104f25 <strtol+0x69>$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	3c 30                	cmp    $0x30,%al$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	75 05                	jne    f0104f20 <strtol+0x64>$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	42                   	inc    %edx$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	b3 08                	mov    $0x8,%bl$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	eb 05                	jmp    f0104f25 <strtol+0x69>$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	89 de                	mov    %ebx,%esi$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	8a 0a                	mov    (%edx),%cl$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	77 08                	ja     f0104f3e <strtol+0x82>$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	eb 1e                	jmp    f0104f5c <strtol+0xa0>$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	77 08                	ja     f0104f4e <strtol+0x92>$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	eb 0e                	jmp    f0104f5c <strtol+0xa0>$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	77 12                	ja     f0104f68 <strtol+0xac>$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	39 f1                	cmp    %esi,%ecx$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	7d 0c                	jge    f0104f6c <strtol+0xb0>$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	42                   	inc    %edx$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	0f af c6             	imul   %esi,%eax$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	01 c8                	add    %ecx,%eax$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	eb c4                	jmp    f0104f2c <strtol+0x70>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	eb 02                	jmp    f0104f6e <strtol+0xb2>$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	74 05                	je     f0104f79 <strtol+0xbd>$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	89 13                	mov    %edx,(%ebx)$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	85 ff                	test   %edi,%edi$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	74 04                	je     f0104f81 <strtol+0xc5>$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	89 c8                	mov    %ecx,%eax$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	f7 d8                	neg    %eax$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	5b                   	pop    %ebx$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	5e                   	pop    %esi$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	5f                   	pop    %edi$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	5d                   	pop    %ebp$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	c3                   	ret    $/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88 <__udivdi3>:$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	55                   	push   %ebp$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	57                   	push   %edi$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	56                   	push   %esi$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	89 cd                	mov    %ecx,%ebp$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	85 c0                	test   %eax,%eax$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	75 2c                	jne    f0104fd4 <__udivdi3+0x4c>$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	39 f9                	cmp    %edi,%ecx$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	77 68                	ja     f0105014 <__udivdi3+0x8c>$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	85 c9                	test   %ecx,%ecx$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	75 0b                	jne    f0104fbb <__udivdi3+0x33>$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	31 d2                	xor    %edx,%edx$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	f7 f1                	div    %ecx$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	89 c1                	mov    %eax,%ecx$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	31 d2                	xor    %edx,%edx$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	89 f8                	mov    %edi,%eax$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	f7 f1                	div    %ecx$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	89 c7                	mov    %eax,%edi$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	89 f0                	mov    %esi,%eax$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	f7 f1                	div    %ecx$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	89 c6                	mov    %eax,%esi$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	89 f0                	mov    %esi,%eax$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	89 fa                	mov    %edi,%edx$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	5e                   	pop    %esi$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	5f                   	pop    %edi$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	5d                   	pop    %ebp$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	c3                   	ret    $/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	39 f8                	cmp    %edi,%eax$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	77 2c                	ja     f0105004 <__udivdi3+0x7c>$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	0f bd f0             	bsr    %eax,%esi$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	75 4c                	jne    f010502c <__udivdi3+0xa4>$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	39 f8                	cmp    %edi,%eax$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	72 0a                	jb     f0104ff3 <__udivdi3+0x6b>$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	0f 87 ad 00 00 00    	ja     f01050a0 <__udivdi3+0x118>$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	89 f0                	mov    %esi,%eax$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	89 fa                	mov    %edi,%edx$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	5e                   	pop    %esi$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	5f                   	pop    %edi$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	5d                   	pop    %ebp$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	c3                   	ret    $/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	90                   	nop$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	31 ff                	xor    %edi,%edi$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	31 f6                	xor    %esi,%esi$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	89 f0                	mov    %esi,%eax$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	89 fa                	mov    %edi,%edx$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	5e                   	pop    %esi$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	5f                   	pop    %edi$/;"	l
f0105011	obj/kern/kernel.asm	/^f0105011:	5d                   	pop    %ebp$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	c3                   	ret    $/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	90                   	nop$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	89 fa                	mov    %edi,%edx$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	89 f0                	mov    %esi,%eax$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	f7 f1                	div    %ecx$/;"	l
f010501a	obj/kern/kernel.asm	/^f010501a:	89 c6                	mov    %eax,%esi$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	31 ff                	xor    %edi,%edi$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	89 f0                	mov    %esi,%eax$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	89 fa                	mov    %edi,%edx$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105025	obj/kern/kernel.asm	/^f0105025:	5e                   	pop    %esi$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	5f                   	pop    %edi$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	5d                   	pop    %ebp$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	c3                   	ret    $/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	89 f1                	mov    %esi,%ecx$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	d3 e0                	shl    %cl,%eax$/;"	d
f0105030	obj/kern/kernel.asm	/^f0105030:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	29 f0                	sub    %esi,%eax$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	89 ea                	mov    %ebp,%edx$/;"	l
f010503d	obj/kern/kernel.asm	/^f010503d:	88 c1                	mov    %al,%cl$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	d3 ea                	shr    %cl,%edx$/;"	d
f0105041	obj/kern/kernel.asm	/^f0105041:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	09 ca                	or     %ecx,%edx$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	89 f1                	mov    %esi,%ecx$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	d3 e5                	shl    %cl,%ebp$/;"	d
f010504f	obj/kern/kernel.asm	/^f010504f:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	89 fd                	mov    %edi,%ebp$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	88 c1                	mov    %al,%cl$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105059	obj/kern/kernel.asm	/^f0105059:	89 fa                	mov    %edi,%edx$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	89 f1                	mov    %esi,%ecx$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	d3 e2                	shl    %cl,%edx$/;"	d
f010505f	obj/kern/kernel.asm	/^f010505f:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	88 c1                	mov    %al,%cl$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	d3 ef                	shr    %cl,%edi$/;"	d
f0105067	obj/kern/kernel.asm	/^f0105067:	09 d7                	or     %edx,%edi$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	89 f8                	mov    %edi,%eax$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	89 ea                	mov    %ebp,%edx$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	89 d1                	mov    %edx,%ecx$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	89 c7                	mov    %eax,%edi$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	39 d1                	cmp    %edx,%ecx$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	72 17                	jb     f0105094 <__udivdi3+0x10c>$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	74 09                	je     f0105088 <__udivdi3+0x100>$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	89 fe                	mov    %edi,%esi$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	31 ff                	xor    %edi,%edi$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	e9 41 ff ff ff       	jmp    f0104fc9 <__udivdi3+0x41>$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	89 f1                	mov    %esi,%ecx$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	d3 e2                	shl    %cl,%edx$/;"	d
f0105090	obj/kern/kernel.asm	/^f0105090:	39 c2                	cmp    %eax,%edx$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	73 eb                	jae    f010507f <__udivdi3+0xf7>$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	31 ff                	xor    %edi,%edi$/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	e9 2b ff ff ff       	jmp    f0104fc9 <__udivdi3+0x41>$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	66 90                	xchg   %ax,%ax$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	31 f6                	xor    %esi,%esi$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	e9 22 ff ff ff       	jmp    f0104fc9 <__udivdi3+0x41>$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8 <__umoddi3>:$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	55                   	push   %ebp$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	57                   	push   %edi$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	56                   	push   %esi$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	89 c7                	mov    %eax,%edi$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	89 f2                	mov    %esi,%edx$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	85 ed                	test   %ebp,%ebp$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	75 16                	jne    f01050e4 <__umoddi3+0x3c>$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	39 f1                	cmp    %esi,%ecx$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	0f 86 a6 00 00 00    	jbe    f010517c <__umoddi3+0xd4>$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	f7 f1                	div    %ecx$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	89 d0                	mov    %edx,%eax$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	31 d2                	xor    %edx,%edx$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	83 c4 20             	add    $0x20,%esp$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	5e                   	pop    %esi$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	5f                   	pop    %edi$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	5d                   	pop    %ebp$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	c3                   	ret    $/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	90                   	nop$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	39 f5                	cmp    %esi,%ebp$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	0f 87 ac 00 00 00    	ja     f0105198 <__umoddi3+0xf0>$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	0f 84 a8 00 00 00    	je     f01051a4 <__umoddi3+0xfc>$/;"	l
f01050fc	obj/kern/kernel.asm	/^f01050fc:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	d3 e5                	shl    %cl,%ebp$/;"	d
f0105102	obj/kern/kernel.asm	/^f0105102:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	89 f9                	mov    %edi,%ecx$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	d3 e8                	shr    %cl,%eax$/;"	d
f0105113	obj/kern/kernel.asm	/^f0105113:	09 e8                	or     %ebp,%eax$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	d3 e0                	shl    %cl,%eax$/;"	d
f0105123	obj/kern/kernel.asm	/^f0105123:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105127	obj/kern/kernel.asm	/^f0105127:	89 f2                	mov    %esi,%edx$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	d3 e2                	shl    %cl,%edx$/;"	d
f010512b	obj/kern/kernel.asm	/^f010512b:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	d3 e0                	shl    %cl,%eax$/;"	d
f0105131	obj/kern/kernel.asm	/^f0105131:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	89 f9                	mov    %edi,%ecx$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	d3 e8                	shr    %cl,%eax$/;"	d
f010513d	obj/kern/kernel.asm	/^f010513d:	09 d0                	or     %edx,%eax$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	d3 ee                	shr    %cl,%esi$/;"	d
f0105141	obj/kern/kernel.asm	/^f0105141:	89 f2                	mov    %esi,%edx$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	89 d6                	mov    %edx,%esi$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	89 c5                	mov    %eax,%ebp$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	89 d1                	mov    %edx,%ecx$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	39 d6                	cmp    %edx,%esi$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	72 67                	jb     f01051bc <__umoddi3+0x114>$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	74 75                	je     f01051cc <__umoddi3+0x124>$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	29 e8                	sub    %ebp,%eax$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	19 ce                	sbb    %ecx,%esi$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	d3 e8                	shr    %cl,%eax$/;"	d
f0105165	obj/kern/kernel.asm	/^f0105165:	89 f2                	mov    %esi,%edx$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	89 f9                	mov    %edi,%ecx$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	d3 e2                	shl    %cl,%edx$/;"	d
f010516b	obj/kern/kernel.asm	/^f010516b:	09 d0                	or     %edx,%eax$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	89 f2                	mov    %esi,%edx$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	d3 ea                	shr    %cl,%edx$/;"	d
f0105175	obj/kern/kernel.asm	/^f0105175:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	5e                   	pop    %esi$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	5f                   	pop    %edi$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	5d                   	pop    %ebp$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	c3                   	ret    $/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	85 c9                	test   %ecx,%ecx$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	75 0b                	jne    f010518b <__umoddi3+0xe3>$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	31 d2                	xor    %edx,%edx$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	f7 f1                	div    %ecx$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	89 c1                	mov    %eax,%ecx$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	89 f0                	mov    %esi,%eax$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	31 d2                	xor    %edx,%edx$/;"	l
f010518f	obj/kern/kernel.asm	/^f010518f:	f7 f1                	div    %ecx$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	89 f8                	mov    %edi,%eax$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	e9 3e ff ff ff       	jmp    f01050d6 <__umoddi3+0x2e>$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	89 f2                	mov    %esi,%edx$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	5e                   	pop    %esi$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	5f                   	pop    %edi$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	5d                   	pop    %ebp$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	c3                   	ret    $/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	39 f5                	cmp    %esi,%ebp$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	72 04                	jb     f01051ac <__umoddi3+0x104>$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	39 f9                	cmp    %edi,%ecx$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	77 06                	ja     f01051b2 <__umoddi3+0x10a>$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	89 f2                	mov    %esi,%edx$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	29 cf                	sub    %ecx,%edi$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	19 ea                	sbb    %ebp,%edx$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	89 f8                	mov    %edi,%eax$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	5e                   	pop    %esi$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	5f                   	pop    %edi$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	5d                   	pop    %ebp$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	c3                   	ret    $/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	90                   	nop$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	89 d1                	mov    %edx,%ecx$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	89 c5                	mov    %eax,%ebp$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	eb 8d                	jmp    f0105157 <__umoddi3+0xaf>$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	66 90                	xchg   %ax,%ax$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	72 ea                	jb     f01051bc <__umoddi3+0x114>$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	89 f1                	mov    %esi,%ecx$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	eb 81                	jmp    f0105157 <__umoddi3+0xaf>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
game_dest	kern/game.h	/^	game_dest,$/;"	e	enum:__anon7
game_display	kern/game_draw.c	/^game_display(){$/;"	f
game_display	kern/game_draw.h	/^void game_display();$/;"	p	signature:()
game_loop	kern/game.c	/^game_loop(void) { \/* driven by keyboard interuption *\/$/;"	f	signature:(void)
game_loop	kern/game.h	/^void game_loop();$/;"	p	signature:()
game_out	kern/game.h	/^	game_out$/;"	e	enum:__anon7
game_space	kern/game.h	/^	game_space = 0,$/;"	e	enum:__anon7
game_wall	kern/game.h	/^	game_wall,$/;"	e	enum:__anon7
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getch	obj/kern/kernel.asm	/^		getch = getchar();$/;"	d
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
grey	kern/game_draw.h	5;"	d
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
height	kern/draw.c	40;"	d	file:
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary)
log2	inc/stdio.h	34;"	d
log3	inc/stdio.h	40;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
map	kern/game_layout.h	/^static int map[9][9] = {$/;"	v
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
move_area_height	kern/draw.c	43;"	d	file:
move_area_width	kern/draw.c	44;"	d	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
next_box_x	kern/game.c	13;"	d	file:
next_box_x	obj/kern/kernel.asm	/^#define next_box_x(index) (box[index].x+right)$/;"	d
next_box_y	kern/game.c	14;"	d	file:
next_box_y	obj/kern/kernel.asm	/^#define next_box_y(index) (box[index].y+down)$/;"	d
next_x	kern/game.c	11;"	d	file:
next_y	kern/game.c	12;"	d	file:
nextfree	kern/pmap.c	/^static char *nextfree;	\/\/ virtual address of next byte of free memory$/;"	v	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) (n+nextfree), PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	  npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^	  npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	75;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link ;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*)boot_alloc(sizeof(struct PageInfo)*npages);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pgamt	obj/kern/kernel.asm	/^		pgamt = size;$/;"	d
pgamt	obj/kern/kernel.asm	/^		pgamt = size\/PGSIZE;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *)elfhdr + elfhdr->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pink	kern/game_draw.h	8;"	d
pos	kern/game.h	/^struct pos{$/;"	s
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pos::x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
pos::y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
position_init	kern/game.c	/^position_init() {$/;"	f	file:
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
prepare_buffer	kern/video.c	/^prepare_buffer(void) {$/;"	f	signature:(void)
prepare_buffer	kern/video.h	/^void prepare_buffer(void);$/;"	p	signature:(void)
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
protag	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:pos
protag_infrontof_box	kern/game.c	/^protag_infrontof_box(int right, int down) { \/\/ if false return 0,else return box index + 1$/;"	f	file:	signature:(int right, int down)
protag_movable	kern/game.c	/^protag_movable(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protag_move	kern/game.c	/^protag_move(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^			pt = &pt_base[PTX(va)];$/;"	d
pt	obj/kern/kernel.asm	/^		pt = &pt_base[PTX(va)];$/;"	d
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pt_base	obj/kern/kernel.asm	/^			pt_base = ((pte_t *) page2kva(page_as_pt));$/;"	d
pt_base	obj/kern/kernel.asm	/^		pt_base = (pte_t *)pt_base_kva;$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
red	kern/game_draw.h	10;"	d
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	obj/kern/kernel.asm	/^		result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static void*$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f	access:public
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f	access:public
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f	access:public
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_divzero	grade-lab3	/^def test_divzero():$/;"	f	access:public
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f	access:public
test_faultread	grade-lab3	/^def test_faultread():$/;"	f	access:public
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f	access:public
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f	access:public
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f	access:public
test_hello	grade-lab3	/^def test_hello():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
test_softint	grade-lab3	/^def test_softint():$/;"	f	access:public
test_testbss	grade-lab3	/^def test_testbss():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = 0;$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	obj/kern/kernel.asm	/^uint8_t *vmem = VMEM_ADDR;$/;"	l
uint8_t	obj/kern/kernel.asm	/^uint8_t vbuf[SCR_SIZE];$/;"	l
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vbuf	kern/video.c	/^uint8_t vbuf[SCR_SIZE];$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
victory	kern/game.c	/^victory() {$/;"	f	file:
vmem	kern/video.c	/^uint8_t *vmem = VMEM_ADDR;$/;"	v
vmem	obj/kern/kernel.asm	/^	vmem = VMEM_ADDR;$/;"	d
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	kern/draw.c	39;"	d	file:
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
yellow	kern/game_draw.h	7;"	d
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
