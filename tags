!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon5
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/game.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon8
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon8
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon8
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/game.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f	access:public
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon4
E_EOF	inc/error.h	/^	E_EOF		= 9,	\/\/ Unexpected end of file$/;"	e	enum:__anon4
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon4
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon4
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 8,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon4
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon4
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon4
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon4
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon4
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEN	kern/game_draw.c	48;"	d	file:
LEN	kern/game_draw.c	6;"	d	file:
LEN	obj/kern/kernel.asm	/^#define LEN 20$/;"	d
LEN	obj/user/game.asm	/^#define LEN 20$/;"	d
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	71;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon4
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	29;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon1
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	86;"	d
O_CREAT	inc/lib.h	88;"	d
O_EXCL	inc/lib.h	90;"	d
O_MKDIR	inc/lib.h	91;"	d
O_RDONLY	inc/lib.h	83;"	d
O_RDWR	inc/lib.h	85;"	d
O_TRUNC	inc/lib.h	89;"	d
O_WRONLY	inc/lib.h	84;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 8 09:40:26 EDT 2014$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIC	kern/draw.c	6;"	d	file:
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	76;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SCR_HEIGHT	kern/video.h	9;"	d
SCR_SIZE	kern/video.h	10;"	d
SCR_WIDTH	kern/video.h	8;"	d
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon1
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon1
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon1
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon1
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon1
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon1
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon1
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon1
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon1
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon1
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon1
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon1
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon1
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
VMEM_ADDR	kern/video.h	11;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	70;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_CONSOLE_H_	kern/video.h	2;"	d
_DRAW_H_	kern/draw.h	2;"	d
_GAME_DRAW_H_	kern/game_draw.h	2;"	d
_GAME_H_	kern/game.h	2;"	d
_GAME_LAYOUT_H_	kern/game_layout.h	2;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_MY_PG_WALK_	kern/pmap.c	420;"	d	file:
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon6::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:	access:public
__anon6::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:	access:public
__anon6::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:	access:public
__game_restart	obj/kern/kernel.asm	/^__game_restart:$/;"	l
__game_restart	obj/user/game.asm	/^__game_restart:$/;"	l
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/game.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/game.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/game.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
anchor_border_bottom	kern/draw.c	49;"	d	file:
anchor_border_bottom	obj/kern/kernel.asm	/^#define anchor_border_bottom (move_area_height+anchor_border_top-1)$/;"	d
anchor_border_left	kern/draw.c	46;"	d	file:
anchor_border_right	kern/draw.c	48;"	d	file:
anchor_border_right	obj/kern/kernel.asm	/^#define anchor_border_right (move_area_width+anchor_border_left-1)$/;"	d
anchor_border_top	kern/draw.c	47;"	d	file:
anchor_border_top	obj/kern/kernel.asm	/^#define anchor_border_top 0$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/game.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/game.asm	/^			base = 10;$/;"	d
base	obj/user/game.asm	/^			base = 16;$/;"	d
base	obj/user/game.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/game.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
black	kern/game_draw.h	9;"	d
blue	kern/game_draw.h	6;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
box	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	kern/draw.c	/^static int c[width*height]=PIC;$/;"	v	file:
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/game.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/game.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/game.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/game.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/game.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/game.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/game.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/game.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/game.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/game.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/game.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
display_buffer	kern/video.c	/^display_buffer(void) {$/;"	f	signature:(void)
display_buffer	kern/video.h	/^void display_buffer(void);$/;"	p	signature:(void)
draw_box	kern/game_draw.c	/^draw_box() { \/*and protagonist*\/$/;"	f	file:
draw_color	kern/draw.c	/^draw_color()$/;"	f
draw_color	kern/draw.h	/^void draw_color();$/;"	p	signature:()
draw_map	kern/game_draw.c	/^draw_map() {$/;"	f	file:
draw_pixel	kern/video.h	/^draw_pixel(int x, int y, int color) {$/;"	f	signature:(int x, int y, int color)
draw_square	kern/video.c	/^draw_square(int y, int x, int color, int len) {$/;"	f	signature:(int y, int x, int color, int len)
draw_square	kern/video.h	/^void draw_square(int x, int y, int color, int len);$/;"	p	signature:(int x, int y, int color, int len)
draw_string	kern/video.h	/^void draw_string(const char*, int, int, int);$/;"	p	signature:(const char*, int, int, int)
draw_tux	kern/draw.c	/^draw_tux() $/;"	f
draw_tux	kern/draw.h	/^void draw_tux();$/;"	p	signature:()
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/game.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	signature:(uint8_t *binary, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, enum EnvType type);$/;"	p	signature:(uint8_t *binary, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/game.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof(struct Env)*NENV);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/game.asm	/^				err = -err;$/;"	d
err	obj/user/game.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/kern/kernel.asm	/^extern uint8_t *vmem;$/;"	l
extern	obj/kern/kernel.asm	/^extern uint8_t vbuf[];$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 70 12 00       	mov    $0x127000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 70 12 f0       	mov    $0xf0127000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 e1 00 00 00       	call   f010011f <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d e0 ce 32 f0 00 	cmpl   $0x0,0xf032cee0$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 e0 ce 32 f0    	mov    %esi,0xf032cee0$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 c8 59 00 00       	call   f0105a2c <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 00 61 10 f0 	movl   $0xf0106100,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 9c 31 00 00       	call   f010321e <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 5d 31 00 00       	call   f01031eb <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 cc 61 10 f0 	movl   $0xf01061cc,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 84 31 00 00       	call   f010321e <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 ec 07 00 00       	call   f0100892 <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <mp_main>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	77 20                	ja     f01000da <mp_main+0x32>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	f0 $/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	00 $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	c7 04 24 6b 61 10 f0 	movl   $0xf010616b,(%esp)$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 66 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 45 59 00 00       	call   f0105a2c <cpunum>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 77 61 10 f0 	movl   $0xf0106177,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 27 31 00 00       	call   f010321e <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 4b 59 00 00       	call   f0105a47 <lapic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 39 28 00 00       	call   f010293a <env_init_percpu>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 32 31 00 00       	call   f0103238 <trap_init_percpu>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	e8 21 59 00 00       	call   f0105a2c <cpunum>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	81 c2 20 d0 33 f0    	add    $0xf033d020,%edx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	eb fe                	jmp    f010011d <mp_main+0x75>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f <i386_init>:$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	55                   	push   %ebp$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	89 e5                	mov    %esp,%ebp$/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	53                   	push   %ebx$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	b8 08 e0 37 f0       	mov    $0xf037e008,%eax$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	2d 6d bb 32 f0       	sub    $0xf032bb6d,%eax$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	00 $/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	c7 04 24 6d bb 32 f0 	movl   $0xf032bb6d,(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	e8 b6 52 00 00       	call   f01053fe <memset>$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	e8 0a 05 00 00       	call   f0100657 <cons_init>$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	00 $/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	c7 04 24 8d 61 10 f0 	movl   $0xf010618d,(%esp)$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	e8 bd 30 00 00       	call   f010321e <cprintf>$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	e8 8f 0e 00 00       	call   f0100ff5 <mem_init>$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	e8 f9 27 00 00       	call   f0102964 <env_init>$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 25 31 00 00       	call   f0103295 <trap_init>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 cf 55 00 00       	call   f0105744 <mp_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 cd 58 00 00       	call   f0105a47 <lapic_init>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 f5 2f 00 00       	call   f0103174 <pic_init>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	83 3d e8 ce 32 f0 07 	cmpl   $0x7,0xf032cee8$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	77 24                	ja     f01001ac <i386_init+0x8d>$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	00 $/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	f0 $/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	00 $/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	c7 04 24 6b 61 10 f0 	movl   $0xf010616b,(%esp)$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	e8 94 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	b8 6e 56 10 f0       	mov    $0xf010566e,%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	2d f4 55 10 f0       	sub    $0xf01055f4,%eax$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	c7 44 24 04 f4 55 10 	movl   $0xf01055f4,0x4(%esp)$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	f0 $/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	e8 7a 52 00 00       	call   f0105448 <memmove>$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	bb 20 d0 33 f0       	mov    $0xf033d020,%ebx$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	eb 6f                	jmp    f0100244 <i386_init+0x125>$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	e8 52 58 00 00       	call   f0105a2c <cpunum>$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	29 c2                	sub    %eax,%edx$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	8d 04 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%eax$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	74 50                	je     f0100241 <i386_init+0x122>$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	89 d8                	mov    %ebx,%eax$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	2d 20 d0 33 f0       	sub    $0xf033d020,%eax$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	8d 14 d0             	lea    (%eax,%edx,8),%edx$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	89 d1                	mov    %edx,%ecx$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	29 d1                	sub    %edx,%ecx$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	89 d1                	mov    %edx,%ecx$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	c1 e1 0e             	shl    $0xe,%ecx$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	29 d1                	sub    %edx,%ecx$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	8d 44 90 01          	lea    0x1(%eax,%edx,4),%eax$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	05 00 e0 33 f0       	add    $0xf033e000,%eax$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	a3 e4 ce 32 f0       	mov    %eax,0xf032cee4$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	00 $/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	e8 67 59 00 00       	call   f0105ba0 <lapic_startap>$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	75 f8                	jne    f0100239 <i386_init+0x11a>$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	a1 c4 d3 33 f0       	mov    0xf033d3c4,%eax$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	29 c2                	sub    %eax,%edx$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	8d 04 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%eax$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	0f 82 71 ff ff ff    	jb     f01001d5 <i386_init+0xb6>$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	00 $/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	c7 04 24 66 b1 31 f0 	movl   $0xf031b166,(%esp)$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	e8 22 29 00 00       	call   f0102b9a <env_create>$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	e8 65 3d 00 00       	call   f0103fe2 <sched_yield>$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d <_warn>:$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	55                   	push   %ebp$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	53                   	push   %ebx$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	c7 04 24 a8 61 10 f0 	movl   $0xf01061a8,(%esp)$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	e8 7d 2f 00 00       	call   f010321e <cprintf>$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	e8 3b 2f 00 00       	call   f01031eb <vcprintf>$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	c7 04 24 cc 61 10 f0 	movl   $0xf01061cc,(%esp)$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	e8 62 2f 00 00       	call   f010321e <cprintf>$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	5b                   	pop    %ebx$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	5d                   	pop    %ebp$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	c3                   	ret    $/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4 <delay>:$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	55                   	push   %ebp$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	ec                   	in     (%dx),%al$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	ec                   	in     (%dx),%al$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	ec                   	in     (%dx),%al$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	ec                   	in     (%dx),%al$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	5d                   	pop    %ebp$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	c3                   	ret    $/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2 <serial_proc_data>:$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	55                   	push   %ebp$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	ec                   	in     (%dx),%al$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	a8 01                	test   $0x1,%al$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	74 08                	je     f01002e7 <serial_proc_data+0x15>$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	ec                   	in     (%dx),%al$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	eb 05                	jmp    f01002ec <serial_proc_data+0x1a>$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	5d                   	pop    %ebp$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	c3                   	ret    $/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee <cons_intr>:$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	55                   	push   %ebp$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	53                   	push   %ebx$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	89 c3                	mov    %eax,%ebx$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	eb 29                	jmp    f0100322 <cons_intr+0x34>$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	85 c0                	test   %eax,%eax$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	74 25                	je     f0100322 <cons_intr+0x34>$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	8b 15 24 c2 32 f0    	mov    0xf032c224,%edx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	88 82 20 c0 32 f0    	mov    %al,-0xfcd3fe0(%edx)$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	a3 24 c2 32 f0       	mov    %eax,0xf032c224$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	75 0a                	jne    f0100322 <cons_intr+0x34>$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	c7 05 24 c2 32 f0 00 	movl   $0x0,0xf032c224$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	00 00 00 $/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	ff d3                	call   *%ebx$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	75 d0                	jne    f01002f9 <cons_intr+0xb>$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	83 c4 04             	add    $0x4,%esp$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	5b                   	pop    %ebx$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	5d                   	pop    %ebp$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	c3                   	ret    $/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f <cons_putc>:$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	55                   	push   %ebp$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	89 e5                	mov    %esp,%ebp$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	57                   	push   %edi$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	56                   	push   %esi$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	53                   	push   %ebx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	89 c6                	mov    %eax,%esi$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	eb 05                	jmp    f010034b <cons_putc+0x1c>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	e8 79 ff ff ff       	call   f01002c4 <delay>$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	89 fa                	mov    %edi,%edx$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	ec                   	in     (%dx),%al$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	a8 20                	test   $0x20,%al$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	75 03                	jne    f0100355 <cons_putc+0x26>$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	4b                   	dec    %ebx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	75 f1                	jne    f0100346 <cons_putc+0x17>$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	89 f2                	mov    %esi,%edx$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	89 f0                	mov    %esi,%eax$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	ee                   	out    %al,(%dx)$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	eb 05                	jmp    f0100373 <cons_putc+0x44>$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	e8 51 ff ff ff       	call   f01002c4 <delay>$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 fa                	mov    %edi,%edx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	ec                   	in     (%dx),%al$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	84 c0                	test   %al,%al$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	78 03                	js     f010037d <cons_putc+0x4e>$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	4b                   	dec    %ebx$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	75 f1                	jne    f010036e <cons_putc+0x3f>$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	ee                   	out    %al,(%dx)$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	b0 0d                	mov    $0xd,%al$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	ee                   	out    %al,(%dx)$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	b0 08                	mov    $0x8,%al$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	ee                   	out    %al,(%dx)$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	75 06                	jne    f010039c <cons_putc+0x6d>$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	89 f0                	mov    %esi,%eax$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	74 78                	je     f0100420 <cons_putc+0xf1>$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003ab	obj/kern/kernel.asm	/^f01003ab:	7f 0b                	jg     f01003b8 <cons_putc+0x89>$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	0f 85 9e 00 00 00    	jne    f0100454 <cons_putc+0x125>$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	eb 10                	jmp    f01003c8 <cons_putc+0x99>$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	74 39                	je     f01003f6 <cons_putc+0xc7>$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	0f 85 8e 00 00 00    	jne    f0100454 <cons_putc+0x125>$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	eb 36                	jmp    f01003fe <cons_putc+0xcf>$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	66 a1 34 c2 32 f0    	mov    0xf032c234,%ax$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	66 85 c0             	test   %ax,%ax$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	0f 84 e2 00 00 00    	je     f01004b9 <cons_putc+0x18a>$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	48                   	dec    %eax$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	66 a3 34 c2 32 f0    	mov    %ax,0xf032c234$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	83 ce 20             	or     $0x20,%esi$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	8b 15 30 c2 32 f0    	mov    0xf032c230,%edx$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	eb 78                	jmp    f010046e <cons_putc+0x13f>$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	66 83 05 34 c2 32 f0 	addw   $0x50,0xf032c234$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	50 $/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	66 8b 0d 34 c2 32 f0 	mov    0xf032c234,%cx$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	89 c8                	mov    %ecx,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	66 f7 f3             	div    %bx$/;"	l
f0100414	obj/kern/kernel.asm	/^f0100414:	66 29 d1             	sub    %dx,%cx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	66 89 0d 34 c2 32 f0 	mov    %cx,0xf032c234$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	eb 4e                	jmp    f010046e <cons_putc+0x13f>$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	e8 05 ff ff ff       	call   f010032f <cons_putc>$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	e8 fb fe ff ff       	call   f010032f <cons_putc>$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	e8 f1 fe ff ff       	call   f010032f <cons_putc>$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	e8 e7 fe ff ff       	call   f010032f <cons_putc>$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	e8 dd fe ff ff       	call   f010032f <cons_putc>$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	eb 1a                	jmp    f010046e <cons_putc+0x13f>$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	66 a1 34 c2 32 f0    	mov    0xf032c234,%ax$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	8b 15 30 c2 32 f0    	mov    0xf032c230,%edx$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	40                   	inc    %eax$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	66 a3 34 c2 32 f0    	mov    %ax,0xf032c234$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	66 81 3d 34 c2 32 f0 	cmpw   $0x7cf,0xf032c234$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	cf 07 $/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	76 40                	jbe    f01004b9 <cons_putc+0x18a>$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	a1 30 c2 32 f0       	mov    0xf032c230,%eax$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	00 $/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	e8 b0 4f 00 00       	call   f0105448 <memmove>$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	8b 15 30 c2 32 f0    	mov    0xf032c230,%edx$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	40                   	inc    %eax$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	75 f2                	jne    f01004a3 <cons_putc+0x174>$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	66 83 2d 34 c2 32 f0 	subw   $0x50,0xf032c234$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	50 $/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	8b 0d 2c c2 32 f0    	mov    0xf032c22c,%ecx$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	b0 0e                	mov    $0xe,%al$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	89 ca                	mov    %ecx,%edx$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	ee                   	out    %al,(%dx)$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	66 8b 35 34 c2 32 f0 	mov    0xf032c234,%si$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	89 f0                	mov    %esi,%eax$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	89 da                	mov    %ebx,%edx$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	ee                   	out    %al,(%dx)$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	b0 0f                	mov    $0xf,%al$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	89 ca                	mov    %ecx,%edx$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	ee                   	out    %al,(%dx)$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	89 f0                	mov    %esi,%eax$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	89 da                	mov    %ebx,%edx$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	ee                   	out    %al,(%dx)$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	5b                   	pop    %ebx$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	5e                   	pop    %esi$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	5f                   	pop    %edi$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	5d                   	pop    %ebp$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	c3                   	ret    $/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9 <kbd_proc_data>:$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	55                   	push   %ebp$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	53                   	push   %ebx$/;"	l
f01004ed	obj/kern/kernel.asm	/^f01004ed:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	ec                   	in     (%dx),%al$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	a8 01                	test   $0x1,%al$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	0f 84 d8 00 00 00    	je     f01005d6 <kbd_proc_data+0xed>$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	b2 60                	mov    $0x60,%dl$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	ec                   	in     (%dx),%al$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	88 c2                	mov    %al,%dl$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	75 11                	jne    f0100518 <kbd_proc_data+0x2f>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	83 0d 28 c2 32 f0 40 	orl    $0x40,0xf032c228$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	e9 c3 00 00 00       	jmp    f01005db <kbd_proc_data+0xf2>$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	84 c0                	test   %al,%al$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	79 33                	jns    f010054f <kbd_proc_data+0x66>$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	8b 0d 28 c2 32 f0    	mov    0xf032c228,%ecx$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	75 05                	jne    f010052c <kbd_proc_data+0x43>$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	88 c2                	mov    %al,%dl$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	8a 82 00 62 10 f0    	mov    -0xfef9e00(%edx),%al$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	f7 d0                	not    %eax$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	21 c1                	and    %eax,%ecx$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	89 0d 28 c2 32 f0    	mov    %ecx,0xf032c228$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	e9 8c 00 00 00       	jmp    f01005db <kbd_proc_data+0xf2>$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	8b 0d 28 c2 32 f0    	mov    0xf032c228,%ecx$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	74 0e                	je     f0100568 <kbd_proc_data+0x7f>$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	88 c2                	mov    %al,%dl$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	89 0d 28 c2 32 f0    	mov    %ecx,0xf032c228$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	0f b6 82 00 62 10 f0 	movzbl -0xfef9e00(%edx),%eax$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	0b 05 28 c2 32 f0    	or     0xf032c228,%eax$/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578:	0f b6 8a 00 63 10 f0 	movzbl -0xfef9d00(%edx),%ecx$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	31 c8                	xor    %ecx,%eax$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	a3 28 c2 32 f0       	mov    %eax,0xf032c228$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	89 c1                	mov    %eax,%ecx$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010058b	obj/kern/kernel.asm	/^f010058b:	8b 0c 8d 00 64 10 f0 	mov    -0xfef9c00(,%ecx,4),%ecx$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	a8 08                	test   $0x8,%al$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	74 18                	je     f01005b2 <kbd_proc_data+0xc9>$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	77 05                	ja     f01005a7 <kbd_proc_data+0xbe>$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	eb 0b                	jmp    f01005b2 <kbd_proc_data+0xc9>$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	77 03                	ja     f01005b2 <kbd_proc_data+0xc9>$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	f7 d0                	not    %eax$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	a8 06                	test   $0x6,%al$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	75 23                	jne    f01005db <kbd_proc_data+0xf2>$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	75 1b                	jne    f01005db <kbd_proc_data+0xf2>$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	c7 04 24 c2 61 10 f0 	movl   $0xf01061c2,(%esp)$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	e8 52 2c 00 00       	call   f010321e <cprintf>$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	b0 03                	mov    $0x3,%al$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	ee                   	out    %al,(%dx)$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	eb 05                	jmp    f01005db <kbd_proc_data+0xf2>$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	89 d8                	mov    %ebx,%eax$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	83 c4 14             	add    $0x14,%esp$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	5b                   	pop    %ebx$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	5d                   	pop    %ebp$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	c3                   	ret    $/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3 <serial_intr>:$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	55                   	push   %ebp$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	80 3d 00 c0 32 f0 00 	cmpb   $0x0,0xf032c000$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	74 0a                	je     f01005fc <serial_intr+0x19>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	b8 d2 02 10 f0       	mov    $0xf01002d2,%eax$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	e8 f2 fc ff ff       	call   f01002ee <cons_intr>$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	c9                   	leave  $/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	c3                   	ret    $/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe <kbd_intr>:$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	55                   	push   %ebp$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	b8 e9 04 10 f0       	mov    $0xf01004e9,%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	e8 e0 fc ff ff       	call   f01002ee <cons_intr>$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	c9                   	leave  $/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	c3                   	ret    $/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610 <cons_getc>:$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	55                   	push   %ebp$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	89 e5                	mov    %esp,%ebp$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	e8 c8 ff ff ff       	call   f01005e3 <serial_intr>$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	e8 de ff ff ff       	call   f01005fe <kbd_intr>$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	8b 15 20 c2 32 f0    	mov    0xf032c220,%edx$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	3b 15 24 c2 32 f0    	cmp    0xf032c224,%edx$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	74 22                	je     f0100650 <cons_getc+0x40>$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	0f b6 82 20 c0 32 f0 	movzbl -0xfcd3fe0(%edx),%eax$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	42                   	inc    %edx$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	89 15 20 c2 32 f0    	mov    %edx,0xf032c220$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	75 11                	jne    f0100655 <cons_getc+0x45>$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	c7 05 20 c2 32 f0 00 	movl   $0x0,0xf032c220$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	00 00 00 $/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	eb 05                	jmp    f0100655 <cons_getc+0x45>$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	c9                   	leave  $/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	c3                   	ret    $/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657 <cons_init>:$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	55                   	push   %ebp$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	89 e5                	mov    %esp,%ebp$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	57                   	push   %edi$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	56                   	push   %esi$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	53                   	push   %ebx$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	5a a5 $/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	74 11                	je     f010068d <cons_init+0x36>$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c7 05 2c c2 32 f0 b4 	movl   $0x3b4,0xf032c22c$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	03 00 00 $/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	eb 16                	jmp    f01006a3 <cons_init+0x4c>$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	c7 05 2c c2 32 f0 d4 	movl   $0x3d4,0xf032c22c$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	03 00 00 $/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	8b 0d 2c c2 32 f0    	mov    0xf032c22c,%ecx$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	b0 0e                	mov    $0xe,%al$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	89 ca                	mov    %ecx,%edx$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	ee                   	out    %al,(%dx)$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	89 da                	mov    %ebx,%edx$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	ec                   	in     (%dx),%al$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	0f b6 f8             	movzbl %al,%edi$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	b0 0f                	mov    $0xf,%al$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	89 ca                	mov    %ecx,%edx$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	ee                   	out    %al,(%dx)$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	89 da                	mov    %ebx,%edx$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	ec                   	in     (%dx),%al$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	89 35 30 c2 32 f0    	mov    %esi,0xf032c230$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	09 df                	or     %ebx,%edi$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	66 89 3d 34 c2 32 f0 	mov    %di,0xf032c234$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	e8 25 ff ff ff       	call   f01005fe <kbd_intr>$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	0f b7 05 88 93 12 f0 	movzwl 0xf0129388,%eax$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	e8 13 2a 00 00       	call   f0103100 <irq_setmask_8259A>$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	b0 00                	mov    $0x0,%al$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	89 da                	mov    %ebx,%edx$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	ee                   	out    %al,(%dx)$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	b0 80                	mov    $0x80,%al$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	ee                   	out    %al,(%dx)$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	b0 0c                	mov    $0xc,%al$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	89 ca                	mov    %ecx,%edx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	ee                   	out    %al,(%dx)$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	b0 00                	mov    $0x0,%al$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	ee                   	out    %al,(%dx)$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	b0 03                	mov    $0x3,%al$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	ee                   	out    %al,(%dx)$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	b0 00                	mov    $0x0,%al$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	ee                   	out    %al,(%dx)$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	b0 01                	mov    $0x1,%al$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	ee                   	out    %al,(%dx)$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	b2 fd                	mov    $0xfd,%dl$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	ec                   	in     (%dx),%al$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	3c ff                	cmp    $0xff,%al$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	a2 00 c0 32 f0       	mov    %al,0xf032c000$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	89 da                	mov    %ebx,%edx$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	ec                   	in     (%dx),%al$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	ec                   	in     (%dx),%al$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	75 0c                	jne    f0100743 <cons_init+0xec>$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	c7 04 24 ce 61 10 f0 	movl   $0xf01061ce,(%esp)$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	e8 db 2a 00 00       	call   f010321e <cprintf>$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	5b                   	pop    %ebx$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	5e                   	pop    %esi$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	5f                   	pop    %edi$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	5d                   	pop    %ebp$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	c3                   	ret    $/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b <cputchar>:$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	55                   	push   %ebp$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	89 e5                	mov    %esp,%ebp$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	e8 d6 fb ff ff       	call   f010032f <cons_putc>$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	c9                   	leave  $/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	c3                   	ret    $/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b <getchar>:$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	55                   	push   %ebp$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	89 e5                	mov    %esp,%ebp$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	e8 aa fe ff ff       	call   f0100610 <cons_getc>$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	85 c0                	test   %eax,%eax$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	74 f7                	je     f0100761 <getchar+0x6>$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	c9                   	leave  $/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	c3                   	ret    $/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c <iscons>:$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	55                   	push   %ebp$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	89 e5                	mov    %esp,%ebp$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	5d                   	pop    %ebp$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	c3                   	ret    $/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778 <mon_kerninfo>:$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	55                   	push   %ebp$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	89 e5                	mov    %esp,%ebp$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	c7 04 24 10 64 10 f0 	movl   $0xf0106410,(%esp)$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	e8 94 2a 00 00       	call   f010321e <cprintf>$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	00 $/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	c7 04 24 9c 64 10 f0 	movl   $0xf010649c,(%esp)$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	e8 80 2a 00 00       	call   f010321e <cprintf>$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	00 $/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	f0 $/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	c7 04 24 c4 64 10 f0 	movl   $0xf01064c4,(%esp)$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	e8 64 2a 00 00       	call   f010321e <cprintf>$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	c7 44 24 08 ea 60 10 	movl   $0x1060ea,0x8(%esp)$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	00 $/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	c7 44 24 04 ea 60 10 	movl   $0xf01060ea,0x4(%esp)$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	f0 $/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	c7 04 24 e8 64 10 f0 	movl   $0xf01064e8,(%esp)$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	e8 48 2a 00 00       	call   f010321e <cprintf>$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c7 44 24 08 6d bb 32 	movl   $0x32bb6d,0x8(%esp)$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	00 $/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	c7 44 24 04 6d bb 32 	movl   $0xf032bb6d,0x4(%esp)$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	f0 $/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	c7 04 24 0c 65 10 f0 	movl   $0xf010650c,(%esp)$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	e8 2c 2a 00 00       	call   f010321e <cprintf>$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	c7 44 24 08 08 e0 37 	movl   $0x37e008,0x8(%esp)$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	00 $/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	c7 44 24 04 08 e0 37 	movl   $0xf037e008,0x4(%esp)$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	f0 $/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	c7 04 24 30 65 10 f0 	movl   $0xf0106530,(%esp)$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	e8 10 2a 00 00       	call   f010321e <cprintf>$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	b8 07 e4 37 f0       	mov    $0xf037e407,%eax$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	89 c2                	mov    %eax,%edx$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	85 c0                	test   %eax,%eax$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	79 06                	jns    f0100829 <mon_kerninfo+0xb1>$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	c7 04 24 54 65 10 f0 	movl   $0xf0106554,(%esp)$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	e8 e2 29 00 00       	call   f010321e <cprintf>$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	c9                   	leave  $/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	c3                   	ret    $/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843 <mon_help>:$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	55                   	push   %ebp$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	89 e5                	mov    %esp,%ebp$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	c7 44 24 08 29 64 10 	movl   $0xf0106429,0x8(%esp)$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	f0 $/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	c7 44 24 04 47 64 10 	movl   $0xf0106447,0x4(%esp)$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	f0 $/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	c7 04 24 4c 64 10 f0 	movl   $0xf010644c,(%esp)$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	e8 b9 29 00 00       	call   f010321e <cprintf>$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	c7 44 24 08 80 65 10 	movl   $0xf0106580,0x8(%esp)$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	f0 $/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	c7 44 24 04 55 64 10 	movl   $0xf0106455,0x4(%esp)$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	f0 $/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	c7 04 24 4c 64 10 f0 	movl   $0xf010644c,(%esp)$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	e8 9d 29 00 00       	call   f010321e <cprintf>$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	c9                   	leave  $/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	c3                   	ret    $/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888 <mon_backtrace>:$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	55                   	push   %ebp$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	89 e5                	mov    %esp,%ebp$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	5d                   	pop    %ebp$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	c3                   	ret    $/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892 <monitor>:$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	55                   	push   %ebp$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	89 e5                	mov    %esp,%ebp$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	57                   	push   %edi$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	56                   	push   %esi$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	53                   	push   %ebx$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	c7 04 24 a8 65 10 f0 	movl   $0xf01065a8,(%esp)$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	e8 74 29 00 00       	call   f010321e <cprintf>$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	c7 04 24 cc 65 10 f0 	movl   $0xf01065cc,(%esp)$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	e8 68 29 00 00       	call   f010321e <cprintf>$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	85 ff                	test   %edi,%edi$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	74 08                	je     f01008c2 <monitor+0x30>$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	e8 90 30 00 00       	call   f0103952 <print_trapframe>$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	c7 04 24 5e 64 10 f0 	movl   $0xf010645e,(%esp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	e8 06 49 00 00       	call   f01051d4 <readline>$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	89 c3                	mov    %eax,%ebx$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	85 c0                	test   %eax,%eax$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	74 ee                	je     f01008c2 <monitor+0x30>$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	eb 04                	jmp    f01008e6 <monitor+0x54>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	43                   	inc    %ebx$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	8a 03                	mov    (%ebx),%al$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	84 c0                	test   %al,%al$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	74 5e                	je     f010094a <monitor+0xb8>$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	0f be c0             	movsbl %al,%eax$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	c7 04 24 62 64 10 f0 	movl   $0xf0106462,(%esp)$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	e8 ca 4a 00 00       	call   f01053c9 <strchr>$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	85 c0                	test   %eax,%eax$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	75 df                	jne    f01008e2 <monitor+0x50>$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	74 42                	je     f010094a <monitor+0xb8>$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	75 16                	jne    f0100923 <monitor+0x91>$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	00 $/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	c7 04 24 67 64 10 f0 	movl   $0xf0106467,(%esp)$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	e8 fd 28 00 00       	call   f010321e <cprintf>$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	eb 9f                	jmp    f01008c2 <monitor+0x30>$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	46                   	inc    %esi$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	eb 01                	jmp    f010092b <monitor+0x99>$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	43                   	inc    %ebx$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	8a 03                	mov    (%ebx),%al$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	84 c0                	test   %al,%al$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	74 b5                	je     f01008e6 <monitor+0x54>$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	0f be c0             	movsbl %al,%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	c7 04 24 62 64 10 f0 	movl   $0xf0106462,(%esp)$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	e8 85 4a 00 00       	call   f01053c9 <strchr>$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	85 c0                	test   %eax,%eax$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	74 e2                	je     f010092a <monitor+0x98>$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	eb 9c                	jmp    f01008e6 <monitor+0x54>$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	00 $/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	85 f6                	test   %esi,%esi$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	0f 84 68 ff ff ff    	je     f01008c2 <monitor+0x30>$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	c7 44 24 04 47 64 10 	movl   $0xf0106447,0x4(%esp)$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	f0 $/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	e8 09 4a 00 00       	call   f0105376 <strcmp>$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	85 c0                	test   %eax,%eax$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	74 1b                	je     f010098c <monitor+0xfa>$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	c7 44 24 04 55 64 10 	movl   $0xf0106455,0x4(%esp)$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	f0 $/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	e8 f2 49 00 00       	call   f0105376 <strcmp>$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	85 c0                	test   %eax,%eax$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	75 2c                	jne    f01009b4 <monitor+0x122>$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	b0 01                	mov    $0x1,%al$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	eb 05                	jmp    f0100991 <monitor+0xff>$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	01 d0                	add    %edx,%eax$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	ff 14 85 fc 65 10 f0 	call   *-0xfef9a04(,%eax,4)$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	85 c0                	test   %eax,%eax$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	78 1d                	js     f01009cc <monitor+0x13a>$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	e9 0e ff ff ff       	jmp    f01008c2 <monitor+0x30>$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	c7 04 24 84 64 10 f0 	movl   $0xf0106484,(%esp)$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	e8 57 28 00 00       	call   f010321e <cprintf>$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	e9 f6 fe ff ff       	jmp    f01008c2 <monitor+0x30>$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	5b                   	pop    %ebx$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	5e                   	pop    %esi$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	5f                   	pop    %edi$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	5d                   	pop    %ebp$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	c3                   	ret    $/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4 <boot_alloc>:$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	55                   	push   %ebp$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	53                   	push   %ebx$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	83 ec 24             	sub    $0x24,%esp$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	89 c3                	mov    %eax,%ebx$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	83 3d 3c c2 32 f0 00 	cmpl   $0x0,0xf032c23c$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	75 0f                	jne    f01009f5 <boot_alloc+0x21>$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	b8 07 f0 37 f0       	mov    $0xf037f007,%eax$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	a3 3c c2 32 f0       	mov    %eax,0xf032c23c$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	85 db                	test   %ebx,%ebx$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	75 07                	jne    f0100a00 <boot_alloc+0x2c>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	a1 3c c2 32 f0       	mov    0xf032c23c,%eax$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	eb 45                	jmp    f0100a45 <boot_alloc+0x71>$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	c7 44 24 10 6e 00 00 	movl   $0x6e,0x10(%esp)$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	00 $/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	c7 44 24 0c 5d 6f 10 	movl   $0xf0106f5d,0xc(%esp)$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	f0 $/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	c7 44 24 08 0c 66 10 	movl   $0xf010660c,0x8(%esp)$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	f0 $/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	a1 3c c2 32 f0       	mov    0xf032c23c,%eax$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	c7 04 24 e8 68 10 f0 	movl   $0xf01068e8,(%esp)$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	e8 f1 27 00 00       	call   f010321e <cprintf>$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	a1 3c c2 32 f0       	mov    0xf032c23c,%eax$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	8d 94 18 ff 0f 00 00 	lea    0xfff(%eax,%ebx,1),%edx$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	89 15 3c c2 32 f0    	mov    %edx,0xf032c23c$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	5b                   	pop    %ebx$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	5d                   	pop    %ebp$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	c3                   	ret    $/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b <_kaddr>:$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	55                   	push   %ebp$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	53                   	push   %ebx$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	3b 1d e8 ce 32 f0    	cmp    0xf032cee8,%ebx$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	72 18                	jb     f0100a77 <_kaddr+0x2c>$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	f0 $/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	e8 c9 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	8d 81 00 00 00 f0    	lea    -0x10000000(%ecx),%eax$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	5b                   	pop    %ebx$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	5d                   	pop    %ebp$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	c3                   	ret    $/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83 <check_va2pa>:$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	55                   	push   %ebp$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	53                   	push   %ebx$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	89 d3                	mov    %edx,%ebx$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	8b 0c 90             	mov    (%eax,%edx,4),%ecx$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	f6 c1 01             	test   $0x1,%cl$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	74 32                	je     f0100ace <check_va2pa+0x4b>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	ba af 03 00 00       	mov    $0x3af,%edx$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	b8 0c 66 10 f0       	mov    $0xf010660c,%eax$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	e8 9a ff ff ff       	call   f0100a4b <_kaddr>$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	8b 14 98             	mov    (%eax,%ebx,4),%edx$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	74 07                	je     f0100ace <check_va2pa+0x4b>$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	89 d0                	mov    %edx,%eax$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	5b                   	pop    %ebx$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	5d                   	pop    %ebp$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	c3                   	ret    $/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4 <nvram_read>:$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	55                   	push   %ebp$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	56                   	push   %esi$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	53                   	push   %ebx$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	e8 f2 25 00 00       	call   f01030d8 <mc146818_read>$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	89 c6                	mov    %eax,%esi$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	43                   	inc    %ebx$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	e8 e7 25 00 00       	call   f01030d8 <mc146818_read>$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	09 f0                	or     %esi,%eax$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	5b                   	pop    %ebx$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	5e                   	pop    %esi$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	5d                   	pop    %ebp$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	c3                   	ret    $/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd <page2kva>:$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	55                   	push   %ebp$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	2b 05 f0 ce 32 f0    	sub    0xf032cef0,%eax$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	89 c2                	mov    %eax,%edx$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	3b 15 e8 ce 32 f0    	cmp    0xf032cee8,%edx$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	72 20                	jb     f0100b3c <page2kva+0x3f>$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	f0 $/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	00 $/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	e8 04 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	c9                   	leave  $/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	c3                   	ret    $/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43 <page_init>:$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	55                   	push   %ebp$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	57                   	push   %edi$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	56                   	push   %esi$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	53                   	push   %ebx$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	a1 3c c2 32 f0       	mov    0xf032c23c,%eax$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	89 c7                	mov    %eax,%edi$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	8b 1d 40 c2 32 f0    	mov    0xf032c240,%ebx$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	e9 8d 00 00 00       	jmp    f0100c05 <page_init+0xc2>$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	85 c0                	test   %eax,%eax$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	74 22                	je     f0100b9e <page_init+0x5b>$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	81 f9 ff ff 09 00    	cmp    $0x9ffff,%ecx$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	77 1a                	ja     f0100b9e <page_init+0x5b>$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	89 d6                	mov    %edx,%esi$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	03 35 f0 ce 32 f0    	add    0xf032cef0,%esi$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	89 d3                	mov    %edx,%ebx$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	03 1d f0 ce 32 f0    	add    0xf032cef0,%ebx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	eb 5d                	jmp    f0100bfb <page_init+0xb8>$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	77 29                	ja     f0100bcf <page_init+0x8c>$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	89 1d 40 c2 32 f0    	mov    %ebx,0xf032c240$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	f0 $/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	c7 44 24 04 4a 01 00 	movl   $0x14a,0x4(%esp)$/;"	l
f0100bc2	obj/kern/kernel.asm	/^f0100bc2:	00 $/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	e8 71 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	3b 4d e4             	cmp    -0x1c(%ebp),%ecx$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	72 1a                	jb     f0100bee <page_init+0xab>$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	89 d6                	mov    %edx,%esi$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	03 35 f0 ce 32 f0    	add    0xf032cef0,%esi$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	89 d3                	mov    %edx,%ebx$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	03 1d f0 ce 32 f0    	add    0xf032cef0,%ebx$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	eb 0d                	jmp    f0100bfb <page_init+0xb8>$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	8b 35 f0 ce 32 f0    	mov    0xf032cef0,%esi$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	66 c7 44 16 04 01 00 	movw   $0x1,0x4(%esi,%edx,1)$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	40                   	inc    %eax$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	83 c2 08             	add    $0x8,%edx$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	81 c1 00 10 00 00    	add    $0x1000,%ecx$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	3b 05 e8 ce 32 f0    	cmp    0xf032cee8,%eax$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	0f 82 67 ff ff ff    	jb     f0100b78 <page_init+0x35>$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	89 1d 40 c2 32 f0    	mov    %ebx,0xf032c240$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	5b                   	pop    %ebx$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	5e                   	pop    %esi$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	5f                   	pop    %edi$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	5d                   	pop    %ebp$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	c3                   	ret    $/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f <page_alloc>:$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	55                   	push   %ebp$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	53                   	push   %ebx$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	8b 1d 40 c2 32 f0    	mov    0xf032c240,%ebx$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	85 db                	test   %ebx,%ebx$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	74 7d                	je     f0100cad <page_alloc+0x8e>$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	a3 40 c2 32 f0       	mov    %eax,0xf032c240$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	00 $/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	00 $/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	e8 af 47 00 00       	call   f01053fe <memset>$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	74 58                	je     f0100cad <page_alloc+0x8e>$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	2b 05 f0 ce 32 f0    	sub    0xf032cef0,%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	89 c2                	mov    %eax,%edx$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	3b 15 e8 ce 32 f0    	cmp    0xf032cee8,%edx$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	72 20                	jb     f0100c90 <page_alloc+0x71>$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	f0 $/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	00 $/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	e8 b0 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	00 $/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	00 $/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	e8 51 47 00 00       	call   f01053fe <memset>$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	89 d8                	mov    %ebx,%eax$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	5b                   	pop    %ebx$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	5d                   	pop    %ebp$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	c3                   	ret    $/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5 <page_free>:$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	55                   	push   %ebp$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	74 24                	je     f0100ce7 <page_free+0x32>$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	c7 44 24 0c 26 66 10 	movl   $0xf0106626,0xc(%esp)$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	f0 $/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	f0 $/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	00 $/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	e8 59 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	74 24                	je     f0100d12 <page_free+0x5d>$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	c7 44 24 0c 4f 66 10 	movl   $0xf010664f,0xc(%esp)$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	f0 $/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	f0 $/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	c7 44 24 04 7d 01 00 	movl   $0x17d,0x4(%esp)$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	00 $/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	e8 2e f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	8b 15 40 c2 32 f0    	mov    0xf032c240,%edx$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	89 10                	mov    %edx,(%eax)$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	a3 40 c2 32 f0       	mov    %eax,0xf032c240$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	c9                   	leave  $/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	c3                   	ret    $/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21 <page_decref>:$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	55                   	push   %ebp$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	4a                   	dec    %edx$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	66 85 d2             	test   %dx,%dx$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	75 08                	jne    f0100d3f <page_decref+0x1e>$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	e8 76 ff ff ff       	call   f0100cb5 <page_free>$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	c9                   	leave  $/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	c3                   	ret    $/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41 <pgdir_walk>:$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	55                   	push   %ebp$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	56                   	push   %esi$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	53                   	push   %ebx$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	89 f3                	mov    %esi,%ebx$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	a8 01                	test   $0x1,%al$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	74 44                	je     f0100da1 <pgdir_walk+0x60>$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	89 c2                	mov    %eax,%edx$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	3b 15 e8 ce 32 f0    	cmp    0xf032cee8,%edx$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	72 20                	jb     f0100d8f <pgdir_walk+0x4e>$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	f0 $/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	c7 44 24 04 c0 01 00 	movl   $0x1c0,0x4(%esp)$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	00 $/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	e8 b1 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	eb 78                	jmp    f0100e19 <pgdir_walk+0xd8>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	75 66                	jne    f0100e0d <pgdir_walk+0xcc>$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	e8 6c fe ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	85 c0                	test   %eax,%eax$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	74 5d                	je     f0100e14 <pgdir_walk+0xd3>$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	2b 05 f0 ce 32 f0    	sub    0xf032cef0,%eax$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	89 c2                	mov    %eax,%edx$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	89 d0                	mov    %edx,%eax$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	3b 05 e8 ce 32 f0    	cmp    0xf032cee8,%eax$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	72 20                	jb     f0100df6 <pgdir_walk+0xb5>$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	f0 $/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	00 $/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	e8 4a f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	8d 84 32 00 00 00 f0 	lea    -0x10000000(%edx,%esi,1),%eax$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	83 ca 07             	or     $0x7,%edx$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	89 13                	mov    %edx,(%ebx)$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	eb 0c                	jmp    f0100e19 <pgdir_walk+0xd8>$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	eb 05                	jmp    f0100e19 <pgdir_walk+0xd8>$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	5b                   	pop    %ebx$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	5e                   	pop    %esi$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	5d                   	pop    %ebp$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	c3                   	ret    $/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20 <page_lookup>:$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	55                   	push   %ebp$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	53                   	push   %ebx$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	00 $/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	e8 fd fe ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	85 c0                	test   %eax,%eax$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	74 3f                	je     f0100e87 <page_lookup+0x67>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	74 41                	je     f0100e8e <page_lookup+0x6e>$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	85 db                	test   %ebx,%ebx$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	74 02                	je     f0100e53 <page_lookup+0x33>$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	3b 05 e8 ce 32 f0    	cmp    0xf032cee8,%eax$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	72 1c                	jb     f0100e7c <page_lookup+0x5c>$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	c7 44 24 08 1c 69 10 	movl   $0xf010691c,0x8(%esp)$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	f0 $/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	00 $/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	e8 c4 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	03 05 f0 ce 32 f0    	add    0xf032cef0,%eax$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	eb 0c                	jmp    f0100e93 <page_lookup+0x73>$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	eb 05                	jmp    f0100e93 <page_lookup+0x73>$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	5b                   	pop    %ebx$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	5d                   	pop    %ebp$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	c3                   	ret    $/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99 <tlb_invalidate>:$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	55                   	push   %ebp$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	e8 88 4b 00 00       	call   f0105a2c <cpunum>$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	29 c2                	sub    %eax,%edx$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	83 3c 85 28 d0 33 f0 	cmpl   $0x0,-0xfcc2fd8(,%eax,4)$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	00 $/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	74 20                	je     f0100eda <tlb_invalidate+0x41>$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	e8 6d 4b 00 00       	call   f0105a2c <cpunum>$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	29 c2                	sub    %eax,%edx$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	75 06                	jne    f0100ee0 <tlb_invalidate+0x47>$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	0f 01 38             	invlpg (%eax)$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	c9                   	leave  $/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	c3                   	ret    $/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2 <page_remove>:$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	55                   	push   %ebp$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	56                   	push   %esi$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	53                   	push   %ebx$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	e8 1d ff ff ff       	call   f0100e20 <page_lookup>$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	85 c0                	test   %eax,%eax$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	74 1d                	je     f0100f24 <page_remove+0x42>$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	e8 12 fe ff ff       	call   f0100d21 <page_decref>$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	e8 75 ff ff ff       	call   f0100e99 <tlb_invalidate>$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	5b                   	pop    %ebx$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	5e                   	pop    %esi$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	5d                   	pop    %ebp$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	c3                   	ret    $/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b <page_insert>:$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	55                   	push   %ebp$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	57                   	push   %edi$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	56                   	push   %esi$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	53                   	push   %ebx$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	00 $/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	e8 f0 fd ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	85 c0                	test   %eax,%eax$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	74 6f                	je     f0100fc6 <page_insert+0x9b>$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	a8 01                	test   $0x1,%al$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	74 46                	je     f0100fa3 <page_insert+0x78>$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	89 f2                	mov    %esi,%edx$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	39 d0                	cmp    %edx,%eax$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	75 11                	jne    f0100f85 <page_insert+0x5a>$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	83 ca 01             	or     $0x1,%edx$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	09 d0                	or     %edx,%eax$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	eb 46                	jmp    f0100fcb <page_insert+0xa0>$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	e8 4e ff ff ff       	call   f0100ee2 <page_remove>$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	e8 f6 fe ff ff       	call   f0100e99 <tlb_invalidate>$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	83 c8 01             	or     $0x1,%eax$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	89 f2                	mov    %esi,%edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	09 d0                	or     %edx,%eax$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	eb 05                	jmp    f0100fcb <page_insert+0xa0>$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	5b                   	pop    %ebx$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	5e                   	pop    %esi$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	5f                   	pop    %edi$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	5d                   	pop    %ebp$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	c3                   	ret    $/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3 <mmio_map_region>:$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	55                   	push   %ebp$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	c7 44 24 08 3c 69 10 	movl   $0xf010693c,0x8(%esp)$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	f0 $/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	c7 44 24 04 8c 02 00 	movl   $0x28c,0x4(%esp)$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	00 $/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	e8 4b f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5 <mem_init>:$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	55                   	push   %ebp$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	57                   	push   %edi$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	56                   	push   %esi$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	53                   	push   %ebx$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	e8 cc fa ff ff       	call   f0100ad4 <nvram_read>$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	89 c2                	mov    %eax,%edx$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	85 c0                	test   %eax,%eax$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	79 06                	jns    f0101017 <mem_init+0x22>$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	89 15 38 c2 32 f0    	mov    %edx,0xf032c238$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	e8 aa fa ff ff       	call   f0100ad4 <nvram_read>$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	89 c2                	mov    %eax,%edx$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	89 d0                	mov    %edx,%eax$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	85 d2                	test   %edx,%edx$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	79 06                	jns    f010103b <mem_init+0x46>$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	74 0e                	je     f010104e <mem_init+0x59>$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	89 15 e8 ce 32 f0    	mov    %edx,0xf032cee8$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	eb 0c                	jmp    f010105a <mem_init+0x65>$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	8b 15 38 c2 32 f0    	mov    0xf032c238,%edx$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	89 15 e8 ce 32 f0    	mov    %edx,0xf032cee8$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	a1 38 c2 32 f0       	mov    0xf032c238,%eax$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	a1 e8 ce 32 f0       	mov    0xf032cee8,%eax$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	c7 04 24 5c 69 10 f0 	movl   $0xf010695c,(%esp)$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	e8 90 21 00 00       	call   f010321e <cprintf>$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	e8 3c f9 ff ff       	call   f01009d4 <boot_alloc>$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	a3 ec ce 32 f0       	mov    %eax,0xf032ceec$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	00 $/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	00 $/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	e8 49 43 00 00       	call   f01053fe <memset>$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	77 20                	ja     f01010e1 <mem_init+0xec>$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	f0 $/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	00 $/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	e8 5f ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	83 ca 05             	or     $0x5,%edx$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	a1 e8 ce 32 f0       	mov    0xf032cee8,%eax$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	e8 d7 f8 ff ff       	call   f01009d4 <boot_alloc>$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	a3 f0 ce 32 f0       	mov    %eax,0xf032cef0$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	e8 c8 f8 ff ff       	call   f01009d4 <boot_alloc>$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	a3 48 c2 32 f0       	mov    %eax,0xf032c248$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	e8 2d fa ff ff       	call   f0100b43 <page_init>$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	a1 40 c2 32 f0       	mov    0xf032c240,%eax$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	85 c0                	test   %eax,%eax$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	75 1c                	jne    f010113b <mem_init+0x146>$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	c7 44 24 08 98 69 10 	movl   $0xf0106998,0x8(%esp)$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	f0 $/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	00 $/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	e8 05 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	89 c2                	mov    %eax,%edx$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	0f 95 c2             	setne  %dl$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	8b 4c 95 d8          	mov    -0x28(%ebp,%edx,4),%ecx$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	89 44 95 d8          	mov    %eax,-0x28(%ebp,%edx,4)$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	8b 00                	mov    (%eax),%eax$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	85 c0                	test   %eax,%eax$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	75 dc                	jne    f0101147 <mem_init+0x152>$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	89 10                	mov    %edx,(%eax)$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	89 1d 40 c2 32 f0    	mov    %ebx,0xf032c240$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	eb 61                	jmp    f01011e8 <mem_init+0x1f3>$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	89 d8                	mov    %ebx,%eax$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	2b 05 f0 ce 32 f0    	sub    0xf032cef0,%eax$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	89 c2                	mov    %eax,%edx$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	75 4a                	jne    f01011e6 <mem_init+0x1f1>$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	89 c2                	mov    %eax,%edx$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	3b 15 e8 ce 32 f0    	cmp    0xf032cee8,%edx$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	72 20                	jb     f01011c9 <mem_init+0x1d4>$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	f0 $/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	00 $/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	e8 77 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	00 $/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	00 $/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	e8 18 42 00 00       	call   f01053fe <memset>$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	85 db                	test   %ebx,%ebx$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	75 9b                	jne    f0101187 <mem_init+0x192>$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	e8 de f7 ff ff       	call   f01009d4 <boot_alloc>$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	8b 35 40 c2 32 f0    	mov    0xf032c240,%esi$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	8b 0d f0 ce 32 f0    	mov    0xf032cef0,%ecx$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	a1 e8 ce 32 f0       	mov    0xf032cee8,%eax$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	89 f2                	mov    %esi,%edx$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	89 75 c0             	mov    %esi,-0x40(%ebp)$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	e9 c5 01 00 00       	jmp    f01013ec <mem_init+0x3f7>$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	76 24                	jbe    f010124f <mem_init+0x25a>$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	c7 44 24 0c 5f 66 10 	movl   $0xf010665f,0xc(%esp)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	f0 $/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	f0 $/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	c7 44 24 04 fc 02 00 	movl   $0x2fc,0x4(%esp)$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	00 $/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	e8 f1 ed ff ff       	call   f0100040 <_panic>$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	3b 55 bc             	cmp    -0x44(%ebp),%edx$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	72 24                	jb     f0101278 <mem_init+0x283>$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	c7 44 24 0c 6b 66 10 	movl   $0xf010666b,0xc(%esp)$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	f0 $/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	f0 $/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	00 $/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	e8 c8 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	89 d0                	mov    %edx,%eax$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	a8 07                	test   $0x7,%al$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	74 24                	je     f01012a5 <mem_init+0x2b0>$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	c7 44 24 0c bc 69 10 	movl   $0xf01069bc,0xc(%esp)$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	f0 $/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	f0 $/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	00 $/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	e8 9b ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	75 24                	jne    f01012d1 <mem_init+0x2dc>$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	c7 44 24 0c 7f 66 10 	movl   $0xf010667f,0xc(%esp)$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	f0 $/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	f0 $/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	00 $/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	e8 6f ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	75 24                	jne    f01012fc <mem_init+0x307>$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	c7 44 24 0c 90 66 10 	movl   $0xf0106690,0xc(%esp)$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	f0 $/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	f0 $/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	c7 44 24 04 02 03 00 	movl   $0x302,0x4(%esp)$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	00 $/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	e8 44 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	75 24                	jne    f0101327 <mem_init+0x332>$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	c7 44 24 0c f0 69 10 	movl   $0xf01069f0,0xc(%esp)$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	f0 $/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	f0 $/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	00 $/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	e8 19 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	75 24                	jne    f0101352 <mem_init+0x35d>$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	c7 44 24 0c a9 66 10 	movl   $0xf01066a9,0xc(%esp)$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	f0 $/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	f0 $/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	c7 44 24 04 04 03 00 	movl   $0x304,0x4(%esp)$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	00 $/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	e8 ee ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	76 59                	jbe    f01013b2 <mem_init+0x3bd>$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	89 c6                	mov    %eax,%esi$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	39 75 c8             	cmp    %esi,-0x38(%ebp)$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	77 20                	ja     f0101383 <mem_init+0x38e>$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	f0 $/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	00 $/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	e8 bd ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	39 7d c4             	cmp    %edi,-0x3c(%ebp)$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	76 24                	jbe    f01013b2 <mem_init+0x3bd>$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	c7 44 24 0c 14 6a 10 	movl   $0xf0106a14,0xc(%esp)$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	f0 $/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	f0 $/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	c7 44 24 04 05 03 00 	movl   $0x305,0x4(%esp)$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	00 $/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	e8 8e ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	75 24                	jne    f01013dd <mem_init+0x3e8>$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	c7 44 24 0c c3 66 10 	movl   $0xf01066c3,0xc(%esp)$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	f0 $/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	f0 $/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	c7 44 24 04 07 03 00 	movl   $0x307,0x4(%esp)$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	00 $/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	e8 63 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	77 03                	ja     f01013e7 <mem_init+0x3f2>$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	43                   	inc    %ebx$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	eb 03                	jmp    f01013ea <mem_init+0x3f5>$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	ff 45 d4             	incl   -0x2c(%ebp)$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	8b 12                	mov    (%edx),%edx$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	85 d2                	test   %edx,%edx$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	0f 85 33 fe ff ff    	jne    f0101227 <mem_init+0x232>$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	85 db                	test   %ebx,%ebx$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	7f 24                	jg     f010141f <mem_init+0x42a>$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	c7 44 24 0c e0 66 10 	movl   $0xf01066e0,0xc(%esp)$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	f0 $/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	f0 $/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	00 $/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	e8 21 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	7f 24                	jg     f0101449 <mem_init+0x454>$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	c7 44 24 0c f2 66 10 	movl   $0xf01066f2,0xc(%esp)$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	f0 $/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	f0 $/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	00 $/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	e8 f7 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	85 c9                	test   %ecx,%ecx$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	75 21                	jne    f010146e <mem_init+0x479>$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	c7 44 24 08 03 67 10 	movl   $0xf0106703,0x8(%esp)$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	f0 $/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	c7 44 24 04 21 03 00 	movl   $0x321,0x4(%esp)$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	00 $/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	e8 d7 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	43                   	inc    %ebx$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	8b 36                	mov    (%esi),%esi$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	eb 05                	jmp    f0101473 <mem_init+0x47e>$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	85 f6                	test   %esi,%esi$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	75 f2                	jne    f0101469 <mem_init+0x474>$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	e8 9c f7 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	89 c6                	mov    %eax,%esi$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	85 c0                	test   %eax,%eax$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	75 24                	jne    f01014ad <mem_init+0x4b8>$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	c7 44 24 0c 1e 67 10 	movl   $0xf010671e,0xc(%esp)$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	f0 $/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	f0 $/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	c7 44 24 04 29 03 00 	movl   $0x329,0x4(%esp)$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	00 $/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	e8 93 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	e8 66 f7 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	89 c7                	mov    %eax,%edi$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	85 c0                	test   %eax,%eax$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	75 24                	jne    f01014e3 <mem_init+0x4ee>$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	c7 44 24 0c 34 67 10 	movl   $0xf0106734,0xc(%esp)$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	f0 $/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	f0 $/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	c7 44 24 04 2a 03 00 	movl   $0x32a,0x4(%esp)$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	00 $/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	e8 5d eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	e8 30 f7 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	85 c0                	test   %eax,%eax$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	75 24                	jne    f010151a <mem_init+0x525>$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	c7 44 24 0c 4a 67 10 	movl   $0xf010674a,0xc(%esp)$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	f0 $/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	f0 $/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	00 $/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	e8 26 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	39 fe                	cmp    %edi,%esi$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	75 24                	jne    f0101542 <mem_init+0x54d>$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	c7 44 24 0c 60 67 10 	movl   $0xf0106760,0xc(%esp)$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	f0 $/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	f0 $/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	c7 44 24 04 2e 03 00 	movl   $0x32e,0x4(%esp)$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	00 $/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	e8 fe ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	74 05                	je     f010154c <mem_init+0x557>$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	75 24                	jne    f0101570 <mem_init+0x57b>$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	c7 44 24 0c 5c 6a 10 	movl   $0xf0106a5c,0xc(%esp)$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	f0 $/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	f0 $/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	c7 44 24 04 2f 03 00 	movl   $0x32f,0x4(%esp)$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	00 $/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	e8 d0 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	8b 15 f0 ce 32 f0    	mov    0xf032cef0,%edx$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	a1 e8 ce 32 f0       	mov    0xf032cee8,%eax$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	89 f1                	mov    %esi,%ecx$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	29 d1                	sub    %edx,%ecx$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	39 c1                	cmp    %eax,%ecx$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	72 24                	jb     f01015b0 <mem_init+0x5bb>$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	c7 44 24 0c 72 67 10 	movl   $0xf0106772,0xc(%esp)$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	f0 $/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	f0 $/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	00 $/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	e8 90 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	89 f9                	mov    %edi,%ecx$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	29 d1                	sub    %edx,%ecx$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	39 c8                	cmp    %ecx,%eax$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	77 24                	ja     f01015e2 <mem_init+0x5ed>$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	c7 44 24 0c 8f 67 10 	movl   $0xf010678f,0xc(%esp)$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	f0 $/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	f0 $/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	c7 44 24 04 31 03 00 	movl   $0x331,0x4(%esp)$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	00 $/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	e8 5e ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	29 d1                	sub    %edx,%ecx$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	89 ca                	mov    %ecx,%edx$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	39 d0                	cmp    %edx,%eax$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	77 24                	ja     f0101617 <mem_init+0x622>$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	c7 44 24 0c ac 67 10 	movl   $0xf01067ac,0xc(%esp)$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	f0 $/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	f0 $/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	c7 44 24 04 32 03 00 	movl   $0x332,0x4(%esp)$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	00 $/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	e8 29 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	a1 40 c2 32 f0       	mov    0xf032c240,%eax$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	c7 05 40 c2 32 f0 00 	movl   $0x0,0xf032c240$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	00 00 00 $/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	e8 ea f5 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	85 c0                	test   %eax,%eax$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	74 24                	je     f010165d <mem_init+0x668>$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	c7 44 24 0c c9 67 10 	movl   $0xf01067c9,0xc(%esp)$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	f0 $/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	f0 $/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	c7 44 24 04 39 03 00 	movl   $0x339,0x4(%esp)$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	00 $/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101658	obj/kern/kernel.asm	/^f0101658:	e8 e3 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	e8 50 f6 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	e8 48 f6 ff ff       	call   f0100cb5 <page_free>$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	e8 3d f6 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	e8 9b f5 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	89 c6                	mov    %eax,%esi$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	85 c0                	test   %eax,%eax$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	75 24                	jne    f01016ae <mem_init+0x6b9>$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	c7 44 24 0c 1e 67 10 	movl   $0xf010671e,0xc(%esp)$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	f0 $/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	f0 $/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	c7 44 24 04 40 03 00 	movl   $0x340,0x4(%esp)$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	00 $/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	e8 92 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	e8 65 f5 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	89 c7                	mov    %eax,%edi$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	85 c0                	test   %eax,%eax$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	75 24                	jne    f01016e4 <mem_init+0x6ef>$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	c7 44 24 0c 34 67 10 	movl   $0xf0106734,0xc(%esp)$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	f0 $/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	f0 $/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	c7 44 24 04 41 03 00 	movl   $0x341,0x4(%esp)$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	00 $/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	e8 5c e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	e8 2f f5 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	85 c0                	test   %eax,%eax$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	75 24                	jne    f010171b <mem_init+0x726>$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	c7 44 24 0c 4a 67 10 	movl   $0xf010674a,0xc(%esp)$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	f0 $/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	f0 $/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	c7 44 24 04 42 03 00 	movl   $0x342,0x4(%esp)$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	00 $/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	e8 25 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	39 fe                	cmp    %edi,%esi$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	75 24                	jne    f0101743 <mem_init+0x74e>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	c7 44 24 0c 60 67 10 	movl   $0xf0106760,0xc(%esp)$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	f0 $/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	f0 $/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	c7 44 24 04 44 03 00 	movl   $0x344,0x4(%esp)$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	00 $/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	e8 fd e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	74 05                	je     f010174d <mem_init+0x758>$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	75 24                	jne    f0101771 <mem_init+0x77c>$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	c7 44 24 0c 5c 6a 10 	movl   $0xf0106a5c,0xc(%esp)$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	f0 $/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	f0 $/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	c7 44 24 04 45 03 00 	movl   $0x345,0x4(%esp)$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	00 $/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	e8 cf e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	e8 a2 f4 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	85 c0                	test   %eax,%eax$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	74 24                	je     f01017a5 <mem_init+0x7b0>$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	c7 44 24 0c c9 67 10 	movl   $0xf01067c9,0xc(%esp)$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	f0 $/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	f0 $/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	c7 44 24 04 46 03 00 	movl   $0x346,0x4(%esp)$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	00 $/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	e8 9b e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017a5	obj/kern/kernel.asm	/^f01017a5:	89 f0                	mov    %esi,%eax$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	e8 51 f3 ff ff       	call   f0100afd <page2kva>$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	00 $/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	00 $/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	e8 3a 3c 00 00       	call   f01053fe <memset>$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	e8 e9 f4 ff ff       	call   f0100cb5 <page_free>$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	e8 47 f4 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	85 c0                	test   %eax,%eax$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	75 24                	jne    f0101800 <mem_init+0x80b>$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	c7 44 24 0c d8 67 10 	movl   $0xf01067d8,0xc(%esp)$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	f0 $/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	f0 $/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	c7 44 24 04 4b 03 00 	movl   $0x34b,0x4(%esp)$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	00 $/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	e8 40 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	39 c6                	cmp    %eax,%esi$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	74 24                	je     f0101828 <mem_init+0x833>$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	c7 44 24 0c f6 67 10 	movl   $0xf01067f6,0xc(%esp)$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	f0 $/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	f0 $/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	c7 44 24 04 4c 03 00 	movl   $0x34c,0x4(%esp)$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	00 $/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	e8 18 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	89 f0                	mov    %esi,%eax$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	e8 ce f2 ff ff       	call   f0100afd <page2kva>$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	80 3c 10 00          	cmpb   $0x0,(%eax,%edx,1)$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	74 24                	je     f010185e <mem_init+0x869>$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	c7 44 24 0c 06 68 10 	movl   $0xf0106806,0xc(%esp)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	f0 $/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	f0 $/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	00 $/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	e8 e2 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	42                   	inc    %edx$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	75 cd                	jne    f0101834 <mem_init+0x83f>$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	89 15 40 c2 32 f0    	mov    %edx,0xf032c240$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	e8 3d f4 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	e8 35 f4 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	e8 2a f4 ff ff       	call   f0100cb5 <page_free>$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	a1 40 c2 32 f0       	mov    0xf032c240,%eax$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	eb 03                	jmp    f0101895 <mem_init+0x8a0>$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	4b                   	dec    %ebx$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	8b 00                	mov    (%eax),%eax$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	85 c0                	test   %eax,%eax$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	75 f9                	jne    f0101892 <mem_init+0x89d>$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	85 db                	test   %ebx,%ebx$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	74 24                	je     f01018c1 <mem_init+0x8cc>$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	c7 44 24 0c 10 68 10 	movl   $0xf0106810,0xc(%esp)$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	f0 $/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	f0 $/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	c7 44 24 04 5c 03 00 	movl   $0x35c,0x4(%esp)$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	00 $/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	e8 7f e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	c7 04 24 7c 6a 10 f0 	movl   $0xf0106a7c,(%esp)$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	e8 51 19 00 00       	call   f010321e <cprintf>$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	e8 46 f3 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	89 c3                	mov    %eax,%ebx$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	85 c0                	test   %eax,%eax$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	75 24                	jne    f0101903 <mem_init+0x90e>$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	c7 44 24 0c 1e 67 10 	movl   $0xf010671e,0xc(%esp)$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	f0 $/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	f0 $/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	00 $/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	e8 3d e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	e8 10 f3 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	89 c6                	mov    %eax,%esi$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	85 c0                	test   %eax,%eax$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	75 24                	jne    f0101939 <mem_init+0x944>$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	c7 44 24 0c 34 67 10 	movl   $0xf0106734,0xc(%esp)$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	f0 $/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	f0 $/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	00 $/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	e8 07 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	e8 da f2 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	89 c7                	mov    %eax,%edi$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	85 c0                	test   %eax,%eax$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	75 24                	jne    f010196f <mem_init+0x97a>$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	c7 44 24 0c 4a 67 10 	movl   $0xf010674a,0xc(%esp)$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	f0 $/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	f0 $/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	00 $/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	e8 d1 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	39 f3                	cmp    %esi,%ebx$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	75 24                	jne    f0101997 <mem_init+0x9a2>$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	c7 44 24 0c 60 67 10 	movl   $0xf0106760,0xc(%esp)$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	f0 $/;"	l
f010197b	obj/kern/kernel.asm	/^f010197b:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	f0 $/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	c7 44 24 04 c9 03 00 	movl   $0x3c9,0x4(%esp)$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	00 $/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	e8 a9 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	39 c6                	cmp    %eax,%esi$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	74 04                	je     f010199f <mem_init+0x9aa>$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	75 24                	jne    f01019c3 <mem_init+0x9ce>$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	c7 44 24 0c 5c 6a 10 	movl   $0xf0106a5c,0xc(%esp)$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	f0 $/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	f0 $/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	00 $/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	e8 7d e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	8b 15 40 c2 32 f0    	mov    0xf032c240,%edx$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	c7 05 40 c2 32 f0 00 	movl   $0x0,0xf032c240$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	00 00 00 $/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	e8 3d f2 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	85 c0                	test   %eax,%eax$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	74 24                	je     f0101a0a <mem_init+0xa15>$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	c7 44 24 0c c9 67 10 	movl   $0xf01067c9,0xc(%esp)$/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	f0 $/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	f0 $/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	00 $/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	e8 36 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	00 $/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	e8 fa f3 ff ff       	call   f0100e20 <page_lookup>$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	85 c0                	test   %eax,%eax$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	74 24                	je     f0101a4e <mem_init+0xa59>$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	c7 44 24 0c 9c 6a 10 	movl   $0xf0106a9c,0xc(%esp)$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	f0 $/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	f0 $/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	00 $/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	e8 f2 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	00 $/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	00 $/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	e8 bc f4 ff ff       	call   f0100f2b <page_insert>$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	85 c0                	test   %eax,%eax$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	78 24                	js     f0101a97 <mem_init+0xaa2>$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	c7 44 24 0c d4 6a 10 	movl   $0xf0106ad4,0xc(%esp)$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	f0 $/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	f0 $/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	00 $/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	e8 a9 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	e8 16 f2 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	00 $/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	00 $/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	e8 6b f4 ff ff       	call   f0100f2b <page_insert>$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	85 c0                	test   %eax,%eax$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	74 24                	je     f0101ae8 <mem_init+0xaf3>$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	c7 44 24 0c 04 6b 10 	movl   $0xf0106b04,0xc(%esp)$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	f0 $/;"	l
f0101acc	obj/kern/kernel.asm	/^f0101acc:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	f0 $/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	00 $/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	e8 58 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	8b 0d ec ce 32 f0    	mov    0xf032ceec,%ecx$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101af1	obj/kern/kernel.asm	/^f0101af1:	a1 f0 ce 32 f0       	mov    0xf032cef0,%eax$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	89 d8                	mov    %ebx,%eax$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	39 c2                	cmp    %eax,%edx$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	74 24                	je     f0101b34 <mem_init+0xb3f>$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	c7 44 24 0c 34 6b 10 	movl   $0xf0106b34,0xc(%esp)$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	f0 $/;"	l
f0101b18	obj/kern/kernel.asm	/^f0101b18:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	f0 $/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	c7 44 24 04 dc 03 00 	movl   $0x3dc,0x4(%esp)$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	00 $/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	e8 0c e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	e8 42 ef ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	89 f2                	mov    %esi,%edx$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	74 24                	je     f0101b74 <mem_init+0xb7f>$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	c7 44 24 0c 5c 6b 10 	movl   $0xf0106b5c,0xc(%esp)$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	f0 $/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	f0 $/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	00 $/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	e8 cc e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101b79	obj/kern/kernel.asm	/^f0101b79:	74 24                	je     f0101b9f <mem_init+0xbaa>$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	c7 44 24 0c 1b 68 10 	movl   $0xf010681b,0xc(%esp)$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	f0 $/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	f0 $/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	00 $/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	e8 a1 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	74 24                	je     f0101bca <mem_init+0xbd5>$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	c7 44 24 0c 2c 68 10 	movl   $0xf010682c,0xc(%esp)$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	f0 $/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	f0 $/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	00 $/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	e8 76 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	00 $/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	00 $/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	e8 42 f3 ff ff       	call   f0100f2b <page_insert>$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	85 c0                	test   %eax,%eax$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	74 24                	je     f0101c11 <mem_init+0xc1c>$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	c7 44 24 0c 8c 6b 10 	movl   $0xf0106b8c,0xc(%esp)$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	f0 $/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	f0 $/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	00 $/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	e8 2f e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	e8 63 ee ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	89 fa                	mov    %edi,%edx$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	74 24                	je     f0101c56 <mem_init+0xc61>$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	c7 44 24 0c c8 6b 10 	movl   $0xf0106bc8,0xc(%esp)$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	f0 $/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	f0 $/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	00 $/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	e8 ea e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	74 24                	je     f0101c81 <mem_init+0xc8c>$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	c7 44 24 0c 3d 68 10 	movl   $0xf010683d,0xc(%esp)$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	f0 $/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	f0 $/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	00 $/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	e8 bf e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	e8 92 ef ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	85 c0                	test   %eax,%eax$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	74 24                	je     f0101cb5 <mem_init+0xcc0>$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	c7 44 24 0c c9 67 10 	movl   $0xf01067c9,0xc(%esp)$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	f0 $/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	f0 $/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	00 $/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	e8 8b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	00 $/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	00 $/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	e8 55 f2 ff ff       	call   f0100f2b <page_insert>$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	85 c0                	test   %eax,%eax$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	74 24                	je     f0101cfe <mem_init+0xd09>$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	c7 44 24 0c 8c 6b 10 	movl   $0xf0106b8c,0xc(%esp)$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	f0 $/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	f0 $/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	00 $/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	e8 42 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	e8 76 ed ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	89 fa                	mov    %edi,%edx$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	74 24                	je     f0101d43 <mem_init+0xd4e>$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	c7 44 24 0c c8 6b 10 	movl   $0xf0106bc8,0xc(%esp)$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	f0 $/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101d2e	obj/kern/kernel.asm	/^f0101d2e:	f0 $/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	00 $/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	e8 fd e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	74 24                	je     f0101d6e <mem_init+0xd79>$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	c7 44 24 0c 3d 68 10 	movl   $0xf010683d,0xc(%esp)$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	f0 $/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	f0 $/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	c7 44 24 04 ec 03 00 	movl   $0x3ec,0x4(%esp)$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	00 $/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	e8 d2 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	e8 a5 ee ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	85 c0                	test   %eax,%eax$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	74 24                	je     f0101da2 <mem_init+0xdad>$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	c7 44 24 0c c9 67 10 	movl   $0xf01067c9,0xc(%esp)$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	f0 $/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	f0 $/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	00 $/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	e8 9e e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	8b 0d ec ce 32 f0    	mov    0xf032ceec,%ecx$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	8b 09                	mov    (%ecx),%ecx$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	ba f3 03 00 00       	mov    $0x3f3,%edx$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	b8 0c 66 10 f0       	mov    $0xf010660c,%eax$/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	e8 89 ec ff ff       	call   f0100a4b <_kaddr>$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	00 $/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	00 $/;"	l
f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	e8 61 ef ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	83 c2 04             	add    $0x4,%edx$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	74 24                	je     f0101e0e <mem_init+0xe19>$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	c7 44 24 0c f8 6b 10 	movl   $0xf0106bf8,0xc(%esp)$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	f0 $/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	f0 $/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	00 $/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	e8 32 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	00 $/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	00 $/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	e8 fc f0 ff ff       	call   f0100f2b <page_insert>$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	85 c0                	test   %eax,%eax$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	74 24                	je     f0101e57 <mem_init+0xe62>$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	c7 44 24 0c 38 6c 10 	movl   $0xf0106c38,0xc(%esp)$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	f0 $/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	f0 $/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	00 $/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	e8 e9 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	8b 0d ec ce 32 f0    	mov    0xf032ceec,%ecx$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	89 c8                	mov    %ecx,%eax$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	e8 17 ec ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	89 fa                	mov    %edi,%edx$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	74 24                	je     f0101ea2 <mem_init+0xead>$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	c7 44 24 0c c8 6b 10 	movl   $0xf0106bc8,0xc(%esp)$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	f0 $/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	f0 $/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	00 $/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	e8 9e e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	74 24                	je     f0101ecd <mem_init+0xed8>$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	c7 44 24 0c 3d 68 10 	movl   $0xf010683d,0xc(%esp)$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	f0 $/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	f0 $/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	c7 44 24 04 f9 03 00 	movl   $0x3f9,0x4(%esp)$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	00 $/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	e8 73 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	00 $/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101edc	obj/kern/kernel.asm	/^f0101edc:	00 $/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	e8 59 ee ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	75 24                	jne    f0101f11 <mem_init+0xf1c>$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	c7 44 24 0c 78 6c 10 	movl   $0xf0106c78,0xc(%esp)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	f0 $/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	f0 $/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	00 $/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	e8 2f e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	75 24                	jne    f0101f3f <mem_init+0xf4a>$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	c7 44 24 0c 4e 68 10 	movl   $0xf010684e,0xc(%esp)$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	f0 $/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	f0 $/;"	l
f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	c7 44 24 04 fb 03 00 	movl   $0x3fb,0x4(%esp)$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	00 $/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	e8 01 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	00 $/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	00 $/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101f53	obj/kern/kernel.asm	/^f0101f53:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	e8 d0 ef ff ff       	call   f0100f2b <page_insert>$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	85 c0                	test   %eax,%eax$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	74 24                	je     f0101f83 <mem_init+0xf8e>$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	c7 44 24 0c 8c 6b 10 	movl   $0xf0106b8c,0xc(%esp)$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	f0 $/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	f0 $/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	c7 44 24 04 fe 03 00 	movl   $0x3fe,0x4(%esp)$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	00 $/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	e8 bd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	00 $/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	00 $/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f9b	obj/kern/kernel.asm	/^f0101f9b:	e8 a1 ed ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	75 24                	jne    f0101fc9 <mem_init+0xfd4>$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	c7 44 24 0c ac 6c 10 	movl   $0xf0106cac,0xc(%esp)$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	f0 $/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	f0 $/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	00 $/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0101fc4	obj/kern/kernel.asm	/^f0101fc4:	e8 77 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	00 $/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	00 $/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0101fde	obj/kern/kernel.asm	/^f0101fde:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	e8 5b ed ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	74 24                	je     f010200f <mem_init+0x101a>$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	c7 44 24 0c e0 6c 10 	movl   $0xf0106ce0,0xc(%esp)$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	f0 $/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	f0 $/;"	l
f0101ffb	obj/kern/kernel.asm	/^f0101ffb:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f0102002	obj/kern/kernel.asm	/^f0102002:	00 $/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	e8 31 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	00 $/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	00 $/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	e8 fb ee ff ff       	call   f0100f2b <page_insert>$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	85 c0                	test   %eax,%eax$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	78 24                	js     f0102058 <mem_init+0x1063>$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	c7 44 24 0c 18 6d 10 	movl   $0xf0106d18,0xc(%esp)$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	f0 $/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	f0 $/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	00 $/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	e8 e8 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102058	obj/kern/kernel.asm	/^f0102058:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010205f	obj/kern/kernel.asm	/^f010205f:	00 $/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	00 $/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	e8 b2 ee ff ff       	call   f0100f2b <page_insert>$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	85 c0                	test   %eax,%eax$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	74 24                	je     f01020a1 <mem_init+0x10ac>$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	c7 44 24 0c 50 6d 10 	movl   $0xf0106d50,0xc(%esp)$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	f0 $/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	f0 $/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	00 $/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	e8 9f df ff ff       	call   f0100040 <_panic>$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	00 $/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	00 $/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	e8 83 ec ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	74 24                	je     f01020e7 <mem_init+0x10f2>$/;"	l
f01020c3	obj/kern/kernel.asm	/^f01020c3:	c7 44 24 0c e0 6c 10 	movl   $0xf0106ce0,0xc(%esp)$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	f0 $/;"	l
f01020cb	obj/kern/kernel.asm	/^f01020cb:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	f0 $/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	00 $/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	e8 59 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	e8 8a e9 ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	89 f0                	mov    %esi,%eax$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	2b 05 f0 ce 32 f0    	sub    0xf032cef0,%eax$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	74 24                	je     f0102133 <mem_init+0x113e>$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	c7 44 24 0c 8c 6d 10 	movl   $0xf0106d8c,0xc(%esp)$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	f0 $/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	f0 $/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	00 $/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	e8 0d df ff ff       	call   f0100040 <_panic>$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	e8 43 e9 ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	74 24                	je     f0102169 <mem_init+0x1174>$/;"	l
f0102145	obj/kern/kernel.asm	/^f0102145:	c7 44 24 0c b8 6d 10 	movl   $0xf0106db8,0xc(%esp)$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	f0 $/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	f0 $/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	c7 44 24 04 0b 04 00 	movl   $0x40b,0x4(%esp)$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	00 $/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	e8 d7 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	74 24                	je     f0102194 <mem_init+0x119f>$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	c7 44 24 0c 64 68 10 	movl   $0xf0106864,0xc(%esp)$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	f0 $/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	f0 $/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	00 $/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	e8 ac de ff ff       	call   f0100040 <_panic>$/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102199	obj/kern/kernel.asm	/^f0102199:	74 24                	je     f01021bf <mem_init+0x11ca>$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	c7 44 24 0c 75 68 10 	movl   $0xf0106875,0xc(%esp)$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	f0 $/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	f0 $/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	00 $/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	e8 81 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	e8 54 ea ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	85 c0                	test   %eax,%eax$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	74 04                	je     f01021d3 <mem_init+0x11de>$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	39 c7                	cmp    %eax,%edi$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	74 24                	je     f01021f7 <mem_init+0x1202>$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	c7 44 24 0c e8 6d 10 	movl   $0xf0106de8,0xc(%esp)$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	f0 $/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	f0 $/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	00 $/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	e8 49 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	00 $/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	e8 d6 ec ff ff       	call   f0100ee2 <page_remove>$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	8b 15 ec ce 32 f0    	mov    0xf032ceec,%edx$/;"	l
f0102212	obj/kern/kernel.asm	/^f0102212:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	e8 61 e8 ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	74 24                	je     f010224b <mem_init+0x1256>$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	c7 44 24 0c 0c 6e 10 	movl   $0xf0106e0c,0xc(%esp)$/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	f0 $/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102236	obj/kern/kernel.asm	/^f0102236:	f0 $/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	00 $/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	e8 f5 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	e8 2b e8 ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	89 f2                	mov    %esi,%edx$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	39 d0                	cmp    %edx,%eax$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	74 24                	je     f010228e <mem_init+0x1299>$/;"	l
f010226a	obj/kern/kernel.asm	/^f010226a:	c7 44 24 0c b8 6d 10 	movl   $0xf0106db8,0xc(%esp)$/;"	l
f0102271	obj/kern/kernel.asm	/^f0102271:	f0 $/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	f0 $/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	c7 44 24 04 16 04 00 	movl   $0x416,0x4(%esp)$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	00 $/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	e8 b2 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	74 24                	je     f01022b9 <mem_init+0x12c4>$/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	c7 44 24 0c 1b 68 10 	movl   $0xf010681b,0xc(%esp)$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	f0 $/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	f0 $/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	c7 44 24 04 17 04 00 	movl   $0x417,0x4(%esp)$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	00 $/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	e8 87 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	74 24                	je     f01022e4 <mem_init+0x12ef>$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	c7 44 24 0c 75 68 10 	movl   $0xf0106875,0xc(%esp)$/;"	l
f01022c7	obj/kern/kernel.asm	/^f01022c7:	f0 $/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	f0 $/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	c7 44 24 04 18 04 00 	movl   $0x418,0x4(%esp)$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	00 $/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	e8 5c dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	00 $/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	00 $/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	e8 28 ec ff ff       	call   f0100f2b <page_insert>$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	85 c0                	test   %eax,%eax$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	74 24                	je     f010232b <mem_init+0x1336>$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	c7 44 24 0c 30 6e 10 	movl   $0xf0106e30,0xc(%esp)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	f0 $/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	f0 $/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	00 $/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102326	obj/kern/kernel.asm	/^f0102326:	e8 15 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	75 24                	jne    f0102356 <mem_init+0x1361>$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	c7 44 24 0c 86 68 10 	movl   $0xf0106886,0xc(%esp)$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	f0 $/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	f0 $/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	c7 44 24 04 1c 04 00 	movl   $0x41c,0x4(%esp)$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	00 $/;"	l
f010234a	obj/kern/kernel.asm	/^f010234a:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	e8 ea dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	74 24                	je     f010237f <mem_init+0x138a>$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	c7 44 24 0c 92 68 10 	movl   $0xf0106892,0xc(%esp)$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	f0 $/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	f0 $/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	c7 44 24 04 1d 04 00 	movl   $0x41d,0x4(%esp)$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	00 $/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	e8 c1 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	00 $/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	e8 4e eb ff ff       	call   f0100ee2 <page_remove>$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	e8 dd e6 ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	74 24                	je     f01023cf <mem_init+0x13da>$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	c7 44 24 0c 0c 6e 10 	movl   $0xf0106e0c,0xc(%esp)$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	f0 $/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba:	f0 $/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	00 $/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	e8 71 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	e8 a7 e6 ff ff       	call   f0100a83 <check_va2pa>$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01023df	obj/kern/kernel.asm	/^f01023df:	74 24                	je     f0102405 <mem_init+0x1410>$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	c7 44 24 0c 68 6e 10 	movl   $0xf0106e68,0xc(%esp)$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	f0 $/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	f0 $/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	c7 44 24 04 22 04 00 	movl   $0x422,0x4(%esp)$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	00 $/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	e8 3b dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	74 24                	je     f0102430 <mem_init+0x143b>$/;"	l
f010240c	obj/kern/kernel.asm	/^f010240c:	c7 44 24 0c a7 68 10 	movl   $0xf01068a7,0xc(%esp)$/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	f0 $/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	f0 $/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	c7 44 24 04 23 04 00 	movl   $0x423,0x4(%esp)$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	00 $/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	e8 10 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	74 24                	je     f010245b <mem_init+0x1466>$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	c7 44 24 0c 75 68 10 	movl   $0xf0106875,0xc(%esp)$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	f0 $/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	f0 $/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	c7 44 24 04 24 04 00 	movl   $0x424,0x4(%esp)$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	00 $/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	e8 e5 db ff ff       	call   f0100040 <_panic>$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	e8 b8 e7 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	85 c0                	test   %eax,%eax$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	74 04                	je     f010246f <mem_init+0x147a>$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	39 c6                	cmp    %eax,%esi$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	74 24                	je     f0102493 <mem_init+0x149e>$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	c7 44 24 0c 90 6e 10 	movl   $0xf0106e90,0xc(%esp)$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	f0 $/;"	l
f0102477	obj/kern/kernel.asm	/^f0102477:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	f0 $/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	c7 44 24 04 27 04 00 	movl   $0x427,0x4(%esp)$/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	00 $/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	e8 ad db ff ff       	call   f0100040 <_panic>$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	e8 80 e7 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	85 c0                	test   %eax,%eax$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	74 24                	je     f01024c7 <mem_init+0x14d2>$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	c7 44 24 0c c9 67 10 	movl   $0xf01067c9,0xc(%esp)$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	f0 $/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	f0 $/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	00 $/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	e8 79 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	8b 08                	mov    (%eax),%ecx$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	89 da                	mov    %ebx,%edx$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	2b 15 f0 ce 32 f0    	sub    0xf032cef0,%edx$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	39 d1                	cmp    %edx,%ecx$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	74 24                	je     f010250a <mem_init+0x1515>$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	c7 44 24 0c 34 6b 10 	movl   $0xf0106b34,0xc(%esp)$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	f0 $/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	f0 $/;"	l
f01024f6	obj/kern/kernel.asm	/^f01024f6:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	00 $/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	e8 36 db ff ff       	call   f0100040 <_panic>$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	74 24                	je     f010253b <mem_init+0x1546>$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	c7 44 24 0c 2c 68 10 	movl   $0xf010682c,0xc(%esp)$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	f0 $/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	f0 $/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	00 $/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	e8 05 db ff ff       	call   f0100040 <_panic>$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	e8 6c e7 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	00 $/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	00 $/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f010255e	obj/kern/kernel.asm	/^f010255e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	e8 db e7 ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0102566	obj/kern/kernel.asm	/^f0102566:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	8b 15 ec ce 32 f0    	mov    0xf032ceec,%edx$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	ba 36 04 00 00       	mov    $0x436,%edx$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	b8 0c 66 10 f0       	mov    $0xf010660c,%eax$/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	e8 be e4 ff ff       	call   f0100a4b <_kaddr>$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	74 24                	je     f01025b9 <mem_init+0x15c4>$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	c7 44 24 0c b8 68 10 	movl   $0xf01068b8,0xc(%esp)$/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	f0 $/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	f0 $/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	c7 44 24 04 37 04 00 	movl   $0x437,0x4(%esp)$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	00 $/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	e8 87 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	89 d8                	mov    %ebx,%eax$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	e8 2d e5 ff ff       	call   f0100afd <page2kva>$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	00 $/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	00 $/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025e3	obj/kern/kernel.asm	/^f01025e3:	e8 16 2e 00 00       	call   f01053fe <memset>$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01025eb	obj/kern/kernel.asm	/^f01025eb:	e8 c5 e6 ff ff       	call   f0100cb5 <page_free>$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	00 $/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	00 $/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	e8 34 e7 ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	89 d8                	mov    %ebx,%eax$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	e8 e9 e4 ff ff       	call   f0100afd <page2kva>$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	f6 04 90 01          	testb  $0x1,(%eax,%edx,4)$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	74 24                	je     f0102646 <mem_init+0x1651>$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	c7 44 24 0c d0 68 10 	movl   $0xf01068d0,0xc(%esp)$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	f0 $/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	f0 $/;"	l
f0102632	obj/kern/kernel.asm	/^f0102632:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	00 $/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	c7 04 24 0c 66 10 f0 	movl   $0xf010660c,(%esp)$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	e8 fa d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	42                   	inc    %edx$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	75 cd                	jne    f010261c <mem_init+0x1627>$/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	a3 40 c2 32 f0       	mov    %eax,0xf032c240$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	e8 45 e6 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	e8 3d e6 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0102678	obj/kern/kernel.asm	/^f0102678:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	e8 35 e6 ff ff       	call   f0100cb5 <page_free>$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	00 $/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	e8 3f e9 ff ff       	call   f0100fd3 <mmio_map_region>$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694 <user_mem_check>:$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	55                   	push   %ebp$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	89 e5                	mov    %esp,%ebp$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	57                   	push   %edi$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	56                   	push   %esi$/;"	l
f0102699	obj/kern/kernel.asm	/^f0102699:	53                   	push   %ebx$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	c7 44 24 10 a8 02 00 	movl   $0x2a8,0x10(%esp)$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	00 $/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	c7 44 24 0c 68 6f 10 	movl   $0xf0106f68,0xc(%esp)$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	f0 $/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	c7 44 24 08 0c 66 10 	movl   $0xf010660c,0x8(%esp)$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	f0 $/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	c7 04 24 b4 6e 10 f0 	movl   $0xf0106eb4,(%esp)$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	e8 53 0b 00 00       	call   f010321e <cprintf>$/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01026ce	obj/kern/kernel.asm	/^f01026ce:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	c7 44 24 14 ac 02 00 	movl   $0x2ac,0x14(%esp)$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	00 $/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	c7 44 24 10 68 6f 10 	movl   $0xf0106f68,0x10(%esp)$/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	f0 $/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	c7 44 24 0c 0c 66 10 	movl   $0xf010660c,0xc(%esp)$/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	f0 $/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	c7 04 24 e8 6e 10 f0 	movl   $0xf0106ee8,(%esp)$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	e8 09 0b 00 00       	call   f010321e <cprintf>$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0102718	obj/kern/kernel.asm	/^f0102718:	83 cf 01             	or     $0x1,%edi$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	eb 52                	jmp    f010276f <user_mem_check+0xdb>$/;"	l
f010271d	obj/kern/kernel.asm	/^f010271d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	00 $/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102729	obj/kern/kernel.asm	/^f0102729:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	e8 0d e6 ff ff       	call   f0100d41 <pgdir_walk>$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	77 0c                	ja     f0102748 <user_mem_check+0xb4>$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	85 c0                	test   %eax,%eax$/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	74 08                	je     f0102748 <user_mem_check+0xb4>$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	8b 00                	mov    (%eax),%eax$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	21 f8                	and    %edi,%eax$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	39 c7                	cmp    %eax,%edi$/;"	l
f0102746	obj/kern/kernel.asm	/^f0102746:	74 21                	je     f0102769 <user_mem_check+0xd5>$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	39 5d 0c             	cmp    %ebx,0xc(%ebp)$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	76 0f                	jbe    f010275c <user_mem_check+0xc8>$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	a3 44 c2 32 f0       	mov    %eax,0xf032c244$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010275a	obj/kern/kernel.asm	/^f010275a:	eb 1d                	jmp    f0102779 <user_mem_check+0xe5>$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	89 1d 44 c2 32 f0    	mov    %ebx,0xf032c244$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	eb 10                	jmp    f0102779 <user_mem_check+0xe5>$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	72 a9                	jb     f010271d <user_mem_check+0x89>$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010277c	obj/kern/kernel.asm	/^f010277c:	5b                   	pop    %ebx$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	5e                   	pop    %esi$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	5f                   	pop    %edi$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	5d                   	pop    %ebp$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	c3                   	ret    $/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781 <user_mem_assert>:$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	55                   	push   %ebp$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	89 e5                	mov    %esp,%ebp$/;"	l
f0102784	obj/kern/kernel.asm	/^f0102784:	53                   	push   %ebx$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	e8 e9 fe ff ff       	call   f0102694 <user_mem_check>$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	85 c0                	test   %eax,%eax$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	79 24                	jns    f01027d3 <user_mem_assert+0x52>$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	a1 44 c2 32 f0       	mov    0xf032c244,%eax$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	c7 04 24 28 6f 10 f0 	movl   $0xf0106f28,(%esp)$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	e8 53 0a 00 00       	call   f010321e <cprintf>$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	e8 30 07 00 00       	call   f0102f03 <env_destroy>$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	83 c4 14             	add    $0x14,%esp$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	5b                   	pop    %ebx$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	5d                   	pop    %ebp$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	c3                   	ret    $/;"	l
f01027d9	obj/kern/kernel.asm	/^f01027d9:	00 00                	add    %al,(%eax)$/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc <region_alloc>:$/;"	l
f01027dc	obj/kern/kernel.asm	/^f01027dc:	55                   	push   %ebp$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	57                   	push   %edi$/;"	l
f01027e0	obj/kern/kernel.asm	/^f01027e0:	56                   	push   %esi$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	53                   	push   %ebx$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	89 c6                	mov    %eax,%esi$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	89 d3                	mov    %edx,%ebx$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	01 ca                	add    %ecx,%edx$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	89 d7                	mov    %edx,%edi$/;"	l
f01027f3	obj/kern/kernel.asm	/^f01027f3:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	eb 6d                	jmp    f0102868 <region_alloc+0x8c>$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	e8 18 e4 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	85 c0                	test   %eax,%eax$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	75 1c                	jne    f0102827 <region_alloc+0x4b>$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	c7 44 24 08 77 6f 10 	movl   $0xf0106f77,0x8(%esp)$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	f0 $/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	c7 44 24 04 2d 01 00 	movl   $0x12d,0x4(%esp)$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	00 $/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	e8 19 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f010282e	obj/kern/kernel.asm	/^f010282e:	00 $/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	e8 e9 e6 ff ff       	call   f0100f2b <page_insert>$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	85 c0                	test   %eax,%eax$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	74 1c                	je     f0102862 <region_alloc+0x86>$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	c7 44 24 08 ec 6f 10 	movl   $0xf0106fec,0x8(%esp)$/;"	l
f010284d	obj/kern/kernel.asm	/^f010284d:	f0 $/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	00 $/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	e8 de d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102868	obj/kern/kernel.asm	/^f0102868:	39 fb                	cmp    %edi,%ebx$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	76 8f                	jbe    f01027fb <region_alloc+0x1f>$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	5b                   	pop    %ebx$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	5e                   	pop    %esi$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	5f                   	pop    %edi$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	5d                   	pop    %ebp$/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	c3                   	ret    $/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874 <envid2env>:$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	55                   	push   %ebp$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	89 e5                	mov    %esp,%ebp$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	57                   	push   %edi$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	56                   	push   %esi$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	53                   	push   %ebx$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	8a 55 10             	mov    0x10(%ebp),%dl$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	85 c0                	test   %eax,%eax$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	75 24                	jne    f01028ae <envid2env+0x3a>$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	e8 9d 31 00 00       	call   f0105a2c <cpunum>$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	29 c2                	sub    %eax,%edx$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	89 06                	mov    %eax,(%esi)$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	e9 84 00 00 00       	jmp    f0102932 <envid2env+0xbe>$/;"	l
f01028ae	obj/kern/kernel.asm	/^f01028ae:	89 c3                	mov    %eax,%ebx$/;"	l
f01028b0	obj/kern/kernel.asm	/^f01028b0:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	8d 0c 9d 00 00 00 00 	lea    0x0(,%ebx,4),%ecx$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	29 cb                	sub    %ecx,%ebx$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	03 1d 48 c2 32 f0    	add    0xf032c248,%ebx$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	74 05                	je     f01028d3 <envid2env+0x5f>$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	74 0d                	je     f01028e0 <envid2env+0x6c>$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	eb 52                	jmp    f0102932 <envid2env+0xbe>$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	84 d2                	test   %dl,%dl$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	74 47                	je     f010292b <envid2env+0xb7>$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	e8 43 31 00 00       	call   f0105a2c <cpunum>$/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01028f0	obj/kern/kernel.asm	/^f01028f0:	29 c2                	sub    %eax,%edx$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	39 1c 85 28 d0 33 f0 	cmp    %ebx,-0xfcc2fd8(,%eax,4)$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	74 2d                	je     f010292b <envid2env+0xb7>$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	e8 26 31 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	29 c2                	sub    %eax,%edx$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	74 0d                	je     f010292b <envid2env+0xb7>$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	eb 07                	jmp    f0102932 <envid2env+0xbe>$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	89 1e                	mov    %ebx,(%esi)$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	5b                   	pop    %ebx$/;"	l
f0102936	obj/kern/kernel.asm	/^f0102936:	5e                   	pop    %esi$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	5f                   	pop    %edi$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	5d                   	pop    %ebp$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	c3                   	ret    $/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a <env_init_percpu>:$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	55                   	push   %ebp$/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	89 e5                	mov    %esp,%ebp$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	b8 00 93 12 f0       	mov    $0xf0129300,%eax$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	8e e8                	mov    %eax,%gs$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	8e e0                	mov    %eax,%fs$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	b0 10                	mov    $0x10,%al$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	8e c0                	mov    %eax,%es$/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	8e d8                	mov    %eax,%ds$/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	8e d0                	mov    %eax,%ss$/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	ea 5d 29 10 f0 08 00 	ljmp   $0x8,$0xf010295d$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	b0 00                	mov    $0x0,%al$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	0f 00 d0             	lldt   %ax$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	5d                   	pop    %ebp$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	c3                   	ret    $/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964 <env_init>:$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	55                   	push   %ebp$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	89 e5                	mov    %esp,%ebp$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	00 $/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	00 $/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	a1 48 c2 32 f0       	mov    0xf032c248,%eax$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	e8 77 2a 00 00       	call   f01053fe <memset>$/;"	l
f0102987	obj/kern/kernel.asm	/^f0102987:	8b 0d 48 c2 32 f0    	mov    0xf032c248,%ecx$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	89 0d 4c c2 32 f0    	mov    %ecx,0xf032c24c$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	8d 41 7c             	lea    0x7c(%ecx),%eax$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	89 40 c8             	mov    %eax,-0x38(%eax)$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	42                   	inc    %edx$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	75 f1                	jne    f010299b <env_init+0x37>$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	c7 81 c8 ef 01 00 00 	movl   $0x0,0x1efc8(%ecx)$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	00 00 00 $/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	e8 81 ff ff ff       	call   f010293a <env_init_percpu>$/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	c9                   	leave  $/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	c3                   	ret    $/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb <env_alloc>:$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	55                   	push   %ebp$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	56                   	push   %esi$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	53                   	push   %ebx$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	8b 1d 4c c2 32 f0    	mov    0xf032c24c,%ebx$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	85 db                	test   %ebx,%ebx$/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	0f 84 b6 01 00 00    	je     f0102b87 <env_alloc+0x1cc>$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01029d8	obj/kern/kernel.asm	/^f01029d8:	e8 42 e2 ff ff       	call   f0100c1f <page_alloc>$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	89 c6                	mov    %eax,%esi$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	85 c0                	test   %eax,%eax$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	0f 84 a7 01 00 00    	je     f0102b8e <env_alloc+0x1d3>$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	2b 05 f0 ce 32 f0    	sub    0xf032cef0,%eax$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01029f3	obj/kern/kernel.asm	/^f01029f3:	89 c2                	mov    %eax,%edx$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	3b 15 e8 ce 32 f0    	cmp    0xf032cee8,%edx$/;"	l
f01029fe	obj/kern/kernel.asm	/^f01029fe:	72 20                	jb     f0102a20 <env_alloc+0x65>$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	f0 $/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	00 $/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	e8 20 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	00 $/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	8b 15 ec ce 32 f0    	mov    0xf032ceec,%edx$/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	e8 06 2a 00 00       	call   f0105448 <memmove>$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	66 ff 46 04          	incw   0x4(%esi)$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	77 20                	ja     f0102a70 <env_alloc+0xb5>$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	f0 $/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	c7 44 24 04 c9 00 00 	movl   $0xc9,0x4(%esp)$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	00 $/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	e8 d0 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	83 ca 05             	or     $0x5,%edx$/;"	l
f0102a79	obj/kern/kernel.asm	/^f0102a79:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	89 c1                	mov    %eax,%ecx$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	81 e1 00 fc ff ff    	and    $0xfffffc00,%ecx$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	7f 05                	jg     f0102a96 <env_alloc+0xdb>$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	89 d8                	mov    %ebx,%eax$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	2b 05 48 c2 32 f0    	sub    0xf032c248,%eax$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	89 c6                	mov    %eax,%esi$/;"	l
f0102aa3	obj/kern/kernel.asm	/^f0102aa3:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	89 c2                	mov    %eax,%edx$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0102aab	obj/kern/kernel.asm	/^f0102aab:	01 f2                	add    %esi,%edx$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	01 c2                	add    %eax,%edx$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	89 d6                	mov    %edx,%esi$/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	c1 e6 0f             	shl    $0xf,%esi$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	01 f2                	add    %esi,%edx$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	01 d0                	add    %edx,%eax$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	f7 d8                	neg    %eax$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	09 c1                	or     %eax,%ecx$/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	89 4b 48             	mov    %ecx,0x48(%ebx)$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	00 $/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	00 $/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	e8 09 29 00 00       	call   f01053fe <memset>$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0102b1f	obj/kern/kernel.asm	/^f0102b1f:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	a3 4c c2 32 f0       	mov    %eax,0xf032c24c$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	e8 f8 2e 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102b3b	obj/kern/kernel.asm	/^f0102b3b:	29 c2                	sub    %eax,%edx$/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	83 3c 85 28 d0 33 f0 	cmpl   $0x0,-0xfcc2fd8(,%eax,4)$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	00 $/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	74 1d                	je     f0102b67 <env_alloc+0x1ac>$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	e8 dd 2e 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	29 c2                	sub    %eax,%edx$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0102b62	obj/kern/kernel.asm	/^f0102b62:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	eb 05                	jmp    f0102b6c <env_alloc+0x1b1>$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	c7 04 24 9c 6f 10 f0 	movl   $0xf0106f9c,(%esp)$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	e8 9e 06 00 00       	call   f010321e <cprintf>$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	eb 0c                	jmp    f0102b93 <env_alloc+0x1d8>$/;"	l
f0102b87	obj/kern/kernel.asm	/^f0102b87:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	eb 05                	jmp    f0102b93 <env_alloc+0x1d8>$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	5b                   	pop    %ebx$/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	5e                   	pop    %esi$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	5d                   	pop    %ebp$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	c3                   	ret    $/;"	l
f0102b9a	obj/kern/kernel.asm	/^f0102b9a <env_create>:$/;"	l
f0102b9a	obj/kern/kernel.asm	/^f0102b9a:	55                   	push   %ebp$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	57                   	push   %edi$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	56                   	push   %esi$/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	53                   	push   %ebx$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	00 $/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	e8 02 fe ff ff       	call   f01029bb <env_alloc>$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	85 c0                	test   %eax,%eax$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	74 1c                	je     f0102bd9 <env_create+0x3f>$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	c7 44 24 08 b1 6f 10 	movl   $0xf0106fb1,0x8(%esp)$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	f0 $/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	c7 44 24 04 95 01 00 	movl   $0x195,0x4(%esp)$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	00 $/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	e8 67 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	89 42 50             	mov    %eax,0x50(%edx)$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	81 3e 7f 45 4c 46    	cmpl   $0x464c457f,(%esi)$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	74 1c                	je     f0102c0c <env_create+0x72>$/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	c7 44 24 08 10 70 10 	movl   $0xf0107010,0x8(%esp)$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	f0 $/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	c7 44 24 04 6e 01 00 	movl   $0x16e,0x4(%esp)$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	00 $/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	e8 34 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	89 f3                	mov    %esi,%ebx$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	03 5e 1c             	add    0x1c(%esi),%ebx$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	0f b7 7e 2c          	movzwl 0x2c(%esi),%edi$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	c1 e7 05             	shl    $0x5,%edi$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	01 df                	add    %ebx,%edi$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	e9 95 00 00 00       	jmp    f0102cb4 <env_create+0x11a>$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0102c22	obj/kern/kernel.asm	/^f0102c22:	0f 85 89 00 00 00    	jne    f0102cb1 <env_create+0x117>$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c31	obj/kern/kernel.asm	/^f0102c31:	e8 a6 fb ff ff       	call   f01027dc <region_alloc>$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	0f 20 d8             	mov    %cr3,%eax$/;"	l
f0102c39	obj/kern/kernel.asm	/^f0102c39:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	77 20                	ja     f0102c69 <env_create+0xcf>$/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	f0 $/;"	l
f0102c55	obj/kern/kernel.asm	/^f0102c55:	c7 44 24 04 77 01 00 	movl   $0x177,0x4(%esp)$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	00 $/;"	l
f0102c5d	obj/kern/kernel.asm	/^f0102c5d:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	e8 d7 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	89 f0                	mov    %esi,%eax$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102c81	obj/kern/kernel.asm	/^f0102c81:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0102c84	obj/kern/kernel.asm	/^f0102c84:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	e8 bc 27 00 00       	call   f0105448 <memmove>$/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	29 c2                	sub    %eax,%edx$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	00 $/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0102ca3	obj/kern/kernel.asm	/^f0102ca3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	e8 53 27 00 00       	call   f01053fe <memset>$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0102cb4	obj/kern/kernel.asm	/^f0102cb4:	39 df                	cmp    %ebx,%edi$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	0f 87 63 ff ff ff    	ja     f0102c1f <env_create+0x85>$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cd2	obj/kern/kernel.asm	/^f0102cd2:	e8 05 fb ff ff       	call   f01027dc <region_alloc>$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	5b                   	pop    %ebx$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	5e                   	pop    %esi$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	5f                   	pop    %edi$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	5d                   	pop    %ebp$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	c3                   	ret    $/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf <env_free>:$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	55                   	push   %ebp$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	57                   	push   %edi$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	56                   	push   %esi$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	53                   	push   %ebx$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	e8 3c 2d 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	29 c2                	sub    %eax,%edx$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102cfc	obj/kern/kernel.asm	/^f0102cfc:	39 3c 85 28 d0 33 f0 	cmp    %edi,-0xfcc2fd8(,%eax,4)$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	75 34                	jne    f0102d39 <env_free+0x5a>$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0102d0a	obj/kern/kernel.asm	/^f0102d0a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	77 20                	ja     f0102d31 <env_free+0x52>$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102d15	obj/kern/kernel.asm	/^f0102d15:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	f0 $/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	c7 44 24 04 a9 01 00 	movl   $0x1a9,0x4(%esp)$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	00 $/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	e8 0f d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	e8 eb 2c 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	29 c2                	sub    %eax,%edx$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	83 3c 85 28 d0 33 f0 	cmpl   $0x0,-0xfcc2fd8(,%eax,4)$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	00 $/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	74 1d                	je     f0102d74 <env_free+0x95>$/;"	l
f0102d57	obj/kern/kernel.asm	/^f0102d57:	e8 d0 2c 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	29 c2                	sub    %eax,%edx$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	eb 05                	jmp    f0102d79 <env_free+0x9a>$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	c7 04 24 c7 6f 10 f0 	movl   $0xf0106fc7,(%esp)$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	e8 91 04 00 00       	call   f010321e <cprintf>$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0102dac	obj/kern/kernel.asm	/^f0102dac:	0f 84 b6 00 00 00    	je     f0102e68 <env_free+0x189>$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	89 f0                	mov    %esi,%eax$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	3b 05 e8 ce 32 f0    	cmp    0xf032cee8,%eax$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	72 20                	jb     f0102de8 <env_free+0x109>$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	f0 $/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	c7 44 24 04 b8 01 00 	movl   $0x1b8,0x4(%esp)$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	00 $/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	e8 58 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	01 $/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	74 17                	je     f0102e17 <env_free+0x138>$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	89 d8                	mov    %ebx,%eax$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	e8 cb e0 ff ff       	call   f0100ee2 <page_remove>$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	43                   	inc    %ebx$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	75 d6                	jne    f0102df6 <env_free+0x117>$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	3b 05 e8 ce 32 f0    	cmp    0xf032cee8,%eax$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	72 1c                	jb     f0102e54 <env_free+0x175>$/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	c7 44 24 08 1c 69 10 	movl   $0xf010691c,0x8(%esp)$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	f0 $/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	00 $/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	e8 ec d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	03 05 f0 ce 32 f0    	add    0xf032cef0,%eax$/;"	l
f0102e60	obj/kern/kernel.asm	/^f0102e60:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	e8 b9 de ff ff       	call   f0100d21 <page_decref>$/;"	l
f0102e68	obj/kern/kernel.asm	/^f0102e68:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	0f 85 1c ff ff ff    	jne    f0102d94 <env_free+0xb5>$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	77 20                	ja     f0102ea2 <env_free+0x1c3>$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	f0 $/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	c7 44 24 04 c6 01 00 	movl   $0x1c6,0x4(%esp)$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	00 $/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	e8 9e d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	3b 05 e8 ce 32 f0    	cmp    0xf032cee8,%eax$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	72 1c                	jb     f0102ed5 <env_free+0x1f6>$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	c7 44 24 08 1c 69 10 	movl   $0xf010691c,0x8(%esp)$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	f0 $/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	00 $/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	c7 04 24 18 66 10 f0 	movl   $0xf0106618,(%esp)$/;"	l
f0102ed0	obj/kern/kernel.asm	/^f0102ed0:	e8 6b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	03 05 f0 ce 32 f0    	add    0xf032cef0,%eax$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	e8 3b de ff ff       	call   f0100d21 <page_decref>$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	a1 4c c2 32 f0       	mov    0xf032c24c,%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	89 3d 4c c2 32 f0    	mov    %edi,0xf032c24c$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	5b                   	pop    %ebx$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	5e                   	pop    %esi$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	5f                   	pop    %edi$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	5d                   	pop    %ebp$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	c3                   	ret    $/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03 <env_destroy>:$/;"	l
f0102f03	obj/kern/kernel.asm	/^f0102f03:	55                   	push   %ebp$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	53                   	push   %ebx$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	75 23                	jne    f0102f36 <env_destroy+0x33>$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	e8 14 2b 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	29 c2                	sub    %eax,%edx$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102f24	obj/kern/kernel.asm	/^f0102f24:	39 1c 85 28 d0 33 f0 	cmp    %ebx,-0xfcc2fd8(,%eax,4)$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	74 09                	je     f0102f36 <env_destroy+0x33>$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0102f34	obj/kern/kernel.asm	/^f0102f34:	eb 39                	jmp    f0102f6f <env_destroy+0x6c>$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	e8 a1 fd ff ff       	call   f0102cdf <env_free>$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	e8 e9 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	29 c2                	sub    %eax,%edx$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	39 1c 85 28 d0 33 f0 	cmp    %ebx,-0xfcc2fd8(,%eax,4)$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	75 17                	jne    f0102f6f <env_destroy+0x6c>$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	e8 cf 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	c7 80 28 d0 33 f0 00 	movl   $0x0,-0xfcc2fd8(%eax)$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	00 00 00 $/;"	l
f0102f6a	obj/kern/kernel.asm	/^f0102f6a:	e8 73 10 00 00       	call   f0103fe2 <sched_yield>$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	5b                   	pop    %ebx$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	5d                   	pop    %ebp$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	c3                   	ret    $/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75 <env_pop_tf>:$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	55                   	push   %ebp$/;"	l
f0102f76	obj/kern/kernel.asm	/^f0102f76:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	53                   	push   %ebx$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	e8 ab 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	29 c2                	sub    %eax,%edx$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	8b 1c 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%ebx$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	e8 93 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102f99	obj/kern/kernel.asm	/^f0102f99:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	61                   	popa   $/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	07                   	pop    %es$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	1f                   	pop    %ds$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	cf                   	iret   $/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	c7 44 24 08 dd 6f 10 	movl   $0xf0106fdd,0x8(%esp)$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	f0 $/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	c7 44 24 04 fc 01 00 	movl   $0x1fc,0x4(%esp)$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	00 $/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	e8 7e d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2 <env_run>:$/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	55                   	push   %ebp$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	89 e5                	mov    %esp,%ebp$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0102fc8	obj/kern/kernel.asm	/^f0102fc8:	e8 5f 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	29 c2                	sub    %eax,%edx$/;"	l
f0102fd6	obj/kern/kernel.asm	/^f0102fd6:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	83 3c 85 28 d0 33 f0 	cmpl   $0x0,-0xfcc2fd8(,%eax,4)$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	00 $/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	74 33                	je     f0103016 <env_run+0x54>$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	e8 44 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	29 c2                	sub    %eax,%edx$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	75 15                	jne    f0103016 <env_run+0x54>$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	e8 26 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	8b 80 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%eax$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	e8 11 2a 00 00       	call   f0105a2c <cpunum>$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	29 c2                	sub    %eax,%edx$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103027	obj/kern/kernel.asm	/^f0103027:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	89 14 85 28 d0 33 f0 	mov    %edx,-0xfcc2fd8(,%eax,4)$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	e8 f6 29 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	29 c2                	sub    %eax,%edx$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	e8 d7 29 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010305c	obj/kern/kernel.asm	/^f010305c:	29 c2                	sub    %eax,%edx$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	ff 40 58             	incl   0x58(%eax)$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	e8 bc 29 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	29 c2                	sub    %eax,%edx$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	77 20                	ja     f01030ad <env_run+0xeb>$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	f0 $/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	c7 44 24 04 21 02 00 	movl   $0x221,0x4(%esp)$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	00 $/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	c7 04 24 91 6f 10 f0 	movl   $0xf0106f91,(%esp)$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	e8 93 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	e8 72 29 00 00       	call   f0105a2c <cpunum>$/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	29 c2                	sub    %eax,%edx$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01030d0	obj/kern/kernel.asm	/^f01030d0:	e8 a0 fe ff ff       	call   f0102f75 <env_pop_tf>$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	00 00                	add    %al,(%eax)$/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8 <mc146818_read>:$/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8:	55                   	push   %ebp$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	ee                   	out    %al,(%dx)$/;"	l
f01030e4	obj/kern/kernel.asm	/^f01030e4:	b2 71                	mov    $0x71,%dl$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	ec                   	in     (%dx),%al$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	5d                   	pop    %ebp$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	c3                   	ret    $/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec <mc146818_write>:$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	55                   	push   %ebp$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01030f4	obj/kern/kernel.asm	/^f01030f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	ee                   	out    %al,(%dx)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	b2 71                	mov    $0x71,%dl$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	ee                   	out    %al,(%dx)$/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	5d                   	pop    %ebp$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	c3                   	ret    $/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100 <irq_setmask_8259A>:$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	55                   	push   %ebp$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	89 e5                	mov    %esp,%ebp$/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	56                   	push   %esi$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	53                   	push   %ebx$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	89 c6                	mov    %eax,%esi$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	66 a3 88 93 12 f0    	mov    %ax,0xf0129388$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	80 3d 50 c2 32 f0 00 	cmpb   $0x0,0xf032c250$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	74 51                	je     f010316d <irq_setmask_8259A+0x6d>$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121:	ee                   	out    %al,(%dx)$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	89 f0                	mov    %esi,%eax$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	ee                   	out    %al,(%dx)$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	c7 04 24 2f 70 10 f0 	movl   $0xf010702f,(%esp)$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	e8 e7 00 00 00       	call   f010321e <cprintf>$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	0f b7 f6             	movzwl %si,%esi$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	f7 d6                	not    %esi$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	89 f0                	mov    %esi,%eax$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	88 d9                	mov    %bl,%cl$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	d3 f8                	sar    %cl,%eax$/;"	d
f0103147	obj/kern/kernel.asm	/^f0103147:	a8 01                	test   $0x1,%al$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	74 10                	je     f010315b <irq_setmask_8259A+0x5b>$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	c7 04 24 41 8f 10 f0 	movl   $0xf0108f41,(%esp)$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	e8 c3 00 00 00       	call   f010321e <cprintf>$/;"	l
f010315b	obj/kern/kernel.asm	/^f010315b:	43                   	inc    %ebx$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	75 e0                	jne    f0103141 <irq_setmask_8259A+0x41>$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	c7 04 24 cc 61 10 f0 	movl   $0xf01061cc,(%esp)$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	e8 b1 00 00 00       	call   f010321e <cprintf>$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	5b                   	pop    %ebx$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	5e                   	pop    %esi$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	5d                   	pop    %ebp$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	c3                   	ret    $/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174 <pic_init>:$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	55                   	push   %ebp$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	89 e5                	mov    %esp,%ebp$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	c6 05 50 c2 32 f0 01 	movb   $0x1,0xf032c250$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	b0 ff                	mov    $0xff,%al$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	ee                   	out    %al,(%dx)$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	ee                   	out    %al,(%dx)$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	b2 20                	mov    $0x20,%dl$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	b0 11                	mov    $0x11,%al$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	ee                   	out    %al,(%dx)$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	b2 21                	mov    $0x21,%dl$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	b0 20                	mov    $0x20,%al$/;"	l
f0103195	obj/kern/kernel.asm	/^f0103195:	ee                   	out    %al,(%dx)$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	b0 04                	mov    $0x4,%al$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	ee                   	out    %al,(%dx)$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	b0 03                	mov    $0x3,%al$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	ee                   	out    %al,(%dx)$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	b2 a0                	mov    $0xa0,%dl$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	b0 11                	mov    $0x11,%al$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	ee                   	out    %al,(%dx)$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	b0 28                	mov    $0x28,%al$/;"	l
f01031a5	obj/kern/kernel.asm	/^f01031a5:	ee                   	out    %al,(%dx)$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	b0 02                	mov    $0x2,%al$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	ee                   	out    %al,(%dx)$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	b0 01                	mov    $0x1,%al$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	ee                   	out    %al,(%dx)$/;"	l
f01031ac	obj/kern/kernel.asm	/^f01031ac:	b2 20                	mov    $0x20,%dl$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	b0 68                	mov    $0x68,%al$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	ee                   	out    %al,(%dx)$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	b0 0a                	mov    $0xa,%al$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	ee                   	out    %al,(%dx)$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	b0 68                	mov    $0x68,%al$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	ee                   	out    %al,(%dx)$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	b0 0a                	mov    $0xa,%al$/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	ee                   	out    %al,(%dx)$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	66 a1 88 93 12 f0    	mov    0xf0129388,%ax$/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	74 0b                	je     f01031d3 <pic_init+0x5f>$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	e8 2d ff ff ff       	call   f0103100 <irq_setmask_8259A>$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	c9                   	leave  $/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	c3                   	ret    $/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	00 00                	add    %al,(%eax)$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8 <putch>:$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	55                   	push   %ebp$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	e8 62 d5 ff ff       	call   f010074b <cputchar>$/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	c9                   	leave  $/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	c3                   	ret    $/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb <vcprintf>:$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	55                   	push   %ebp$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01031f1	obj/kern/kernel.asm	/^f01031f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	c7 04 24 d8 31 10 f0 	movl   $0xf01031d8,(%esp)$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	e8 85 1b 00 00       	call   f0104d9e <vprintfmt>$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	c9                   	leave  $/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	c3                   	ret    $/;"	l
f010321e	obj/kern/kernel.asm	/^f010321e <cprintf>:$/;"	l
f010321e	obj/kern/kernel.asm	/^f010321e:	55                   	push   %ebp$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	e8 b5 ff ff ff       	call   f01031eb <vcprintf>$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	c9                   	leave  $/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	c3                   	ret    $/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238 <trap_init_percpu>:$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	55                   	push   %ebp$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	89 e5                	mov    %esp,%ebp$/;"	l
f010323b	obj/kern/kernel.asm	/^f010323b:	c7 05 64 ca 32 f0 00 	movl   $0xf0000000,0xf032ca64$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	00 00 f0 $/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	66 c7 05 68 ca 32 f0 	movw   $0x10,0xf032ca68$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	10 00 $/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	66 c7 05 48 93 12 f0 	movw   $0x67,0xf0129348$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	67 00 $/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	b8 60 ca 32 f0       	mov    $0xf032ca60,%eax$/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	66 a3 4a 93 12 f0    	mov    %ax,0xf012934a$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	89 c2                	mov    %eax,%edx$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	88 15 4c 93 12 f0    	mov    %dl,0xf012934c$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	c6 05 4e 93 12 f0 40 	movb   $0x40,0xf012934e$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103277	obj/kern/kernel.asm	/^f0103277:	a2 4f 93 12 f0       	mov    %al,0xf012934f$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	c6 05 4d 93 12 f0 89 	movb   $0x89,0xf012934d$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	0f 00 d8             	ltr    %ax$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	b8 8c 93 12 f0       	mov    $0xf012938c,%eax$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	5d                   	pop    %ebp$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	c3                   	ret    $/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295 <trap_init>:$/;"	l
f0103295	obj/kern/kernel.asm	/^f0103295:	55                   	push   %ebp$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	89 e5                	mov    %esp,%ebp$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	b8 a4 3d 10 f0       	mov    $0xf0103da4,%eax$/;"	l
f010329d	obj/kern/kernel.asm	/^f010329d:	66 a3 60 c2 32 f0    	mov    %ax,0xf032c260$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	66 c7 05 62 c2 32 f0 	movw   $0x8,0xf032c262$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	08 00 $/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	c6 05 64 c2 32 f0 00 	movb   $0x0,0xf032c264$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	c6 05 65 c2 32 f0 ee 	movb   $0xee,0xf032c265$/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	66 a3 66 c2 32 f0    	mov    %ax,0xf032c266$/;"	l
f01032c3	obj/kern/kernel.asm	/^f01032c3:	b8 ae 3d 10 f0       	mov    $0xf0103dae,%eax$/;"	l
f01032c8	obj/kern/kernel.asm	/^f01032c8:	66 a3 68 c2 32 f0    	mov    %ax,0xf032c268$/;"	l
f01032ce	obj/kern/kernel.asm	/^f01032ce:	66 c7 05 6a c2 32 f0 	movw   $0x8,0xf032c26a$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	08 00 $/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	c6 05 6c c2 32 f0 00 	movb   $0x0,0xf032c26c$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	c6 05 6d c2 32 f0 ee 	movb   $0xee,0xf032c26d$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	66 a3 6e c2 32 f0    	mov    %ax,0xf032c26e$/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	b8 b8 3d 10 f0       	mov    $0xf0103db8,%eax$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	66 a3 70 c2 32 f0    	mov    %ax,0xf032c270$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	66 c7 05 72 c2 32 f0 	movw   $0x8,0xf032c272$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	08 00 $/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	c6 05 74 c2 32 f0 00 	movb   $0x0,0xf032c274$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	c6 05 75 c2 32 f0 8e 	movb   $0x8e,0xf032c275$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	66 a3 76 c2 32 f0    	mov    %ax,0xf032c276$/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	b8 c2 3d 10 f0       	mov    $0xf0103dc2,%eax$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	66 a3 78 c2 32 f0    	mov    %ax,0xf032c278$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	66 c7 05 7a c2 32 f0 	movw   $0x8,0xf032c27a$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	08 00 $/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	c6 05 7c c2 32 f0 00 	movb   $0x0,0xf032c27c$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	c6 05 7d c2 32 f0 ee 	movb   $0xee,0xf032c27d$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	66 a3 7e c2 32 f0    	mov    %ax,0xf032c27e$/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	b8 cc 3d 10 f0       	mov    $0xf0103dcc,%eax$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	66 a3 80 c2 32 f0    	mov    %ax,0xf032c280$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	66 c7 05 82 c2 32 f0 	movw   $0x8,0xf032c282$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	08 00 $/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	c6 05 84 c2 32 f0 00 	movb   $0x0,0xf032c284$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	c6 05 85 c2 32 f0 ee 	movb   $0xee,0xf032c285$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	66 a3 86 c2 32 f0    	mov    %ax,0xf032c286$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	b8 d6 3d 10 f0       	mov    $0xf0103dd6,%eax$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	66 a3 88 c2 32 f0    	mov    %ax,0xf032c288$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	66 c7 05 8a c2 32 f0 	movw   $0x8,0xf032c28a$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	08 00 $/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	c6 05 8c c2 32 f0 00 	movb   $0x0,0xf032c28c$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	c6 05 8d c2 32 f0 8e 	movb   $0x8e,0xf032c28d$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	66 a3 8e c2 32 f0    	mov    %ax,0xf032c28e$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	b8 e0 3d 10 f0       	mov    $0xf0103de0,%eax$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	66 a3 90 c2 32 f0    	mov    %ax,0xf032c290$/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	66 c7 05 92 c2 32 f0 	movw   $0x8,0xf032c292$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	08 00 $/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	c6 05 94 c2 32 f0 00 	movb   $0x0,0xf032c294$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	c6 05 95 c2 32 f0 8e 	movb   $0x8e,0xf032c295$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01033bf	obj/kern/kernel.asm	/^f01033bf:	66 a3 96 c2 32 f0    	mov    %ax,0xf032c296$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	b8 ea 3d 10 f0       	mov    $0xf0103dea,%eax$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	66 a3 98 c2 32 f0    	mov    %ax,0xf032c298$/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	66 c7 05 9a c2 32 f0 	movw   $0x8,0xf032c29a$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	08 00 $/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	c6 05 9c c2 32 f0 00 	movb   $0x0,0xf032c29c$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	c6 05 9d c2 32 f0 ee 	movb   $0xee,0xf032c29d$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	66 a3 9e c2 32 f0    	mov    %ax,0xf032c29e$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	b8 f4 3d 10 f0       	mov    $0xf0103df4,%eax$/;"	l
f01033f5	obj/kern/kernel.asm	/^f01033f5:	66 a3 a0 c2 32 f0    	mov    %ax,0xf032c2a0$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	66 c7 05 a2 c2 32 f0 	movw   $0x8,0xf032c2a2$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	08 00 $/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	c6 05 a4 c2 32 f0 00 	movb   $0x0,0xf032c2a4$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	c6 05 a5 c2 32 f0 8e 	movb   $0x8e,0xf032c2a5$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	66 a3 a6 c2 32 f0    	mov    %ax,0xf032c2a6$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	b8 fc 3d 10 f0       	mov    $0xf0103dfc,%eax$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	66 a3 b0 c2 32 f0    	mov    %ax,0xf032c2b0$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	66 c7 05 b2 c2 32 f0 	movw   $0x8,0xf032c2b2$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	08 00 $/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	c6 05 b4 c2 32 f0 00 	movb   $0x0,0xf032c2b4$/;"	l
f0103436	obj/kern/kernel.asm	/^f0103436:	c6 05 b5 c2 32 f0 8e 	movb   $0x8e,0xf032c2b5$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	66 a3 b6 c2 32 f0    	mov    %ax,0xf032c2b6$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	b8 04 3e 10 f0       	mov    $0xf0103e04,%eax$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	66 a3 b8 c2 32 f0    	mov    %ax,0xf032c2b8$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	66 c7 05 ba c2 32 f0 	movw   $0x8,0xf032c2ba$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	08 00 $/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	c6 05 bc c2 32 f0 00 	movb   $0x0,0xf032c2bc$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	c6 05 bd c2 32 f0 ee 	movb   $0xee,0xf032c2bd$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010346b	obj/kern/kernel.asm	/^f010346b:	66 a3 be c2 32 f0    	mov    %ax,0xf032c2be$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	b8 0c 3e 10 f0       	mov    $0xf0103e0c,%eax$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	66 a3 c0 c2 32 f0    	mov    %ax,0xf032c2c0$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	66 c7 05 c2 c2 32 f0 	movw   $0x8,0xf032c2c2$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	08 00 $/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	c6 05 c4 c2 32 f0 00 	movb   $0x0,0xf032c2c4$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	c6 05 c5 c2 32 f0 8e 	movb   $0x8e,0xf032c2c5$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	66 a3 c6 c2 32 f0    	mov    %ax,0xf032c2c6$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	b8 14 3e 10 f0       	mov    $0xf0103e14,%eax$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	66 a3 c8 c2 32 f0    	mov    %ax,0xf032c2c8$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	66 c7 05 ca c2 32 f0 	movw   $0x8,0xf032c2ca$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	08 00 $/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	c6 05 cc c2 32 f0 00 	movb   $0x0,0xf032c2cc$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	c6 05 cd c2 32 f0 8e 	movb   $0x8e,0xf032c2cd$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	66 a3 ce c2 32 f0    	mov    %ax,0xf032c2ce$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	b8 1c 3e 10 f0       	mov    $0xf0103e1c,%eax$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	66 a3 d0 c2 32 f0    	mov    %ax,0xf032c2d0$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	66 c7 05 d2 c2 32 f0 	movw   $0x8,0xf032c2d2$/;"	l
f01034d9	obj/kern/kernel.asm	/^f01034d9:	08 00 $/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	c6 05 d4 c2 32 f0 00 	movb   $0x0,0xf032c2d4$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	c6 05 d5 c2 32 f0 8e 	movb   $0x8e,0xf032c2d5$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	66 a3 d6 c2 32 f0    	mov    %ax,0xf032c2d6$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	b8 24 3e 10 f0       	mov    $0xf0103e24,%eax$/;"	l
f01034f7	obj/kern/kernel.asm	/^f01034f7:	66 a3 e0 c2 32 f0    	mov    %ax,0xf032c2e0$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	66 c7 05 e2 c2 32 f0 	movw   $0x8,0xf032c2e2$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	08 00 $/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	c6 05 e4 c2 32 f0 00 	movb   $0x0,0xf032c2e4$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	c6 05 e5 c2 32 f0 8e 	movb   $0x8e,0xf032c2e5$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	66 a3 e6 c2 32 f0    	mov    %ax,0xf032c2e6$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	b8 2e 3e 10 f0       	mov    $0xf0103e2e,%eax$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	66 a3 e8 c2 32 f0    	mov    %ax,0xf032c2e8$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	66 c7 05 ea c2 32 f0 	movw   $0x8,0xf032c2ea$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	08 00 $/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	c6 05 ec c2 32 f0 00 	movb   $0x0,0xf032c2ec$/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	c6 05 ed c2 32 f0 8e 	movb   $0x8e,0xf032c2ed$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	66 a3 ee c2 32 f0    	mov    %ax,0xf032c2ee$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	b8 36 3e 10 f0       	mov    $0xf0103e36,%eax$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	66 a3 f0 c2 32 f0    	mov    %ax,0xf032c2f0$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	66 c7 05 f2 c2 32 f0 	movw   $0x8,0xf032c2f2$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	08 00 $/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	c6 05 f4 c2 32 f0 00 	movb   $0x0,0xf032c2f4$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	c6 05 f5 c2 32 f0 8e 	movb   $0x8e,0xf032c2f5$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	66 a3 f6 c2 32 f0    	mov    %ax,0xf032c2f6$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	b8 40 3e 10 f0       	mov    $0xf0103e40,%eax$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	66 a3 f8 c2 32 f0    	mov    %ax,0xf032c2f8$/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	66 c7 05 fa c2 32 f0 	movw   $0x8,0xf032c2fa$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	08 00 $/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	c6 05 fc c2 32 f0 00 	movb   $0x0,0xf032c2fc$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	c6 05 fd c2 32 f0 8e 	movb   $0x8e,0xf032c2fd$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	66 a3 fe c2 32 f0    	mov    %ax,0xf032c2fe$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	b8 4a 3e 10 f0       	mov    $0xf0103e4a,%eax$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	66 a3 e0 c3 32 f0    	mov    %ax,0xf032c3e0$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	66 c7 05 e2 c3 32 f0 	movw   $0x8,0xf032c3e2$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	08 00 $/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	c6 05 e4 c3 32 f0 00 	movb   $0x0,0xf032c3e4$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	c6 05 e5 c3 32 f0 ee 	movb   $0xee,0xf032c3e5$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	66 a3 e6 c3 32 f0    	mov    %ax,0xf032c3e6$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	b8 54 3e 10 f0       	mov    $0xf0103e54,%eax$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	66 a3 00 d2 32 f0    	mov    %ax,0xf032d200$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	66 c7 05 02 d2 32 f0 	movw   $0x8,0xf032d202$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	08 00 $/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	c6 05 04 d2 32 f0 00 	movb   $0x0,0xf032d204$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	c6 05 05 d2 32 f0 ee 	movb   $0xee,0xf032d205$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	66 a3 06 d2 32 f0    	mov    %ax,0xf032d206$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	b8 5e 3e 10 f0       	mov    $0xf0103e5e,%eax$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	66 a3 60 c3 32 f0    	mov    %ax,0xf032c360$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	66 c7 05 62 c3 32 f0 	movw   $0x8,0xf032c362$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	08 00 $/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	c6 05 64 c3 32 f0 00 	movb   $0x0,0xf032c364$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	c6 05 65 c3 32 f0 ee 	movb   $0xee,0xf032c365$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	66 a3 66 c3 32 f0    	mov    %ax,0xf032c366$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	b8 64 3e 10 f0       	mov    $0xf0103e64,%eax$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	66 a3 68 c3 32 f0    	mov    %ax,0xf032c368$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	66 c7 05 6a c3 32 f0 	movw   $0x8,0xf032c36a$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	08 00 $/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	c6 05 6c c3 32 f0 00 	movb   $0x0,0xf032c36c$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	c6 05 6d c3 32 f0 8e 	movb   $0x8e,0xf032c36d$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	66 a3 6e c3 32 f0    	mov    %ax,0xf032c36e$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	b8 6a 3e 10 f0       	mov    $0xf0103e6a,%eax$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	66 a3 70 c3 32 f0    	mov    %ax,0xf032c370$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	66 c7 05 72 c3 32 f0 	movw   $0x8,0xf032c372$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	08 00 $/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	c6 05 74 c3 32 f0 00 	movb   $0x0,0xf032c374$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	c6 05 75 c3 32 f0 8e 	movb   $0x8e,0xf032c375$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	66 a3 76 c3 32 f0    	mov    %ax,0xf032c376$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	b8 70 3e 10 f0       	mov    $0xf0103e70,%eax$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	66 a3 78 c3 32 f0    	mov    %ax,0xf032c378$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	66 c7 05 7a c3 32 f0 	movw   $0x8,0xf032c37a$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	08 00 $/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	c6 05 7c c3 32 f0 00 	movb   $0x0,0xf032c37c$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	c6 05 7d c3 32 f0 8e 	movb   $0x8e,0xf032c37d$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	66 a3 7e c3 32 f0    	mov    %ax,0xf032c37e$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	b8 76 3e 10 f0       	mov    $0xf0103e76,%eax$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	66 a3 80 c3 32 f0    	mov    %ax,0xf032c380$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	66 c7 05 82 c3 32 f0 	movw   $0x8,0xf032c382$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	08 00 $/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	c6 05 84 c3 32 f0 00 	movb   $0x0,0xf032c384$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	c6 05 85 c3 32 f0 8e 	movb   $0x8e,0xf032c385$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	66 a3 86 c3 32 f0    	mov    %ax,0xf032c386$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	b8 7c 3e 10 f0       	mov    $0xf0103e7c,%eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	66 a3 88 c3 32 f0    	mov    %ax,0xf032c388$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	66 c7 05 8a c3 32 f0 	movw   $0x8,0xf032c38a$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	08 00 $/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	c6 05 8c c3 32 f0 00 	movb   $0x0,0xf032c38c$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	c6 05 8d c3 32 f0 8e 	movb   $0x8e,0xf032c38d$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	66 a3 8e c3 32 f0    	mov    %ax,0xf032c38e$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	b8 82 3e 10 f0       	mov    $0xf0103e82,%eax$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	66 a3 90 c3 32 f0    	mov    %ax,0xf032c390$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	66 c7 05 92 c3 32 f0 	movw   $0x8,0xf032c392$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	08 00 $/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	c6 05 94 c3 32 f0 00 	movb   $0x0,0xf032c394$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	c6 05 95 c3 32 f0 8e 	movb   $0x8e,0xf032c395$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010371b	obj/kern/kernel.asm	/^f010371b:	66 a3 96 c3 32 f0    	mov    %ax,0xf032c396$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	b8 88 3e 10 f0       	mov    $0xf0103e88,%eax$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	66 a3 98 c3 32 f0    	mov    %ax,0xf032c398$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	66 c7 05 9a c3 32 f0 	movw   $0x8,0xf032c39a$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	08 00 $/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	c6 05 9c c3 32 f0 00 	movb   $0x0,0xf032c39c$/;"	l
f010373c	obj/kern/kernel.asm	/^f010373c:	c6 05 9d c3 32 f0 8e 	movb   $0x8e,0xf032c39d$/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	66 a3 9e c3 32 f0    	mov    %ax,0xf032c39e$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	b8 8e 3e 10 f0       	mov    $0xf0103e8e,%eax$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	66 a3 a0 c3 32 f0    	mov    %ax,0xf032c3a0$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	66 c7 05 a2 c3 32 f0 	movw   $0x8,0xf032c3a2$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	08 00 $/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	c6 05 a4 c3 32 f0 00 	movb   $0x0,0xf032c3a4$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	c6 05 a5 c3 32 f0 8e 	movb   $0x8e,0xf032c3a5$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	66 a3 a6 c3 32 f0    	mov    %ax,0xf032c3a6$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	b8 94 3e 10 f0       	mov    $0xf0103e94,%eax$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	66 a3 a8 c3 32 f0    	mov    %ax,0xf032c3a8$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	66 c7 05 aa c3 32 f0 	movw   $0x8,0xf032c3aa$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	08 00 $/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	c6 05 ac c3 32 f0 00 	movb   $0x0,0xf032c3ac$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	c6 05 ad c3 32 f0 8e 	movb   $0x8e,0xf032c3ad$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	66 a3 ae c3 32 f0    	mov    %ax,0xf032c3ae$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	b8 9a 3e 10 f0       	mov    $0xf0103e9a,%eax$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	66 a3 b0 c3 32 f0    	mov    %ax,0xf032c3b0$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	66 c7 05 b2 c3 32 f0 	movw   $0x8,0xf032c3b2$/;"	l
f01037b4	obj/kern/kernel.asm	/^f01037b4:	08 00 $/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	c6 05 b4 c3 32 f0 00 	movb   $0x0,0xf032c3b4$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	c6 05 b5 c3 32 f0 8e 	movb   $0x8e,0xf032c3b5$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7:	66 a3 b6 c3 32 f0    	mov    %ax,0xf032c3b6$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	b8 a0 3e 10 f0       	mov    $0xf0103ea0,%eax$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	66 a3 b8 c3 32 f0    	mov    %ax,0xf032c3b8$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	66 c7 05 ba c3 32 f0 	movw   $0x8,0xf032c3ba$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	08 00 $/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	c6 05 bc c3 32 f0 00 	movb   $0x0,0xf032c3bc$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	c6 05 bd c3 32 f0 8e 	movb   $0x8e,0xf032c3bd$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	66 a3 be c3 32 f0    	mov    %ax,0xf032c3be$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	b8 a6 3e 10 f0       	mov    $0xf0103ea6,%eax$/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	66 a3 c0 c3 32 f0    	mov    %ax,0xf032c3c0$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	66 c7 05 c2 c3 32 f0 	movw   $0x8,0xf032c3c2$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	08 00 $/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	c6 05 c4 c3 32 f0 00 	movb   $0x0,0xf032c3c4$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	c6 05 c5 c3 32 f0 8e 	movb   $0x8e,0xf032c3c5$/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	66 a3 c6 c3 32 f0    	mov    %ax,0xf032c3c6$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	b8 ac 3e 10 f0       	mov    $0xf0103eac,%eax$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	66 a3 c8 c3 32 f0    	mov    %ax,0xf032c3c8$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	66 c7 05 ca c3 32 f0 	movw   $0x8,0xf032c3ca$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	08 00 $/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	c6 05 cc c3 32 f0 00 	movb   $0x0,0xf032c3cc$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	c6 05 cd c3 32 f0 8e 	movb   $0x8e,0xf032c3cd$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	66 a3 ce c3 32 f0    	mov    %ax,0xf032c3ce$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	b8 b2 3e 10 f0       	mov    $0xf0103eb2,%eax$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	66 a3 d0 c3 32 f0    	mov    %ax,0xf032c3d0$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	66 c7 05 d2 c3 32 f0 	movw   $0x8,0xf032c3d2$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	08 00 $/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	c6 05 d4 c3 32 f0 00 	movb   $0x0,0xf032c3d4$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	c6 05 d5 c3 32 f0 8e 	movb   $0x8e,0xf032c3d5$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	66 a3 d6 c3 32 f0    	mov    %ax,0xf032c3d6$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	b8 b8 3e 10 f0       	mov    $0xf0103eb8,%eax$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	66 a3 d8 c3 32 f0    	mov    %ax,0xf032c3d8$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	66 c7 05 da c3 32 f0 	movw   $0x8,0xf032c3da$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	08 00 $/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	c6 05 dc c3 32 f0 00 	movb   $0x0,0xf032c3dc$/;"	l
f0103894	obj/kern/kernel.asm	/^f0103894:	c6 05 dd c3 32 f0 8e 	movb   $0x8e,0xf032c3dd$/;"	l
f010389b	obj/kern/kernel.asm	/^f010389b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	66 a3 de c3 32 f0    	mov    %ax,0xf032c3de$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	e8 8f f9 ff ff       	call   f0103238 <trap_init_percpu>$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	5d                   	pop    %ebp$/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	c3                   	ret    $/;"	l
f01038ab	obj/kern/kernel.asm	/^f01038ab <print_regs>:$/;"	l
f01038ab	obj/kern/kernel.asm	/^f01038ab:	55                   	push   %ebp$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	53                   	push   %ebx$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01038b2	obj/kern/kernel.asm	/^f01038b2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	8b 03                	mov    (%ebx),%eax$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	c7 04 24 43 70 10 f0 	movl   $0xf0107043,(%esp)$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	e8 57 f9 ff ff       	call   f010321e <cprintf>$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	c7 04 24 52 70 10 f0 	movl   $0xf0107052,(%esp)$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	e8 44 f9 ff ff       	call   f010321e <cprintf>$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	c7 04 24 61 70 10 f0 	movl   $0xf0107061,(%esp)$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	e8 31 f9 ff ff       	call   f010321e <cprintf>$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	c7 04 24 70 70 10 f0 	movl   $0xf0107070,(%esp)$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	e8 1e f9 ff ff       	call   f010321e <cprintf>$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	c7 04 24 7f 70 10 f0 	movl   $0xf010707f,(%esp)$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	e8 0b f9 ff ff       	call   f010321e <cprintf>$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	c7 04 24 8e 70 10 f0 	movl   $0xf010708e,(%esp)$/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	e8 f8 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	c7 04 24 9d 70 10 f0 	movl   $0xf010709d,(%esp)$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	e8 e5 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	c7 04 24 ac 70 10 f0 	movl   $0xf01070ac,(%esp)$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	e8 d2 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	5b                   	pop    %ebx$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	5d                   	pop    %ebp$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	c3                   	ret    $/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952 <print_trapframe>:$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	55                   	push   %ebp$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	89 e5                	mov    %esp,%ebp$/;"	l
f0103955	obj/kern/kernel.asm	/^f0103955:	53                   	push   %ebx$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	e8 cb 20 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	c7 04 24 10 71 10 f0 	movl   $0xf0107110,(%esp)$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	e8 a9 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	e8 2e ff ff ff       	call   f01038ab <print_regs>$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	c7 04 24 2e 71 10 f0 	movl   $0xf010712e,(%esp)$/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	e8 8d f8 ff ff       	call   f010321e <cprintf>$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	c7 04 24 41 71 10 f0 	movl   $0xf0107141,(%esp)$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	e8 79 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	77 09                	ja     f01039b6 <print_trapframe+0x64>$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	8b 14 85 00 74 10 f0 	mov    -0xfef8c00(,%eax,4),%edx$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	eb 20                	jmp    f01039d6 <print_trapframe+0x84>$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	74 0f                	je     f01039ca <print_trapframe+0x78>$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	77 0e                	ja     f01039d1 <print_trapframe+0x7f>$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	ba c7 70 10 f0       	mov    $0xf01070c7,%edx$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	eb 0c                	jmp    f01039d6 <print_trapframe+0x84>$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	ba bb 70 10 f0       	mov    $0xf01070bb,%edx$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	eb 05                	jmp    f01039d6 <print_trapframe+0x84>$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	ba da 70 10 f0       	mov    $0xf01070da,%edx$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	c7 04 24 54 71 10 f0 	movl   $0xf0107154,(%esp)$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	e8 34 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	3b 1d c8 ca 32 f0    	cmp    0xf032cac8,%ebx$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	75 19                	jne    f0103a0b <print_trapframe+0xb9>$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	75 13                	jne    f0103a0b <print_trapframe+0xb9>$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039ff	obj/kern/kernel.asm	/^f01039ff:	c7 04 24 66 71 10 f0 	movl   $0xf0107166,(%esp)$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	e8 13 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	c7 04 24 75 71 10 f0 	movl   $0xf0107175,(%esp)$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	e8 00 f8 ff ff       	call   f010321e <cprintf>$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	75 4d                	jne    f0103a71 <print_trapframe+0x11f>$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	a8 01                	test   $0x1,%al$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	74 07                	je     f0103a32 <print_trapframe+0xe0>$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	b9 e9 70 10 f0       	mov    $0xf01070e9,%ecx$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	eb 05                	jmp    f0103a37 <print_trapframe+0xe5>$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	b9 f4 70 10 f0       	mov    $0xf01070f4,%ecx$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	a8 02                	test   $0x2,%al$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	74 07                	je     f0103a42 <print_trapframe+0xf0>$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	ba 00 71 10 f0       	mov    $0xf0107100,%edx$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	eb 05                	jmp    f0103a47 <print_trapframe+0xf5>$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	ba 06 71 10 f0       	mov    $0xf0107106,%edx$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	a8 04                	test   $0x4,%al$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	74 07                	je     f0103a52 <print_trapframe+0x100>$/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	b8 0b 71 10 f0       	mov    $0xf010710b,%eax$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	eb 05                	jmp    f0103a57 <print_trapframe+0x105>$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	b8 40 72 10 f0       	mov    $0xf0107240,%eax$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	c7 04 24 83 71 10 f0 	movl   $0xf0107183,(%esp)$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	e8 af f7 ff ff       	call   f010321e <cprintf>$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	eb 0c                	jmp    f0103a7d <print_trapframe+0x12b>$/;"	l
f0103a71	obj/kern/kernel.asm	/^f0103a71:	c7 04 24 cc 61 10 f0 	movl   $0xf01061cc,(%esp)$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	e8 a1 f7 ff ff       	call   f010321e <cprintf>$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	c7 04 24 92 71 10 f0 	movl   $0xf0107192,(%esp)$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	e8 8e f7 ff ff       	call   f010321e <cprintf>$/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103a94	obj/kern/kernel.asm	/^f0103a94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	c7 04 24 a1 71 10 f0 	movl   $0xf01071a1,(%esp)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	e8 7a f7 ff ff       	call   f010321e <cprintf>$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	c7 04 24 b4 71 10 f0 	movl   $0xf01071b4,(%esp)$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	e8 67 f7 ff ff       	call   f010321e <cprintf>$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	74 27                	je     f0103ae4 <print_trapframe+0x192>$/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ac4	obj/kern/kernel.asm	/^f0103ac4:	c7 04 24 c3 71 10 f0 	movl   $0xf01071c3,(%esp)$/;"	l
f0103acb	obj/kern/kernel.asm	/^f0103acb:	e8 4e f7 ff ff       	call   f010321e <cprintf>$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	c7 04 24 d2 71 10 f0 	movl   $0xf01071d2,(%esp)$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	e8 3a f7 ff ff       	call   f010321e <cprintf>$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	5b                   	pop    %ebx$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	5d                   	pop    %ebp$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	c3                   	ret    $/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea <page_fault_handler>:$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	55                   	push   %ebp$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	57                   	push   %edi$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	56                   	push   %esi$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef:	53                   	push   %ebx$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103af6	obj/kern/kernel.asm	/^f0103af6:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	8b 77 30             	mov    0x30(%edi),%esi$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	e8 2b 1f 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	29 c2                	sub    %eax,%edx$/;"	l
f0103b12	obj/kern/kernel.asm	/^f0103b12:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	c7 04 24 8c 73 10 f0 	movl   $0xf010738c,(%esp)$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	e8 ef f6 ff ff       	call   f010321e <cprintf>$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0103b32	obj/kern/kernel.asm	/^f0103b32:	e8 1b fe ff ff       	call   f0103952 <print_trapframe>$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	e8 f0 1e 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	29 c2                	sub    %eax,%edx$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	e8 ac f3 ff ff       	call   f0102f03 <env_destroy>$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	5b                   	pop    %ebx$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	5e                   	pop    %esi$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	5f                   	pop    %edi$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	5d                   	pop    %ebp$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	c3                   	ret    $/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f <trap>:$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	55                   	push   %ebp$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	57                   	push   %edi$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	56                   	push   %esi$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	83 ec 30             	sub    $0x30,%esp$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	fc                   	cld    $/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	83 3d e0 ce 32 f0 00 	cmpl   $0x0,0xf032cee0$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	74 01                	je     f0103b75 <trap+0x16>$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	f4                   	hlt    $/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	e8 b2 1e 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	29 c2                	sub    %eax,%edx$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	8d 14 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%edx$/;"	l
f0103b8d	obj/kern/kernel.asm	/^f0103b8d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	75 0c                	jne    f0103ba7 <trap+0x48>$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	c7 04 24 a0 93 12 f0 	movl   $0xf01293a0,(%esp)$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	e8 44 21 00 00       	call   f0105ceb <spin_lock>$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	9c                   	pushf  $/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	58                   	pop    %eax$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	74 24                	je     f0103bd2 <trap+0x73>$/;"	l
f0103bae	obj/kern/kernel.asm	/^f0103bae:	c7 44 24 0c e5 71 10 	movl   $0xf01071e5,0xc(%esp)$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	f0 $/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	f0 $/;"	l
f0103bbe	obj/kern/kernel.asm	/^f0103bbe:	c7 44 24 04 17 01 00 	movl   $0x117,0x4(%esp)$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	00 $/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	c7 04 24 fe 71 10 f0 	movl   $0xf01071fe,(%esp)$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	e8 6e c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	0f 85 9b 00 00 00    	jne    f0103c7d <trap+0x11e>$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	e8 45 1e 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	83 b8 28 d0 33 f0 00 	cmpl   $0x0,-0xfcc2fd8(%eax)$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	75 24                	jne    f0103c17 <trap+0xb8>$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	c7 44 24 0c 0a 72 10 	movl   $0xf010720a,0xc(%esp)$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	f0 $/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	f0 $/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	00 $/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	c7 04 24 fe 71 10 f0 	movl   $0xf01071fe,(%esp)$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	e8 29 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c17	obj/kern/kernel.asm	/^f0103c17:	e8 10 1e 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	8b 80 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%eax$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	75 2d                	jne    f0103c58 <trap+0xf9>$/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b:	e8 fc 1d 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	8b 80 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%eax$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	e8 9e f0 ff ff       	call   f0102cdf <env_free>$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	e8 e6 1d 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	c7 80 28 d0 33 f0 00 	movl   $0x0,-0xfcc2fd8(%eax)$/;"	l
f0103c50	obj/kern/kernel.asm	/^f0103c50:	00 00 00 $/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	e8 8a 03 00 00       	call   f0103fe2 <sched_yield>$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	e8 cf 1d 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	8b 80 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%eax$/;"	l
f0103c66	obj/kern/kernel.asm	/^f0103c66:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	89 c7                	mov    %eax,%edi$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	e8 b8 1d 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	8b b0 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%esi$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	89 35 c8 ca 32 f0    	mov    %esi,0xf032cac8$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	75 19                	jne    f0103ca4 <trap+0x145>$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	c7 04 24 11 72 10 f0 	movl   $0xf0107211,(%esp)$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	e8 87 f5 ff ff       	call   f010321e <cprintf>$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103c9a	obj/kern/kernel.asm	/^f0103c9a:	e8 b3 fc ff ff       	call   f0103952 <print_trapframe>$/;"	l
f0103c9f	obj/kern/kernel.asm	/^f0103c9f:	e9 bf 00 00 00       	jmp    f0103d63 <trap+0x204>$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	74 0c                	je     f0103cb5 <trap+0x156>$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	74 1e                	je     f0103ccc <trap+0x16d>$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	75 4b                	jne    f0103cfe <trap+0x19f>$/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	eb 0d                	jmp    f0103cc2 <trap+0x163>$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	e8 2d fe ff ff       	call   f0103aea <page_fault_handler>$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	e9 a1 00 00 00       	jmp    f0103d63 <trap+0x204>$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	e8 c8 cb ff ff       	call   f0100892 <monitor>$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	eb f6                	jmp    f0103cc2 <trap+0x163>$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	8b 06                	mov    (%esi),%eax$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	e8 f7 02 00 00       	call   f0103ff0 <syscall>$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	eb 65                	jmp    f0103d63 <trap+0x204>$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	c7 44 24 0c f7 00 00 	movl   $0xf7,0xc(%esp)$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	00 $/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	c7 44 24 08 50 74 10 	movl   $0xf0107450,0x8(%esp)$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	f0 $/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	c7 44 24 04 fe 71 10 	movl   $0xf01071fe,0x4(%esp)$/;"	l
f0103d15	obj/kern/kernel.asm	/^f0103d15:	f0 $/;"	l
f0103d16	obj/kern/kernel.asm	/^f0103d16:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	e8 fc f4 ff ff       	call   f010321e <cprintf>$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	e8 28 fc ff ff       	call   f0103952 <print_trapframe>$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	75 1c                	jne    f0103d4d <trap+0x1ee>$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	c7 44 24 08 2e 72 10 	movl   $0xf010722e,0x8(%esp)$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	f0 $/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	00 $/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	c7 04 24 fe 71 10 f0 	movl   $0xf01071fe,(%esp)$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	e8 f3 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	e8 da 1c 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	8b 80 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%eax$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	e8 a0 f1 ff ff       	call   f0102f03 <env_destroy>$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	e8 c4 1c 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	83 b8 28 d0 33 f0 00 	cmpl   $0x0,-0xfcc2fd8(%eax)$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	74 2a                	je     f0103d9e <trap+0x23f>$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	e8 b3 1c 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	8b 80 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%eax$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	75 16                	jne    f0103d9e <trap+0x23f>$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	e8 9f 1c 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	8b 80 28 d0 33 f0    	mov    -0xfcc2fd8(%eax),%eax$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	e8 24 f2 ff ff       	call   f0102fc2 <env_run>$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	e8 3f 02 00 00       	call   f0103fe2 <sched_yield>$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4 <vec0>:$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	6a 00                	push   $0x0$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	6a 00                	push   $0x0$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	e9 29 01 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	90                   	nop$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae <vec1>:$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	6a 00                	push   $0x0$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	6a 01                	push   $0x1$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	e9 1f 01 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	90                   	nop$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8 <vec2>:$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	6a 00                	push   $0x0$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	6a 02                	push   $0x2$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	e9 15 01 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	90                   	nop$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2 <vec3>:$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	6a 00                	push   $0x0$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	6a 03                	push   $0x3$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	e9 0b 01 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	90                   	nop$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc <vec4>:$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	6a 00                	push   $0x0$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	6a 04                	push   $0x4$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	e9 01 01 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	90                   	nop$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6 <vec5>:$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	6a 00                	push   $0x0$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	6a 05                	push   $0x5$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	e9 f7 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	90                   	nop$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0 <vec6>:$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	6a 00                	push   $0x0$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	6a 06                	push   $0x6$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	e9 ed 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	90                   	nop$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea <vec7>:$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	6a 00                	push   $0x0$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	6a 07                	push   $0x7$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	e9 e3 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	90                   	nop$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4 <vec8>:$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	6a 08                	push   $0x8$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	e9 db 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	90                   	nop$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc <vec10>:$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	6a 0a                	push   $0xa$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	e9 d3 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	90                   	nop$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04 <vec11>:$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	6a 0b                	push   $0xb$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	e9 cb 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	90                   	nop$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c <vec12>:$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	6a 0c                	push   $0xc$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	e9 c3 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	90                   	nop$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14 <vec13>:$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	6a 0d                	push   $0xd$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	e9 bb 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	90                   	nop$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c <vec14>:$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	6a 0e                	push   $0xe$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	e9 b3 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	90                   	nop$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24 <vec16>:$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	6a 00                	push   $0x0$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	6a 10                	push   $0x10$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	e9 a9 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	90                   	nop$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e <vec17>:$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	6a 11                	push   $0x11$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	e9 a1 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e35	obj/kern/kernel.asm	/^f0103e35:	90                   	nop$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36 <vec18>:$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	6a 00                	push   $0x0$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	6a 12                	push   $0x12$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	e9 97 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	90                   	nop$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40 <vec19>:$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	6a 00                	push   $0x0$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	6a 13                	push   $0x13$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	e9 8d 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	90                   	nop$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a <vec48>:$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a:	6a 00                	push   $0x0$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	6a 30                	push   $0x30$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	e9 83 00 00 00       	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	90                   	nop$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54 <vecall>:$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	6a 00                	push   $0x0$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	68 f4 01 00 00       	push   $0x1f4$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	eb 79                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	90                   	nop$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e <irq_0>:$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	6a 00                	push   $0x0$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	6a 20                	push   $0x20$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	eb 72                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64 <irq_1>:$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	6a 00                	push   $0x0$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	6a 21                	push   $0x21$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	eb 6c                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a <irq_2>:$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	6a 00                	push   $0x0$/;"	l
f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	6a 22                	push   $0x22$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	eb 66                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70 <irq_3>:$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	6a 00                	push   $0x0$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	6a 23                	push   $0x23$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	eb 60                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76 <irq_4>:$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	6a 00                	push   $0x0$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	6a 24                	push   $0x24$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	eb 5a                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c <irq_5>:$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	6a 00                	push   $0x0$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	6a 25                	push   $0x25$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	eb 54                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82 <irq_6>:$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	6a 00                	push   $0x0$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	6a 26                	push   $0x26$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	eb 4e                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88 <irq_7>:$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	6a 00                	push   $0x0$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	6a 27                	push   $0x27$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	eb 48                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e <irq_8>:$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	6a 00                	push   $0x0$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	6a 28                	push   $0x28$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	eb 42                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94 <irq_9>:$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	6a 00                	push   $0x0$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	6a 29                	push   $0x29$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	eb 3c                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a <irq_10>:$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	6a 00                	push   $0x0$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	6a 2a                	push   $0x2a$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	eb 36                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0 <irq_11>:$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	6a 00                	push   $0x0$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	6a 2b                	push   $0x2b$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	eb 30                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6 <irq_12>:$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	6a 00                	push   $0x0$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	6a 2c                	push   $0x2c$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	eb 2a                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac <irq_13>:$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	6a 00                	push   $0x0$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	6a 2d                	push   $0x2d$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	eb 24                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2 <irq_14>:$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	6a 00                	push   $0x0$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	6a 2e                	push   $0x2e$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	eb 1e                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8 <irq_15>:$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	6a 00                	push   $0x0$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	6a 2f                	push   $0x2f$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	eb 18                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe <irq_16>:$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	6a 00                	push   $0x0$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	6a 30                	push   $0x30$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	eb 12                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4 <irq_17>:$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	6a 00                	push   $0x0$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	6a 31                	push   $0x31$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	eb 0c                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca <irq_18>:$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	6a 00                	push   $0x0$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	6a 32                	push   $0x32$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	eb 06                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0 <irq_19>:$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	6a 00                	push   $0x0$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	6a 33                	push   $0x33$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	eb 00                	jmp    f0103ed6 <_alltraps>$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6 <_alltraps>:$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	1e                   	push   %ds$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	06                   	push   %es$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	60                   	pusha  $/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	8e d8                	mov    %eax,%ds$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	8e c0                	mov    %eax,%es$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	54                   	push   %esp$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	e8 77 fc ff ff       	call   f0103b5f <trap>$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	5c                   	pop    %esp$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	61                   	popa   $/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	07                   	pop    %es$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	1f                   	pop    %ds$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	cf                   	iret   $/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0 <sched_halt>:$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	55                   	push   %ebp$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	8b 15 48 c2 32 f0    	mov    0xf032c248,%edx$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	83 c2 54             	add    $0x54,%edx$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	49                   	dec    %ecx$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	76 0d                	jbe    f0103f19 <sched_halt+0x29>$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	40                   	inc    %eax$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	75 ed                	jne    f0103f04 <sched_halt+0x14>$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	eb 07                	jmp    f0103f20 <sched_halt+0x30>$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	75 1a                	jne    f0103f3a <sched_halt+0x4a>$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	c7 04 24 60 74 10 f0 	movl   $0xf0107460,(%esp)$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	e8 f2 f2 ff ff       	call   f010321e <cprintf>$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	e8 5a c9 ff ff       	call   f0100892 <monitor>$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	eb f2                	jmp    f0103f2c <sched_halt+0x3c>$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	e8 ed 1a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	29 c2                	sub    %eax,%edx$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	c7 04 85 28 d0 33 f0 	movl   $0x0,-0xfcc2fd8(,%eax,4)$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	00 00 00 00 $/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	a1 ec ce 32 f0       	mov    0xf032ceec,%eax$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	77 20                	ja     f0103f82 <sched_halt+0x92>$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	c7 44 24 08 24 61 10 	movl   $0xf0106124,0x8(%esp)$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	f0 $/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	00 $/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	c7 04 24 89 74 10 f0 	movl   $0xf0107489,(%esp)$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	e8 be c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	e8 9d 1a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	29 c2                	sub    %eax,%edx$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	8d 14 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%edx$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	c7 04 24 a0 93 12 f0 	movl   $0xf01293a0,(%esp)$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	e8 d7 1d 00 00       	call   f0105d8e <spin_unlock>$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	f3 90                	pause  $/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	e8 6e 1a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	29 c2                	sub    %eax,%edx$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	8b 04 85 30 d0 33 f0 	mov    -0xfcc2fd0(,%eax,4),%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	89 c4                	mov    %eax,%esp$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	6a 00                	push   $0x0$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	6a 00                	push   $0x0$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	fb                   	sti    $/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	f4                   	hlt    $/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	eb fd                	jmp    f0103fdd <sched_halt+0xed>$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	c9                   	leave  $/;"	l
f0103fe1	obj/kern/kernel.asm	/^f0103fe1:	c3                   	ret    $/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2 <sched_yield>:$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	55                   	push   %ebp$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	e8 03 ff ff ff       	call   f0103ef0 <sched_halt>$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	c9                   	leave  $/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	c3                   	ret    $/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0 <syscall>:$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	55                   	push   %ebp$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	56                   	push   %esi$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	53                   	push   %ebx$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	74 63                	je     f0104069 <syscall+0x79>$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	72 10                	jb     f010401b <syscall+0x2b>$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	74 63                	je     f0104073 <syscall+0x83>$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	0f 85 27 01 00 00    	jne    f0104140 <syscall+0x150>$/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	eb 78                	jmp    f0104093 <syscall+0xa3>$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	e8 0c 1a 00 00       	call   f0105a2c <cpunum>$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	00 $/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	29 c2                	sub    %eax,%edx$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	e8 36 e7 ff ff       	call   f0102781 <user_mem_assert>$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	c7 04 24 96 74 10 f0 	movl   $0xf0107496,(%esp)$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	e8 bf f1 ff ff       	call   f010321e <cprintf>$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	e9 dc 00 00 00       	jmp    f0104145 <syscall+0x155>$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	e8 a2 c5 ff ff       	call   f0100610 <cons_getc>$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	e9 d2 00 00 00       	jmp    f0104145 <syscall+0x155>$/;"	l
f0104073	obj/kern/kernel.asm	/^f0104073:	e8 b4 19 00 00       	call   f0105a2c <cpunum>$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	29 c2                	sub    %eax,%edx$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	e9 b2 00 00 00       	jmp    f0104145 <syscall+0x155>$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	00 $/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	e8 ca e7 ff ff       	call   f0102874 <envid2env>$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	85 c0                	test   %eax,%eax$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	0f 88 93 00 00 00    	js     f0104145 <syscall+0x155>$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	e8 75 19 00 00       	call   f0105a2c <cpunum>$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	29 c1                	sub    %eax,%ecx$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	8d 04 88             	lea    (%eax,%ecx,4),%eax$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	39 14 85 28 d0 33 f0 	cmp    %edx,-0xfcc2fd8(,%eax,4)$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	75 2d                	jne    f01040fc <syscall+0x10c>$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	e8 58 19 00 00       	call   f0105a2c <cpunum>$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	29 c2                	sub    %eax,%edx$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f01040e7	obj/kern/kernel.asm	/^f01040e7:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	c7 04 24 9b 74 10 f0 	movl   $0xf010749b,(%esp)$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	e8 24 f1 ff ff       	call   f010321e <cprintf>$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	eb 32                	jmp    f010412e <syscall+0x13e>$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	e8 28 19 00 00       	call   f0105a2c <cpunum>$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	29 c2                	sub    %eax,%edx$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	c7 04 24 b6 74 10 f0 	movl   $0xf01074b6,(%esp)$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	e8 f0 f0 ff ff       	call   f010321e <cprintf>$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	e8 ca ed ff ff       	call   f0102f03 <env_destroy>$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	eb 05                	jmp    f0104145 <syscall+0x155>$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	5b                   	pop    %ebx$/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	5e                   	pop    %esi$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	5d                   	pop    %ebp$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	c3                   	ret    $/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c <stab_binsearch>:$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	55                   	push   %ebp$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	89 e5                	mov    %esp,%ebp$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	57                   	push   %edi$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	56                   	push   %esi$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	53                   	push   %ebx$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	e9 83 00 00 00       	jmp    f01041f7 <stab_binsearch+0xab>$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	01 d8                	add    %ebx,%eax$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	89 c7                	mov    %eax,%edi$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	01 c7                	add    %eax,%edi$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	d1 ff                	sar    %edi$/;"	d
f0104182	obj/kern/kernel.asm	/^f0104182:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	89 f8                	mov    %edi,%eax$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	eb 01                	jmp    f0104191 <stab_binsearch+0x45>$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	48                   	dec    %eax$/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191:	39 c3                	cmp    %eax,%ebx$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	7f 1e                	jg     f01041b3 <stab_binsearch+0x67>$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	39 f1                	cmp    %esi,%ecx$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	75 f1                	jne    f0104190 <stab_binsearch+0x44>$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	76 18                	jbe    f01041c9 <stab_binsearch+0x7d>$/;"	l
f01041b1	obj/kern/kernel.asm	/^f01041b1:	eb 05                	jmp    f01041b8 <stab_binsearch+0x6c>$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	eb 3f                	jmp    f01041f7 <stab_binsearch+0xab>$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	89 02                	mov    %eax,(%edx)$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	eb 2e                	jmp    f01041f7 <stab_binsearch+0xab>$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc:	73 15                	jae    f01041e3 <stab_binsearch+0x97>$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	49                   	dec    %ecx$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	89 08                	mov    %ecx,(%eax)$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	eb 14                	jmp    f01041f7 <stab_binsearch+0xab>$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	89 0a                	mov    %ecx,(%edx)$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	89 c3                	mov    %eax,%ebx$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01041f7	obj/kern/kernel.asm	/^f01041f7:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	0f 8e 74 ff ff ff    	jle    f0104174 <stab_binsearch+0x28>$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	75 0d                	jne    f0104213 <stab_binsearch+0xc7>$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	8b 02                	mov    (%edx),%eax$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	48                   	dec    %eax$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	eb 2a                	jmp    f010423d <stab_binsearch+0xf1>$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	8b 0a                	mov    (%edx),%ecx$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	8b 5d ec             	mov    -0x14(%ebp),%ebx$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	eb 01                	jmp    f010422a <stab_binsearch+0xde>$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	48                   	dec    %eax$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	39 c8                	cmp    %ecx,%eax$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	7e 0a                	jle    f0104238 <stab_binsearch+0xec>$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	75 f1                	jne    f0104229 <stab_binsearch+0xdd>$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	89 02                	mov    %eax,(%edx)$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	5b                   	pop    %ebx$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	5e                   	pop    %esi$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	5f                   	pop    %edi$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	5d                   	pop    %ebp$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	c3                   	ret    $/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245 <debuginfo_eip>:$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	55                   	push   %ebp$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	89 e5                	mov    %esp,%ebp$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	57                   	push   %edi$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	56                   	push   %esi$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	53                   	push   %ebx$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	c7 06 ce 74 10 f0    	movl   $0xf01074ce,(%esi)$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	c7 46 08 ce 74 10 f0 	movl   $0xf01074ce,0x8(%esi)$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	77 56                	ja     f01042d7 <debuginfo_eip+0x92>$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	e8 a6 17 00 00       	call   f0105a2c <cpunum>$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010428d	obj/kern/kernel.asm	/^f010428d:	00 $/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	00 $/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	29 c2                	sub    %eax,%edx$/;"	l
f01042a3	obj/kern/kernel.asm	/^f01042a3:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	8b 04 85 28 d0 33 f0 	mov    -0xfcc2fd8(,%eax,4),%eax$/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	e8 cc e4 ff ff       	call   f0102781 <user_mem_assert>$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	8b 1d 00 00 20 00    	mov    0x200000,%ebx$/;"	l
f01042bb	obj/kern/kernel.asm	/^f01042bb:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	8b 1d 08 00 20 00    	mov    0x200008,%ebx$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	8b 1d 0c 00 20 00    	mov    0x20000c,%ebx$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	eb 1a                	jmp    f01042f1 <debuginfo_eip+0xac>$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	c7 45 d0 2d ee 11 f0 	movl   $0xf011ee2d,-0x30(%ebp)$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	c7 45 cc ed 41 11 f0 	movl   $0xf01141ed,-0x34(%ebp)$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	b8 ec 41 11 f0       	mov    $0xf01141ec,%eax$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	c7 45 d4 f8 93 10 f0 	movl   $0xf01093f8,-0x2c(%ebp)$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	39 5d cc             	cmp    %ebx,-0x34(%ebp)$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	0f 83 24 01 00 00    	jae    f0104421 <debuginfo_eip+0x1dc>$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	80 7b ff 00          	cmpb   $0x0,-0x1(%ebx)$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	0f 85 21 01 00 00    	jne    f0104428 <debuginfo_eip+0x1e3>$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	89 d1                	mov    %edx,%ecx$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	01 ca                	add    %ecx,%edx$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	89 d1                	mov    %edx,%ecx$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	01 ca                	add    %ecx,%edx$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	8d 44 50 ff          	lea    -0x1(%eax,%edx,2),%eax$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	e8 01 fe ff ff       	call   f010414c <stab_binsearch>$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	85 c0                	test   %eax,%eax$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	0f 84 d9 00 00 00    	je     f010442f <debuginfo_eip+0x1ea>$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	e8 d4 fd ff ff       	call   f010414c <stab_binsearch>$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	3b 5d d8             	cmp    -0x28(%ebp),%ebx$/;"	l
f010437e	obj/kern/kernel.asm	/^f010437e:	7f 23                	jg     f01043a3 <debuginfo_eip+0x15e>$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	8d 04 82             	lea    (%edx,%eax,4),%eax$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	8b 10                	mov    (%eax),%edx$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	2b 4d cc             	sub    -0x34(%ebp),%ecx$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	73 06                	jae    f010439b <debuginfo_eip+0x156>$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	03 55 cc             	add    -0x34(%ebp),%edx$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	89 56 08             	mov    %edx,0x8(%esi)$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	eb 06                	jmp    f01043a9 <debuginfo_eip+0x164>$/;"	l
f01043a3	obj/kern/kernel.asm	/^f01043a3:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	00 $/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	e8 2a 10 00 00       	call   f01053e6 <strfind>$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	8d 44 82 08          	lea    0x8(%edx,%eax,4),%eax$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	eb 04                	jmp    f01043d5 <debuginfo_eip+0x190>$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	4b                   	dec    %ebx$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	39 fb                	cmp    %edi,%ebx$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	7c 19                	jl     f01043f2 <debuginfo_eip+0x1ad>$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	8a 50 fc             	mov    -0x4(%eax),%dl$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	74 69                	je     f010444a <debuginfo_eip+0x205>$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	75 eb                	jne    f01043d1 <debuginfo_eip+0x18c>$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	74 e6                	je     f01043d1 <debuginfo_eip+0x18c>$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	eb 5d                	jmp    f010444a <debuginfo_eip+0x205>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	03 45 cc             	add    -0x34(%ebp),%eax$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	89 06                	mov    %eax,(%esi)$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	39 c8                	cmp    %ecx,%eax$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	7d 3a                	jge    f0104436 <debuginfo_eip+0x1f1>$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	40                   	inc    %eax$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	eb 04                	jmp    f010440d <debuginfo_eip+0x1c8>$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	ff 46 14             	incl   0x14(%esi)$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	40                   	inc    %eax$/;"	l
f010440d	obj/kern/kernel.asm	/^f010440d:	39 c8                	cmp    %ecx,%eax$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	74 2c                	je     f010443d <debuginfo_eip+0x1f8>$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	80 7a f4 a0          	cmpb   $0xa0,-0xc(%edx)$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	74 ef                	je     f0104409 <debuginfo_eip+0x1c4>$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	eb 21                	jmp    f0104442 <debuginfo_eip+0x1fd>$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	eb 1a                	jmp    f0104442 <debuginfo_eip+0x1fd>$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	eb 13                	jmp    f0104442 <debuginfo_eip+0x1fd>$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	eb 0c                	jmp    f0104442 <debuginfo_eip+0x1fd>$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	eb 05                	jmp    f0104442 <debuginfo_eip+0x1fd>$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	5b                   	pop    %ebx$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	5e                   	pop    %esi$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	5f                   	pop    %edi$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	5d                   	pop    %ebp$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	c3                   	ret    $/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	8b 04 83             	mov    (%ebx,%eax,4),%eax$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	39 d0                	cmp    %edx,%eax$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	72 90                	jb     f01043ed <debuginfo_eip+0x1a8>$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	eb 93                	jmp    f01043f2 <debuginfo_eip+0x1ad>$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460 <draw_tux>:$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	55                   	push   %ebp$/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	89 e5                	mov    %esp,%ebp$/;"	l
f0104463	obj/kern/kernel.asm	/^f0104463:	57                   	push   %edi$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	56                   	push   %esi$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	53                   	push   %ebx$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	c7 04 24 d8 74 10 f0 	movl   $0xf01074d8,(%esp)$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	e8 a9 ed ff ff       	call   f010321e <cprintf>$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	e8 ea 01 00 00       	call   f0104664 <prepare_buffer>$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	c7 04 24 f4 74 10 f0 	movl   $0xf01074f4,(%esp)$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	e8 98 ed ff ff       	call   f010321e <cprintf>$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	e8 c2 c2 ff ff       	call   f010075b <getchar>$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f010449c	obj/kern/kernel.asm	/^f010449c:	75 0b                	jne    f01044a9 <draw_tux+0x49>$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	7e 25                	jle    f01044c9 <draw_tux+0x69>$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	ff 4d d4             	decl   -0x2c(%ebp)$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	eb 2e                	jmp    f01044d7 <draw_tux+0x77>$/;"	l
f01044a9	obj/kern/kernel.asm	/^f01044a9:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	75 0b                	jne    f01044b9 <draw_tux+0x59>$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	83 7d d0 26          	cmpl   $0x26,-0x30(%ebp)$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	7f e0                	jg     f0104494 <draw_tux+0x34>$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	ff 45 d0             	incl   -0x30(%ebp)$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	eb 1e                	jmp    f01044d7 <draw_tux+0x77>$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	75 0b                	jne    f01044c9 <draw_tux+0x69>$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	83 7d d4 5d          	cmpl   $0x5d,-0x2c(%ebp)$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	7f d0                	jg     f0104494 <draw_tux+0x34>$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	ff 45 d4             	incl   -0x2c(%ebp)$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	eb 0e                	jmp    f01044d7 <draw_tux+0x77>$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	75 c6                	jne    f0104494 <draw_tux+0x34>$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	7e c0                	jle    f0104494 <draw_tux+0x34>$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	ff 4d d0             	decl   -0x30(%ebp)$/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	e8 88 01 00 00       	call   f0104664 <prepare_buffer>$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	eb 7a                	jmp    f010456b <draw_tux+0x10b>$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	85 db                	test   %ebx,%ebx$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	78 10                	js     f0104505 <draw_tux+0xa5>$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	81 ff c7 00 00 00    	cmp    $0xc7,%edi$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	7f 08                	jg     f0104505 <draw_tux+0xa5>$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	81 fb 3f 01 00 00    	cmp    $0x13f,%ebx$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	7e 24                	jle    f0104529 <draw_tux+0xc9>$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	c7 44 24 0c 48 75 10 	movl   $0xf0107548,0xc(%esp)$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	f0 $/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	f0 $/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	00 $/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	c7 04 24 09 75 10 f0 	movl   $0xf0107509,(%esp)$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	e8 17 bb ff ff       	call   f0100040 <_panic>$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	88 84 0e 00 cf 32 f0 	mov    %al,-0xfcd3100(%esi,%ecx,1)$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	41                   	inc    %ecx$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	43                   	inc    %ebx$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	81 f9 e1 00 00 00    	cmp    $0xe1,%ecx$/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	75 7e                	jne    f01045b8 <draw_tux+0x158>$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	ff 45 dc             	incl   -0x24(%ebp)$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	81 7d dc a0 00 00 00 	cmpl   $0xa0,-0x24(%ebp)$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	75 22                	jne    f010456b <draw_tux+0x10b>$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	c7 04 24 18 75 10 f0 	movl   $0xf0107518,(%esp)$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	e8 c9 ec ff ff       	call   f010321e <cprintf>$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	e8 2e 01 00 00       	call   f0104688 <display_buffer>$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	c7 04 24 34 75 10 f0 	movl   $0xf0107534,(%esp)$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	e8 b8 ec ff ff       	call   f010321e <cprintf>$/;"	l
f0104566	obj/kern/kernel.asm	/^f0104566:	e9 29 ff ff ff       	jmp    f0104494 <draw_tux+0x34>$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	f7 6d dc             	imull  -0x24(%ebp)$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	d1 fa                	sar    %edx$/;"	d
f0104575	obj/kern/kernel.asm	/^f0104575:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	29 c2                	sub    %eax,%edx$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	8d 04 92             	lea    (%edx,%edx,4),%eax$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	8d 04 42             	lea    (%edx,%eax,2),%eax$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	8d 04 82             	lea    (%edx,%eax,4),%eax$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	89 f9                	mov    %edi,%ecx$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	89 fa                	mov    %edi,%edx$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	01 ca                	add    %ecx,%edx$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	8b 04 85 80 75 10 f0 	mov    -0xfef8a80(,%eax,4),%eax$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	85 ff                	test   %edi,%edi$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	0f 88 5e ff ff ff    	js     f0104505 <draw_tux+0xa5>$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	89 de                	mov    %ebx,%esi$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	01 d6                	add    %edx,%esi$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	e9 39 ff ff ff       	jmp    f01044f1 <draw_tux+0x91>$/;"	l
f01045b8	obj/kern/kernel.asm	/^f01045b8:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	f7 e9                	imul   %ecx$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	d1 fa                	sar    %edx$/;"	d
f01045c1	obj/kern/kernel.asm	/^f01045c1:	89 c8                	mov    %ecx,%eax$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	29 c2                	sub    %eax,%edx$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	03 55 e4             	add    -0x1c(%ebp),%edx$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	8b 04 95 80 75 10 f0 	mov    -0xfef8a80(,%edx,4),%eax$/;"	l
f01045d2	obj/kern/kernel.asm	/^f01045d2:	e9 1a ff ff ff       	jmp    f01044f1 <draw_tux+0x91>$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7 <draw_color>:$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	55                   	push   %ebp$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	56                   	push   %esi$/;"	l
f01045db	obj/kern/kernel.asm	/^f01045db:	53                   	push   %ebx$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	e8 80 00 00 00       	call   f0104664 <prepare_buffer>$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	e8 72 c1 ff ff       	call   f010075b <getchar>$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	74 f6                	je     f01045e4 <draw_color+0xd>$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	eb 62                	jmp    f0104652 <draw_color+0x7b>$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	85 c0                	test   %eax,%eax$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	78 13                	js     f0104607 <draw_color+0x30>$/;"	l
f01045f4	obj/kern/kernel.asm	/^f01045f4:	85 d2                	test   %edx,%edx$/;"	l
f01045f6	obj/kern/kernel.asm	/^f01045f6:	78 0f                	js     f0104607 <draw_color+0x30>$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	3d c8 00 00 00       	cmp    $0xc8,%eax$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	74 08                	je     f0104607 <draw_color+0x30>$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	81 fa 40 01 00 00    	cmp    $0x140,%edx$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	75 24                	jne    f010462b <draw_color+0x54>$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	c7 44 24 0c 48 75 10 	movl   $0xf0107548,0xc(%esp)$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	f0 $/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	f0 $/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	00 $/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	c7 04 24 09 75 10 f0 	movl   $0xf0107509,(%esp)$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	e8 15 ba ff ff       	call   f0100040 <_panic>$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	89 c3                	mov    %eax,%ebx$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	89 c1                	mov    %eax,%ecx$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	c1 e1 06             	shl    $0x6,%ecx$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	01 f3                	add    %esi,%ebx$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	40                   	inc    %eax$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	3d a0 00 00 00       	cmp    $0xa0,%eax$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	75 ae                	jne    f01045f0 <draw_color+0x19>$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	42                   	inc    %edx$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	81 fa 00 01 00 00    	cmp    $0x100,%edx$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	75 0c                	jne    f0104657 <draw_color+0x80>$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	e8 38 00 00 00       	call   f0104688 <display_buffer>$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	eb 92                	jmp    f01045e4 <draw_color+0xd>$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	8d b2 00 cf 32 f0    	lea    -0xfcd3100(%edx),%esi$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	eb 90                	jmp    f01045f4 <draw_color+0x1d>$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664 <prepare_buffer>:$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	55                   	push   %ebp$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	89 e5                	mov    %esp,%ebp$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	c7 44 24 08 00 fa 00 	movl   $0xfa00,0x8(%esp)$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	00 $/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	00 $/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	c7 04 24 00 cf 32 f0 	movl   $0xf032cf00,(%esp)$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	e8 78 0d 00 00       	call   f01053fe <memset>$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	c9                   	leave  $/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	c3                   	ret    $/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688 <display_buffer>:$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	55                   	push   %ebp$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	89 e5                	mov    %esp,%ebp$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	c7 05 94 93 12 f0 00 	movl   $0xf00a0000,0xf0129394$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	00 0a f0 $/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	c7 44 24 08 00 fa 00 	movl   $0xfa00,0x8(%esp)$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	00 $/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	c7 44 24 04 00 cf 32 	movl   $0xf032cf00,0x4(%esp)$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	f0 $/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	c7 04 24 00 00 0a f0 	movl   $0xf00a0000,(%esp)$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	e8 94 0d 00 00       	call   f0105448 <memmove>$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	c9                   	leave  $/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	c3                   	ret    $/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6 <draw_square>:$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	55                   	push   %ebp$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	57                   	push   %edi$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	56                   	push   %esi$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	53                   	push   %ebx$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	78 0f                	js     f01046d4 <draw_square+0x1e>$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	e9 84 00 00 00       	jmp    f0104758 <draw_square+0xa2>$/;"	l
f01046d4	obj/kern/kernel.asm	/^f01046d4:	c7 44 24 0c 00 8c 10 	movl   $0xf0108c00,0xc(%esp)$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	f0 $/;"	l
f01046dc	obj/kern/kernel.asm	/^f01046dc:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	f0 $/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	00 $/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	c7 04 24 09 8c 10 f0 	movl   $0xf0108c09,(%esp)$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	e8 48 b9 ff ff       	call   f0100040 <_panic>$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	89 c2                	mov    %eax,%edx$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	85 c0                	test   %eax,%eax$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	78 15                	js     f0104713 <draw_square+0x5d>$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	85 f6                	test   %esi,%esi$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	78 11                	js     f0104713 <draw_square+0x5d>$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702:	3d c7 00 00 00       	cmp    $0xc7,%eax$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	7f 0a                	jg     f0104713 <draw_square+0x5d>$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	40                   	inc    %eax$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	81 7d d8 3f 01 00 00 	cmpl   $0x13f,-0x28(%ebp)$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	7e 24                	jle    f0104737 <draw_square+0x81>$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	c7 44 24 0c 48 75 10 	movl   $0xf0107548,0xc(%esp)$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	f0 $/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	f0 $/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	00 $/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	c7 04 24 09 75 10 f0 	movl   $0xf0107509,(%esp)$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	e8 09 b9 ff ff       	call   f0100040 <_panic>$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	89 d3                	mov    %edx,%ebx$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	03 5d e4             	add    -0x1c(%ebp),%ebx$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	8a 55 10             	mov    0x10(%ebp),%dl$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	88 14 3b             	mov    %dl,(%ebx,%edi,1)$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	41                   	inc    %ecx$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	3b 4d 14             	cmp    0x14(%ebp),%ecx$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	75 a4                	jne    f01046f8 <draw_square+0x42>$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	46                   	inc    %esi$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	74 16                	je     f0104776 <draw_square+0xc0>$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	8d 96 00 cf 32 f0    	lea    -0xfcd3100(%esi),%edx$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	eb d9                	jmp    f010474f <draw_square+0x99>$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	5b                   	pop    %ebx$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	5e                   	pop    %esi$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	5f                   	pop    %edi$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	5d                   	pop    %ebp$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	c3                   	ret    $/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780 <protag_infrontof_box>:$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	55                   	push   %ebp$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	89 e5                	mov    %esp,%ebp$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	03 05 18 c9 33 f0    	add    0xf033c918,%eax$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	39 05 00 c9 33 f0    	cmp    %eax,0xf033c900$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	75 10                	jne    f01047a1 <protag_infrontof_box+0x21>$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	89 d1                	mov    %edx,%ecx$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	03 0d 1c c9 33 f0    	add    0xf033c91c,%ecx$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	39 0d 04 c9 33 f0    	cmp    %ecx,0xf033c904$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	74 37                	je     f01047d8 <protag_infrontof_box+0x58>$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	3b 05 08 c9 33 f0    	cmp    0xf033c908,%eax$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	75 10                	jne    f01047b9 <protag_infrontof_box+0x39>$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	89 d1                	mov    %edx,%ecx$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	03 0d 1c c9 33 f0    	add    0xf033c91c,%ecx$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	39 0d 0c c9 33 f0    	cmp    %ecx,0xf033c90c$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	74 26                	je     f01047df <protag_infrontof_box+0x5f>$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	3b 05 10 c9 33 f0    	cmp    0xf033c910,%eax$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	75 25                	jne    f01047e6 <protag_infrontof_box+0x66>$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	03 15 1c c9 33 f0    	add    0xf033c91c,%edx$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	39 15 14 c9 33 f0    	cmp    %edx,0xf033c914$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	0f 94 c0             	sete   %al$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	eb 13                	jmp    f01047eb <protag_infrontof_box+0x6b>$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	eb 0c                	jmp    f01047eb <protag_infrontof_box+0x6b>$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	eb 05                	jmp    f01047eb <protag_infrontof_box+0x6b>$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	5d                   	pop    %ebp$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	c3                   	ret    $/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed <protag_move>:$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	55                   	push   %ebp$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	57                   	push   %edi$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	56                   	push   %esi$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	53                   	push   %ebx$/;"	l
f01047f3	obj/kern/kernel.asm	/^f01047f3:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	89 c3                	mov    %eax,%ebx$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	89 d6                	mov    %edx,%esi$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	89 d0                	mov    %edx,%eax$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	03 05 1c c9 33 f0    	add    0xf033c91c,%eax$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	8d 14 c0             	lea    (%eax,%eax,8),%edx$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	89 d8                	mov    %ebx,%eax$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	03 05 18 c9 33 f0    	add    0xf033c918,%eax$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	01 d0                	add    %edx,%eax$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	83 3c 85 60 8c 10 f0 	cmpl   $0x1,-0xfef73a0(,%eax,4)$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	01 $/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	75 11                	jne    f010482a <protag_move+0x3d>$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	c7 04 24 16 8c 10 f0 	movl   $0xf0108c16,(%esp)$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	e8 f9 e9 ff ff       	call   f010321e <cprintf>$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	e9 1b 01 00 00       	jmp    f0104945 <protag_move+0x158>$/;"	l
f010482a	obj/kern/kernel.asm	/^f010482a:	89 f2                	mov    %esi,%edx$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	89 d8                	mov    %ebx,%eax$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	e8 4d ff ff ff       	call   f0104780 <protag_infrontof_box>$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	85 c0                	test   %eax,%eax$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	0f 84 eb 00 00 00    	je     f0104926 <protag_move+0x139>$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	8b 14 cd 04 c9 33 f0 	mov    -0xfcc36fc(,%ecx,8),%edx$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	01 f2                	add    %esi,%edx$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	89 da                	mov    %ebx,%edx$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	03 14 cd 00 c9 33 f0 	add    -0xfcc3700(,%ecx,8),%edx$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	8d 3c ff             	lea    (%edi,%edi,8),%edi$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	01 d7                	add    %edx,%edi$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	83 3c bd 60 8c 10 f0 	cmpl   $0x1,-0xfef73a0(,%edi,4)$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	01 $/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	75 11                	jne    f0104879 <protag_move+0x8c>$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	c7 04 24 20 8c 10 f0 	movl   $0xf0108c20,(%esp)$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	e8 aa e9 ff ff       	call   f010321e <cprintf>$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	e9 cc 00 00 00       	jmp    f0104945 <protag_move+0x158>$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	85 c9                	test   %ecx,%ecx$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	74 3c                	je     f01048b9 <protag_move+0xcc>$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	3b 15 08 c9 33 f0    	cmp    0xf033c908,%edx$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	75 0b                	jne    f0104890 <protag_move+0xa3>$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	3b 3d 0c c9 33 f0    	cmp    0xf033c90c,%edi$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	74 13                	je     f01048a3 <protag_move+0xb6>$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	3b 15 10 c9 33 f0    	cmp    0xf033c910,%edx$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	75 1c                	jne    f01048b4 <protag_move+0xc7>$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010489b	obj/kern/kernel.asm	/^f010489b:	3b 3d 14 c9 33 f0    	cmp    0xf033c914,%edi$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	75 11                	jne    f01048b4 <protag_move+0xc7>$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	c7 04 24 2a 8c 10 f0 	movl   $0xf0108c2a,(%esp)$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	e8 6f e9 ff ff       	call   f010321e <cprintf>$/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	e9 91 00 00 00       	jmp    f0104945 <protag_move+0x158>$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	74 39                	je     f01048f2 <protag_move+0x105>$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	3b 15 00 c9 33 f0    	cmp    0xf033c900,%edx$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	75 0b                	jne    f01048cc <protag_move+0xdf>$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	3b 3d 04 c9 33 f0    	cmp    0xf033c904,%edi$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	74 13                	je     f01048df <protag_move+0xf2>$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	3b 15 10 c9 33 f0    	cmp    0xf033c910,%edx$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	75 19                	jne    f01048ed <protag_move+0x100>$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	3b 3d 14 c9 33 f0    	cmp    0xf033c914,%edi$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	75 0e                	jne    f01048ed <protag_move+0x100>$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	c7 04 24 34 8c 10 f0 	movl   $0xf0108c34,(%esp)$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	e8 33 e9 ff ff       	call   f010321e <cprintf>$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	eb 58                	jmp    f0104945 <protag_move+0x158>$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	74 42                	je     f0104934 <protag_move+0x147>$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	3b 15 00 c9 33 f0    	cmp    0xf033c900,%edx$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	75 0b                	jne    f0104905 <protag_move+0x118>$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	3b 0d 04 c9 33 f0    	cmp    0xf033c904,%ecx$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	74 13                	je     f0104918 <protag_move+0x12b>$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	3b 15 08 c9 33 f0    	cmp    0xf033c908,%edx$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	75 27                	jne    f0104934 <protag_move+0x147>$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	3b 3d 0c c9 33 f0    	cmp    0xf033c90c,%edi$/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	75 1c                	jne    f0104934 <protag_move+0x147>$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	c7 04 24 3e 8c 10 f0 	movl   $0xf0108c3e,(%esp)$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	e8 fa e8 ff ff       	call   f010321e <cprintf>$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	eb 1f                	jmp    f0104945 <protag_move+0x158>$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	01 1d 18 c9 33 f0    	add    %ebx,0xf033c918$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	01 35 1c c9 33 f0    	add    %esi,0xf033c91c$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	eb 11                	jmp    f0104945 <protag_move+0x158>$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	48                   	dec    %eax$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	01 1c c5 00 c9 33 f0 	add    %ebx,-0xfcc3700(,%eax,8)$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	01 34 c5 04 c9 33 f0 	add    %esi,-0xfcc36fc(,%eax,8)$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	eb e1                	jmp    f0104926 <protag_move+0x139>$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	5b                   	pop    %ebx$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	5e                   	pop    %esi$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	5f                   	pop    %edi$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	5d                   	pop    %ebp$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	c3                   	ret    $/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d <game_loop>:$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	55                   	push   %ebp$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	c7 05 18 c9 33 f0 03 	movl   $0x3,0xf033c918$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	00 00 00 $/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	c7 05 1c c9 33 f0 01 	movl   $0x1,0xf033c91c$/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	00 00 00 $/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	c7 05 00 c9 33 f0 03 	movl   $0x3,0xf033c900$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	00 00 00 $/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	c7 05 04 c9 33 f0 02 	movl   $0x2,0xf033c904$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	00 00 00 $/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	c7 05 08 c9 33 f0 02 	movl   $0x2,0xf033c908$/;"	l
f0104982	obj/kern/kernel.asm	/^f0104982:	00 00 00 $/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	c7 05 0c c9 33 f0 02 	movl   $0x2,0xf033c90c$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	00 00 00 $/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	c7 05 10 c9 33 f0 02 	movl   $0x2,0xf033c910$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	00 00 00 $/;"	l
f0104999	obj/kern/kernel.asm	/^f0104999:	c7 05 14 c9 33 f0 03 	movl   $0x3,0xf033c914$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	00 00 00 $/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	e8 c0 00 00 00       	call   f0104a68 <game_display>$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	e8 ae bd ff ff       	call   f010075b <getchar>$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	75 11                	jne    f01049c3 <game_loop+0x76>$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	e8 2c fe ff ff       	call   f01047ed <protag_move>$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	eb 43                	jmp    f0104a06 <game_loop+0xb9>$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	75 0e                	jne    f01049d6 <game_loop+0x89>$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	b0 00                	mov    $0x0,%al$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	e8 19 fe ff ff       	call   f01047ed <protag_move>$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	eb 30                	jmp    f0104a06 <game_loop+0xb9>$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	75 0e                	jne    f01049e9 <game_loop+0x9c>$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	b0 01                	mov    $0x1,%al$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	e8 06 fe ff ff       	call   f01047ed <protag_move>$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	eb 1d                	jmp    f0104a06 <game_loop+0xb9>$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	75 0e                	jne    f01049fc <game_loop+0xaf>$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	b0 00                	mov    $0x0,%al$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	e8 f3 fd ff ff       	call   f01047ed <protag_move>$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	eb 0a                	jmp    f0104a06 <game_loop+0xb9>$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	83 f8 72             	cmp    $0x72,%eax$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	75 a7                	jne    f01049a8 <game_loop+0x5b>$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	e9 4d ff ff ff       	jmp    f0104953 <game_loop+0x6>$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	e8 5d 00 00 00       	call   f0104a68 <game_display>$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	a1 04 c9 33 f0       	mov    0xf033c904,%eax$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	03 05 00 c9 33 f0    	add    0xf033c900,%eax$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	83 3c 85 60 8c 10 f0 	cmpl   $0x2,-0xfef73a0(,%eax,4)$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	02 $/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	75 85                	jne    f01049a8 <game_loop+0x5b>$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	a1 0c c9 33 f0       	mov    0xf033c90c,%eax$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	03 05 08 c9 33 f0    	add    0xf033c908,%eax$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	83 3c 85 60 8c 10 f0 	cmpl   $0x2,-0xfef73a0(,%eax,4)$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	02 $/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	0f 85 69 ff ff ff    	jne    f01049a8 <game_loop+0x5b>$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	a1 14 c9 33 f0       	mov    0xf033c914,%eax$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	03 05 10 c9 33 f0    	add    0xf033c910,%eax$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	83 3c 85 60 8c 10 f0 	cmpl   $0x2,-0xfef73a0(,%eax,4)$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	02 $/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	0f 85 4d ff ff ff    	jne    f01049a8 <game_loop+0x5b>$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	e8 00 fa ff ff       	call   f0104460 <draw_tux>$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	e9 43 ff ff ff       	jmp    f01049a8 <game_loop+0x5b>$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	00 00                	add    %al,(%eax)$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68 <game_display>:$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	55                   	push   %ebp$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	57                   	push   %edi$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	56                   	push   %esi$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	53                   	push   %ebx$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	c7 04 24 a4 8d 10 f0 	movl   $0xf0108da4,(%esp)$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	e8 a1 e7 ff ff       	call   f010321e <cprintf>$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	e9 ac 01 00 00       	jmp    f0104c3c <game_display+0x1d4>$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	8b 06                	mov    (%esi),%eax$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	85 c0                	test   %eax,%eax$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	75 21                	jne    f0104ab7 <game_display+0x4f>$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	00 $/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	c7 44 24 08 09 00 00 	movl   $0x9,0x8(%esp)$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	00 $/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	e8 04 fc ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	e9 8d 00 00 00       	jmp    f0104b44 <game_display+0xdc>$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	75 1e                	jne    f0104ada <game_display+0x72>$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	00 $/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	c7 44 24 08 14 00 00 	movl   $0x14,0x8(%esp)$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	00 $/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104ad3	obj/kern/kernel.asm	/^f0104ad3:	e8 de fb ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	eb 6a                	jmp    f0104b44 <game_display+0xdc>$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	75 1e                	jne    f0104afd <game_display+0x95>$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	00 $/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	c7 44 24 08 06 00 00 	movl   $0x6,0x8(%esp)$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	00 $/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	e8 bb fb ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	eb 47                	jmp    f0104b44 <game_display+0xdc>$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	75 1e                	jne    f0104b20 <game_display+0xb8>$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	00 $/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	00 $/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	e8 98 fb ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	eb 24                	jmp    f0104b44 <game_display+0xdc>$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	c7 44 24 0c 8e 66 10 	movl   $0xf010668e,0xc(%esp)$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	f0 $/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	c7 44 24 08 3a 66 10 	movl   $0xf010663a,0x8(%esp)$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	f0 $/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	00 $/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	c7 04 24 b5 8d 10 f0 	movl   $0xf0108db5,(%esp)$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	e8 fc b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	83 c6 04             	add    $0x4,%esi$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	83 c3 14             	add    $0x14,%ebx$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	81 fb b4 00 00 00    	cmp    $0xb4,%ebx$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	0f 85 3a ff ff ff    	jne    f0104a90 <game_display+0x28>$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	ff 45 e4             	incl   -0x1c(%ebp)$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	83 45 e0 14          	addl   $0x14,-0x20(%ebp)$/;"	l
f0104b5d	obj/kern/kernel.asm	/^f0104b5d:	83 7d e4 09          	cmpl   $0x9,-0x1c(%ebp)$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	0f 85 d5 00 00 00    	jne    f0104c3c <game_display+0x1d4>$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	00 $/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	c7 44 24 08 0e 00 00 	movl   $0xe,0x8(%esp)$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	00 $/;"	l
f0104b77	obj/kern/kernel.asm	/^f0104b77:	a1 1c c9 33 f0       	mov    0xf033c91c,%eax$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	a1 18 c9 33 f0       	mov    0xf033c918,%eax$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	e8 1d fb ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	00 $/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	00 $/;"	l
f0104ba9	obj/kern/kernel.asm	/^f0104ba9:	a1 04 c9 33 f0       	mov    0xf033c904,%eax$/;"	l
f0104bae	obj/kern/kernel.asm	/^f0104bae:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	a1 00 c9 33 f0       	mov    0xf033c900,%eax$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	e8 eb fa ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	00 $/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	00 $/;"	l
f0104bdb	obj/kern/kernel.asm	/^f0104bdb:	a1 0c c9 33 f0       	mov    0xf033c90c,%eax$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	a1 08 c9 33 f0       	mov    0xf033c908,%eax$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	e8 b9 fa ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	00 $/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	00 $/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	a1 14 c9 33 f0       	mov    0xf033c914,%eax$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	a1 10 c9 33 f0       	mov    0xf033c910,%eax$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	e8 87 fa ff ff       	call   f01046b6 <draw_square>$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	e8 54 fa ff ff       	call   f0104688 <display_buffer>$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104c37	obj/kern/kernel.asm	/^f0104c37:	5b                   	pop    %ebx$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	5e                   	pop    %esi$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	5f                   	pop    %edi$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	5d                   	pop    %ebp$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	c3                   	ret    $/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	8d 04 d2             	lea    (%edx,%edx,8),%eax$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	8d 34 85 e0 8d 10 f0 	lea    -0xfef7220(,%eax,4),%esi$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	e9 3a fe ff ff       	jmp    f0104a90 <game_display+0x28>$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58 <printnum>:$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	55                   	push   %ebp$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	57                   	push   %edi$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	56                   	push   %esi$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	53                   	push   %ebx$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	89 d7                	mov    %edx,%edi$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	85 c0                	test   %eax,%eax$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	75 08                	jne    f0104c84 <printnum+0x2c>$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	77 57                	ja     f0104cdb <printnum+0x83>$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	4b                   	dec    %ebx$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104c8d	obj/kern/kernel.asm	/^f0104c8d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	00 $/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	e8 e6 11 00 00       	call   f0105e9c <__udivdi3>$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	89 fa                	mov    %edi,%edx$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	e8 89 ff ff ff       	call   f0104c58 <printnum>$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	eb 0f                	jmp    f0104ce0 <printnum+0x88>$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	4b                   	dec    %ebx$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	85 db                	test   %ebx,%ebx$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	7f f1                	jg     f0104cd1 <printnum+0x79>$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	00 $/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	e8 b3 12 00 00       	call   f0105fbc <__umoddi3>$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	0f be 80 24 8f 10 f0 	movsbl -0xfef70dc(%eax),%eax$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	5b                   	pop    %ebx$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	5e                   	pop    %esi$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	5f                   	pop    %edi$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	5d                   	pop    %ebp$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	c3                   	ret    $/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22 <getuint>:$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	55                   	push   %ebp$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	7e 0e                	jle    f0104d38 <getuint+0x16>$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	8b 10                	mov    (%eax),%edx$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	8b 02                	mov    (%edx),%eax$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	eb 22                	jmp    f0104d5a <getuint+0x38>$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	85 d2                	test   %edx,%edx$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	74 10                	je     f0104d4c <getuint+0x2a>$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	8b 10                	mov    (%eax),%edx$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	8b 02                	mov    (%edx),%eax$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	eb 0e                	jmp    f0104d5a <getuint+0x38>$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	8b 10                	mov    (%eax),%edx$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	8b 02                	mov    (%edx),%eax$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	5d                   	pop    %ebp$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	c3                   	ret    $/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c <sprintputch>:$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	55                   	push   %ebp$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d5f	obj/kern/kernel.asm	/^f0104d5f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	ff 40 08             	incl   0x8(%eax)$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	8b 10                	mov    (%eax),%edx$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	73 08                	jae    f0104d74 <sprintputch+0x18>$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	88 0a                	mov    %cl,(%edx)$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	42                   	inc    %edx$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	89 10                	mov    %edx,(%eax)$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	5d                   	pop    %ebp$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	c3                   	ret    $/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76 <printfmt>:$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	55                   	push   %ebp$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	e8 02 00 00 00       	call   f0104d9e <vprintfmt>$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	c9                   	leave  $/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	c3                   	ret    $/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e <vprintfmt>:$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	55                   	push   %ebp$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	57                   	push   %edi$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	56                   	push   %esi$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	53                   	push   %ebx$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	eb 12                	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	85 c0                	test   %eax,%eax$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	0f 84 8b 03 00 00    	je     f0105142 <vprintfmt+0x3a4>$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	46                   	inc    %esi$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	75 e5                	jne    f0104daf <vprintfmt+0x11>$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0104dd5	obj/kern/kernel.asm	/^f0104dd5:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	eb 26                	jmp    f0104e0e <vprintfmt+0x70>$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	eb 1d                	jmp    f0104e0e <vprintfmt+0x70>$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	eb 14                	jmp    f0104e0e <vprintfmt+0x70>$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	eb 08                	jmp    f0104e0e <vprintfmt+0x70>$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0104e09	obj/kern/kernel.asm	/^f0104e09:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	8d 56 01             	lea    0x1(%esi),%edx$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	8a 16                	mov    (%esi),%dl$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	83 ea 23             	sub    $0x23,%edx$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	0f 87 01 03 00 00    	ja     f0105126 <vprintfmt+0x388>$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	ff 24 95 e0 8f 10 f0 	jmp    *-0xfef7020(,%edx,4)$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	77 2a                	ja     f0104e73 <vprintfmt+0xd5>$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	46                   	inc    %esi$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	eb eb                	jmp    f0104e37 <vprintfmt+0x99>$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	8b 38                	mov    (%eax),%edi$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	eb 17                	jmp    f0104e73 <vprintfmt+0xd5>$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	78 98                	js     f0104dfa <vprintfmt+0x5c>$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	eb a7                	jmp    f0104e0e <vprintfmt+0x70>$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	eb 9b                	jmp    f0104e0e <vprintfmt+0x70>$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	79 95                	jns    f0104e0e <vprintfmt+0x70>$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	eb 8b                	jmp    f0104e06 <vprintfmt+0x68>$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	41                   	inc    %ecx$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	eb 8d                	jmp    f0104e0e <vprintfmt+0x70>$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	8b 00                	mov    (%eax),%eax$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	e9 23 ff ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	8b 00                	mov    (%eax),%eax$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	85 c0                	test   %eax,%eax$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	79 02                	jns    f0104eaf <vprintfmt+0x111>$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	f7 d8                	neg    %eax$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	89 c2                	mov    %eax,%edx$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	7f 0b                	jg     f0104ec1 <vprintfmt+0x123>$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	8b 04 85 40 91 10 f0 	mov    -0xfef6ec0(,%eax,4),%eax$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	85 c0                	test   %eax,%eax$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	75 23                	jne    f0104ee4 <vprintfmt+0x146>$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	c7 44 24 08 3c 8f 10 	movl   $0xf0108f3c,0x8(%esp)$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	f0 $/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	e8 9a fe ff ff       	call   f0104d76 <printfmt>$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	e9 dd fe ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	c7 44 24 08 4c 66 10 	movl   $0xf010664c,0x8(%esp)$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	f0 $/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	e8 77 fe ff ff       	call   f0104d76 <printfmt>$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	e9 ba fe ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	8b 30                	mov    (%eax),%esi$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	85 f6                	test   %esi,%esi$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	75 05                	jne    f0104f23 <vprintfmt+0x185>$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	be 35 8f 10 f0       	mov    $0xf0108f35,%esi$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	0f 8e 84 00 00 00    	jle    f0104fb1 <vprintfmt+0x213>$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	74 7e                	je     f0104fb1 <vprintfmt+0x213>$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	e8 73 03 00 00       	call   f01052b2 <strnlen>$/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	29 c2                	sub    %eax,%edx$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	89 de                	mov    %ebx,%esi$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	89 d3                	mov    %edx,%ebx$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	89 c7                	mov    %eax,%edi$/;"	l
f0104f57	obj/kern/kernel.asm	/^f0104f57:	eb 0b                	jmp    f0104f64 <vprintfmt+0x1c6>$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	4b                   	dec    %ebx$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	85 db                	test   %ebx,%ebx$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	7f f1                	jg     f0104f59 <vprintfmt+0x1bb>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	89 f3                	mov    %esi,%ebx$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	85 c0                	test   %eax,%eax$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	79 05                	jns    f0104f7c <vprintfmt+0x1de>$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f7c	obj/kern/kernel.asm	/^f0104f7c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	29 c2                	sub    %eax,%edx$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	eb 2b                	jmp    f0104fb1 <vprintfmt+0x213>$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	74 18                	je     f0104fa4 <vprintfmt+0x206>$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	76 10                	jbe    f0104fa4 <vprintfmt+0x206>$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	eb 0a                	jmp    f0104fae <vprintfmt+0x210>$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	46                   	inc    %esi$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	85 c0                	test   %eax,%eax$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	74 21                	je     f0104fda <vprintfmt+0x23c>$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	85 ff                	test   %edi,%edi$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	78 c9                	js     f0104f86 <vprintfmt+0x1e8>$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	4f                   	dec    %edi$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	79 c6                	jns    f0104f86 <vprintfmt+0x1e8>$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	89 de                	mov    %ebx,%esi$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	eb 18                	jmp    f0104fe2 <vprintfmt+0x244>$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	ff d7                	call   *%edi$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	4b                   	dec    %ebx$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	eb 08                	jmp    f0104fe2 <vprintfmt+0x244>$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	89 de                	mov    %ebx,%esi$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	85 db                	test   %ebx,%ebx$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	7f e4                	jg     f0104fca <vprintfmt+0x22c>$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	89 f3                	mov    %esi,%ebx$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	e9 ce fd ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	7e 10                	jle    f0105008 <vprintfmt+0x26a>$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	8b 30                	mov    (%eax),%esi$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	eb 26                	jmp    f010502e <vprintfmt+0x290>$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	85 c9                	test   %ecx,%ecx$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	74 12                	je     f010501e <vprintfmt+0x280>$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	8b 30                	mov    (%eax),%esi$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	89 f7                	mov    %esi,%edi$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	eb 10                	jmp    f010502e <vprintfmt+0x290>$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	8b 30                	mov    (%eax),%esi$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	89 f7                	mov    %esi,%edi$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	85 ff                	test   %edi,%edi$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	78 0a                	js     f010503c <vprintfmt+0x29e>$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	e9 ac 00 00 00       	jmp    f01050e8 <vprintfmt+0x34a>$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	f7 de                	neg    %esi$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	83 d7 00             	adc    $0x0,%edi$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	f7 df                	neg    %edi$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	e9 8d 00 00 00       	jmp    f01050e8 <vprintfmt+0x34a>$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	89 ca                	mov    %ecx,%edx$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	e8 bd fc ff ff       	call   f0104d22 <getuint>$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	89 c6                	mov    %eax,%esi$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	89 d7                	mov    %edx,%edi$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	eb 78                	jmp    f01050e8 <vprintfmt+0x34a>$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	e9 1f fd ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	8b 30                	mov    (%eax),%esi$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	eb 13                	jmp    f01050e8 <vprintfmt+0x34a>$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	89 ca                	mov    %ecx,%edx$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	e8 43 fc ff ff       	call   f0104d22 <getuint>$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	89 c6                	mov    %eax,%esi$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	89 d7                	mov    %edx,%edi$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	89 da                	mov    %ebx,%edx$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	e8 4c fb ff ff       	call   f0104c58 <printnum>$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	e9 ad fc ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010511b	obj/kern/kernel.asm	/^f010511b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	e9 9b fc ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	eb 01                	jmp    f0105137 <vprintfmt+0x399>$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	4e                   	dec    %esi$/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	75 f9                	jne    f0105136 <vprintfmt+0x398>$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	e9 7f fc ff ff       	jmp    f0104dc1 <vprintfmt+0x23>$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	5b                   	pop    %ebx$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	5e                   	pop    %esi$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	5f                   	pop    %edi$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	5d                   	pop    %ebp$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	c3                   	ret    $/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a <vsnprintf>:$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	55                   	push   %ebp$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	89 e5                	mov    %esp,%ebp$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	85 c0                	test   %eax,%eax$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	74 30                	je     f010519b <vsnprintf+0x51>$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	85 d2                	test   %edx,%edx$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	7e 33                	jle    f01051a2 <vsnprintf+0x58>$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	c7 04 24 5c 4d 10 f0 	movl   $0xf0104d5c,(%esp)$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	e8 0e fc ff ff       	call   f0104d9e <vprintfmt>$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105196	obj/kern/kernel.asm	/^f0105196:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	eb 0c                	jmp    f01051a7 <vsnprintf+0x5d>$/;"	l
f010519b	obj/kern/kernel.asm	/^f010519b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	eb 05                	jmp    f01051a7 <vsnprintf+0x5d>$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	c9                   	leave  $/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	c3                   	ret    $/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9 <snprintf>:$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	55                   	push   %ebp$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01051c7	obj/kern/kernel.asm	/^f01051c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	e8 7b ff ff ff       	call   f010514a <vsnprintf>$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	c9                   	leave  $/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	c3                   	ret    $/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	00 00                	add    %al,(%eax)$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4 <readline>:$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	55                   	push   %ebp$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	57                   	push   %edi$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	56                   	push   %esi$/;"	l
f01051d9	obj/kern/kernel.asm	/^f01051d9:	53                   	push   %ebx$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	85 c0                	test   %eax,%eax$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	74 10                	je     f01051f4 <readline+0x20>$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	c7 04 24 4c 66 10 f0 	movl   $0xf010664c,(%esp)$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	e8 2a e0 ff ff       	call   f010321e <cprintf>$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	e8 6c b5 ff ff       	call   f010076c <iscons>$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	89 c7                	mov    %eax,%edi$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	e8 4f b5 ff ff       	call   f010075b <getchar>$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	89 c3                	mov    %eax,%ebx$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	85 c0                	test   %eax,%eax$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	79 17                	jns    f0105229 <readline+0x55>$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	c7 04 24 68 91 10 f0 	movl   $0xf0109168,(%esp)$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	e8 fc df ff ff       	call   f010321e <cprintf>$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	eb 69                	jmp    f0105292 <readline+0xbe>$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	74 05                	je     f0105233 <readline+0x5f>$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	75 17                	jne    f010524a <readline+0x76>$/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233:	85 f6                	test   %esi,%esi$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	7e 13                	jle    f010524a <readline+0x76>$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	85 ff                	test   %edi,%edi$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	74 0c                	je     f0105247 <readline+0x73>$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	e8 04 b5 ff ff       	call   f010074b <cputchar>$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	4e                   	dec    %esi$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	eb bd                	jmp    f0105207 <readline+0x33>$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	7e 1d                	jle    f010526c <readline+0x98>$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	7f 15                	jg     f010526c <readline+0x98>$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	85 ff                	test   %edi,%edi$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	74 08                	je     f0105263 <readline+0x8f>$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	e8 e8 b4 ff ff       	call   f010074b <cputchar>$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	88 9e e0 ca 32 f0    	mov    %bl,-0xfcd3520(%esi)$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	46                   	inc    %esi$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	eb 9b                	jmp    f0105207 <readline+0x33>$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	74 05                	je     f0105276 <readline+0xa2>$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	75 91                	jne    f0105207 <readline+0x33>$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	85 ff                	test   %edi,%edi$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	74 0c                	je     f0105286 <readline+0xb2>$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	e8 c5 b4 ff ff       	call   f010074b <cputchar>$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	c6 86 e0 ca 32 f0 00 	movb   $0x0,-0xfcd3520(%esi)$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	b8 e0 ca 32 f0       	mov    $0xf032cae0,%eax$/;"	l
f0105292	obj/kern/kernel.asm	/^f0105292:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	5b                   	pop    %ebx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	5e                   	pop    %esi$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	5f                   	pop    %edi$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	5d                   	pop    %ebp$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	c3                   	ret    $/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c <strlen>:$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	55                   	push   %ebp$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	89 e5                	mov    %esp,%ebp$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	eb 01                	jmp    f01052aa <strlen+0xe>$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	40                   	inc    %eax$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	75 f9                	jne    f01052a9 <strlen+0xd>$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	5d                   	pop    %ebp$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	c3                   	ret    $/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2 <strnlen>:$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	55                   	push   %ebp$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	eb 01                	jmp    f01052c3 <strnlen+0x11>$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	40                   	inc    %eax$/;"	l
f01052c3	obj/kern/kernel.asm	/^f01052c3:	39 d0                	cmp    %edx,%eax$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	74 06                	je     f01052cd <strnlen+0x1b>$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	75 f5                	jne    f01052c2 <strnlen+0x10>$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	5d                   	pop    %ebp$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	c3                   	ret    $/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf <strcpy>:$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	55                   	push   %ebp$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	53                   	push   %ebx$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	42                   	inc    %edx$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	84 c9                	test   %cl,%cl$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	75 f5                	jne    f01052de <strcpy+0xf>$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	5b                   	pop    %ebx$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	5d                   	pop    %ebp$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	c3                   	ret    $/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec <strcat>:$/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec:	55                   	push   %ebp$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	53                   	push   %ebx$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	e8 9e ff ff ff       	call   f010529c <strlen>$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	01 d8                	add    %ebx,%eax$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	e8 c0 ff ff ff       	call   f01052cf <strcpy>$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	89 d8                	mov    %ebx,%eax$/;"	l
f0105311	obj/kern/kernel.asm	/^f0105311:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	5b                   	pop    %ebx$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	5d                   	pop    %ebp$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	c3                   	ret    $/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317 <strncpy>:$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	55                   	push   %ebp$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	89 e5                	mov    %esp,%ebp$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	56                   	push   %esi$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	53                   	push   %ebx$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105322	obj/kern/kernel.asm	/^f0105322:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	eb 0c                	jmp    f0105338 <strncpy+0x21>$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	8a 1a                	mov    (%edx),%bl$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	41                   	inc    %ecx$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	39 f1                	cmp    %esi,%ecx$/;"	l
f010533a	obj/kern/kernel.asm	/^f010533a:	75 f0                	jne    f010532c <strncpy+0x15>$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	5b                   	pop    %ebx$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	5e                   	pop    %esi$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	5d                   	pop    %ebp$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	c3                   	ret    $/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340 <strlcpy>:$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	55                   	push   %ebp$/;"	l
f0105341	obj/kern/kernel.asm	/^f0105341:	89 e5                	mov    %esp,%ebp$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	56                   	push   %esi$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	53                   	push   %ebx$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	85 d2                	test   %edx,%edx$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	75 0a                	jne    f010535c <strlcpy+0x1c>$/;"	l
f0105352	obj/kern/kernel.asm	/^f0105352:	89 f0                	mov    %esi,%eax$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	eb 1a                	jmp    f0105370 <strlcpy+0x30>$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	88 18                	mov    %bl,(%eax)$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	40                   	inc    %eax$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	41                   	inc    %ecx$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	eb 02                	jmp    f010535e <strlcpy+0x1e>$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	89 f0                	mov    %esi,%eax$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	4a                   	dec    %edx$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	74 0a                	je     f010536b <strlcpy+0x2b>$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	8a 19                	mov    (%ecx),%bl$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	84 db                	test   %bl,%bl$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	75 ef                	jne    f0105356 <strlcpy+0x16>$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	89 c2                	mov    %eax,%edx$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	eb 02                	jmp    f010536d <strlcpy+0x2d>$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	89 c2                	mov    %eax,%edx$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	29 f0                	sub    %esi,%eax$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	5b                   	pop    %ebx$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	5e                   	pop    %esi$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	5d                   	pop    %ebp$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	c3                   	ret    $/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376 <strcmp>:$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	55                   	push   %ebp$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	89 e5                	mov    %esp,%ebp$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	eb 02                	jmp    f0105383 <strcmp+0xd>$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	41                   	inc    %ecx$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	42                   	inc    %edx$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	8a 01                	mov    (%ecx),%al$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	84 c0                	test   %al,%al$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	74 04                	je     f010538d <strcmp+0x17>$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	3a 02                	cmp    (%edx),%al$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	74 f4                	je     f0105381 <strcmp+0xb>$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105390	obj/kern/kernel.asm	/^f0105390:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	29 d0                	sub    %edx,%eax$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	5d                   	pop    %ebp$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	c3                   	ret    $/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397 <strncmp>:$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	55                   	push   %ebp$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	89 e5                	mov    %esp,%ebp$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	53                   	push   %ebx$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	eb 03                	jmp    f01053a9 <strncmp+0x12>$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	4a                   	dec    %edx$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	40                   	inc    %eax$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	41                   	inc    %ecx$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	85 d2                	test   %edx,%edx$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	74 14                	je     f01053c1 <strncmp+0x2a>$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	8a 18                	mov    (%eax),%bl$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	84 db                	test   %bl,%bl$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	74 04                	je     f01053b7 <strncmp+0x20>$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	3a 19                	cmp    (%ecx),%bl$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	74 ef                	je     f01053a6 <strncmp+0xf>$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	29 d0                	sub    %edx,%eax$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	eb 05                	jmp    f01053c6 <strncmp+0x2f>$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	5b                   	pop    %ebx$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	5d                   	pop    %ebp$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	c3                   	ret    $/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9 <strchr>:$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	55                   	push   %ebp$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	eb 05                	jmp    f01053d9 <strchr+0x10>$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	38 ca                	cmp    %cl,%dl$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	74 0c                	je     f01053e4 <strchr+0x1b>$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	40                   	inc    %eax$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	8a 10                	mov    (%eax),%dl$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	84 d2                	test   %dl,%dl$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	75 f5                	jne    f01053d4 <strchr+0xb>$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	5d                   	pop    %ebp$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	c3                   	ret    $/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6 <strfind>:$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	55                   	push   %ebp$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01053ef	obj/kern/kernel.asm	/^f01053ef:	eb 05                	jmp    f01053f6 <strfind+0x10>$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	38 ca                	cmp    %cl,%dl$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	74 07                	je     f01053fc <strfind+0x16>$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	40                   	inc    %eax$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	8a 10                	mov    (%eax),%dl$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	84 d2                	test   %dl,%dl$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	75 f5                	jne    f01053f1 <strfind+0xb>$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	5d                   	pop    %ebp$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	c3                   	ret    $/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe <memset>:$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	55                   	push   %ebp$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	57                   	push   %edi$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	56                   	push   %esi$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	53                   	push   %ebx$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105407	obj/kern/kernel.asm	/^f0105407:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	85 c9                	test   %ecx,%ecx$/;"	l
f010540f	obj/kern/kernel.asm	/^f010540f:	74 30                	je     f0105441 <memset+0x43>$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	75 25                	jne    f010543e <memset+0x40>$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	75 20                	jne    f010543e <memset+0x40>$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	89 d3                	mov    %edx,%ebx$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	89 d6                	mov    %edx,%esi$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	89 d0                	mov    %edx,%eax$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	09 f0                	or     %esi,%eax$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	09 d0                	or     %edx,%eax$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	09 d8                	or     %ebx,%eax$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	fc                   	cld    $/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	eb 03                	jmp    f0105441 <memset+0x43>$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	fc                   	cld    $/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	89 f8                	mov    %edi,%eax$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	5b                   	pop    %ebx$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	5e                   	pop    %esi$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	5f                   	pop    %edi$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	5d                   	pop    %ebp$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	c3                   	ret    $/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448 <memmove>:$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	55                   	push   %ebp$/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	89 e5                	mov    %esp,%ebp$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	57                   	push   %edi$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	56                   	push   %esi$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	39 c6                	cmp    %eax,%esi$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	73 34                	jae    f010548e <memmove+0x46>$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	39 d0                	cmp    %edx,%eax$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	73 2d                	jae    f010548e <memmove+0x46>$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	75 1b                	jne    f0105484 <memmove+0x3c>$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	75 13                	jne    f0105484 <memmove+0x3c>$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	75 0e                	jne    f0105484 <memmove+0x3c>$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010547f	obj/kern/kernel.asm	/^f010547f:	fd                   	std    $/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	eb 07                	jmp    f010548b <memmove+0x43>$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	4f                   	dec    %edi$/;"	l
f0105485	obj/kern/kernel.asm	/^f0105485:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	fd                   	std    $/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	fc                   	cld    $/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	eb 20                	jmp    f01054ae <memmove+0x66>$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	75 13                	jne    f01054a9 <memmove+0x61>$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	a8 03                	test   $0x3,%al$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	75 0f                	jne    f01054a9 <memmove+0x61>$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	75 0a                	jne    f01054a9 <memmove+0x61>$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01054a2	obj/kern/kernel.asm	/^f01054a2:	89 c7                	mov    %eax,%edi$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	fc                   	cld    $/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01054a7	obj/kern/kernel.asm	/^f01054a7:	eb 05                	jmp    f01054ae <memmove+0x66>$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	89 c7                	mov    %eax,%edi$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	fc                   	cld    $/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	5e                   	pop    %esi$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	5f                   	pop    %edi$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	5d                   	pop    %ebp$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	c3                   	ret    $/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2 <memcpy>:$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	55                   	push   %ebp$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01054bf	obj/kern/kernel.asm	/^f01054bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	e8 77 ff ff ff       	call   f0105448 <memmove>$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	c9                   	leave  $/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	c3                   	ret    $/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3 <memcmp>:$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	55                   	push   %ebp$/;"	l
f01054d4	obj/kern/kernel.asm	/^f01054d4:	89 e5                	mov    %esp,%ebp$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	57                   	push   %edi$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	56                   	push   %esi$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	53                   	push   %ebx$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	eb 16                	jmp    f01054ff <memcmp+0x2c>$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	8a 04 17             	mov    (%edi,%edx,1),%al$/;"	l
f01054ec	obj/kern/kernel.asm	/^f01054ec:	42                   	inc    %edx$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	8a 4c 16 ff          	mov    -0x1(%esi,%edx,1),%cl$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	38 c8                	cmp    %cl,%al$/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	74 0a                	je     f01054ff <memcmp+0x2c>$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	29 c8                	sub    %ecx,%eax$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	eb 09                	jmp    f0105508 <memcmp+0x35>$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	39 da                	cmp    %ebx,%edx$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	75 e6                	jne    f01054e9 <memcmp+0x16>$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	5b                   	pop    %ebx$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	5e                   	pop    %esi$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	5f                   	pop    %edi$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	5d                   	pop    %ebp$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	c3                   	ret    $/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d <memfind>:$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	55                   	push   %ebp$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	89 c2                	mov    %eax,%edx$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	eb 05                	jmp    f0105522 <memfind+0x15>$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	38 08                	cmp    %cl,(%eax)$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	74 05                	je     f0105526 <memfind+0x19>$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	40                   	inc    %eax$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	39 d0                	cmp    %edx,%eax$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	72 f7                	jb     f010551d <memfind+0x10>$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	5d                   	pop    %ebp$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	c3                   	ret    $/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528 <strtol>:$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	55                   	push   %ebp$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	89 e5                	mov    %esp,%ebp$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	57                   	push   %edi$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	56                   	push   %esi$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	53                   	push   %ebx$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	eb 01                	jmp    f0105537 <strtol+0xf>$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	42                   	inc    %edx$/;"	l
f0105537	obj/kern/kernel.asm	/^f0105537:	8a 02                	mov    (%edx),%al$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	3c 20                	cmp    $0x20,%al$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	74 f9                	je     f0105536 <strtol+0xe>$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	3c 09                	cmp    $0x9,%al$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	74 f5                	je     f0105536 <strtol+0xe>$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	75 08                	jne    f010554d <strtol+0x25>$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	42                   	inc    %edx$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	eb 13                	jmp    f0105560 <strtol+0x38>$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	75 0a                	jne    f010555b <strtol+0x33>$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	eb 05                	jmp    f0105560 <strtol+0x38>$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	85 db                	test   %ebx,%ebx$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	74 05                	je     f0105569 <strtol+0x41>$/;"	l
f0105564	obj/kern/kernel.asm	/^f0105564:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	75 28                	jne    f0105591 <strtol+0x69>$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	8a 02                	mov    (%edx),%al$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	3c 30                	cmp    $0x30,%al$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	75 10                	jne    f010557f <strtol+0x57>$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	75 0a                	jne    f010557f <strtol+0x57>$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	83 c2 02             	add    $0x2,%edx$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	eb 12                	jmp    f0105591 <strtol+0x69>$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	85 db                	test   %ebx,%ebx$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	75 0e                	jne    f0105591 <strtol+0x69>$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	3c 30                	cmp    $0x30,%al$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	75 05                	jne    f010558c <strtol+0x64>$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	42                   	inc    %edx$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	b3 08                	mov    $0x8,%bl$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a:	eb 05                	jmp    f0105591 <strtol+0x69>$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	89 de                	mov    %ebx,%esi$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	8a 0a                	mov    (%edx),%cl$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	77 08                	ja     f01055aa <strtol+0x82>$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	eb 1e                	jmp    f01055c8 <strtol+0xa0>$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	77 08                	ja     f01055ba <strtol+0x92>$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	eb 0e                	jmp    f01055c8 <strtol+0xa0>$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	77 12                	ja     f01055d4 <strtol+0xac>$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	39 f1                	cmp    %esi,%ecx$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	7d 0c                	jge    f01055d8 <strtol+0xb0>$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	42                   	inc    %edx$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	0f af c6             	imul   %esi,%eax$/;"	l
f01055d0	obj/kern/kernel.asm	/^f01055d0:	01 c8                	add    %ecx,%eax$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	eb c4                	jmp    f0105598 <strtol+0x70>$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	89 c1                	mov    %eax,%ecx$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	eb 02                	jmp    f01055da <strtol+0xb2>$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	89 c1                	mov    %eax,%ecx$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	74 05                	je     f01055e5 <strtol+0xbd>$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	89 13                	mov    %edx,(%ebx)$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	85 ff                	test   %edi,%edi$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	74 04                	je     f01055ed <strtol+0xc5>$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	89 c8                	mov    %ecx,%eax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	f7 d8                	neg    %eax$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	5b                   	pop    %ebx$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	5e                   	pop    %esi$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	5f                   	pop    %edi$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	5d                   	pop    %ebp$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	c3                   	ret    $/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4 <mpentry_start>:$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	fa                   	cli    $/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	31 c0                	xor    %eax,%eax$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	8e d8                	mov    %eax,%ds$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	8e c0                	mov    %eax,%es$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	8e d0                	mov    %eax,%ss$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	74 70                	je     f0105672 <sum+0x2>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	08 00                	or     %al,(%eax)$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614 <start32>:$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	8e d8                	mov    %eax,%ds$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	8e c0                	mov    %eax,%es$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	8e d0                	mov    %eax,%ss$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	8e e0                	mov    %eax,%fs$/;"	l
f0105624	obj/kern/kernel.asm	/^f0105624:	8e e8                	mov    %eax,%gs$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	b8 00 70 12 00       	mov    $0x127000,%eax$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	8b 25 e4 ce 32 f0    	mov    0xf032cee4,%esp$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	b8 a8 00 10 f0       	mov    $0xf01000a8,%eax$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	ff d0                	call   *%eax$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b <spin>:$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	eb fe                	jmp    f010564b <spin>$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650 <gdt>:$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	ff                   	(bad)  $/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	ff 00                	incl   (%eax)$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	00 00                	add    %al,(%eax)$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668 <gdtdesc>:$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	17                   	pop    %ss$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e <mpentry_end>:$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	90                   	nop$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670 <sum>:$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	55                   	push   %ebp$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	89 e5                	mov    %esp,%ebp$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	56                   	push   %esi$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	53                   	push   %ebx$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	eb 07                	jmp    f0105688 <sum+0x18>$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	01 f3                	add    %esi,%ebx$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	41                   	inc    %ecx$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	39 d1                	cmp    %edx,%ecx$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	7c f5                	jl     f0105681 <sum+0x11>$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	88 d8                	mov    %bl,%al$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	5b                   	pop    %ebx$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	5e                   	pop    %esi$/;"	l
f0105690	obj/kern/kernel.asm	/^f0105690:	5d                   	pop    %ebp$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	c3                   	ret    $/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692 <mpsearch1>:$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	55                   	push   %ebp$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	89 e5                	mov    %esp,%ebp$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	56                   	push   %esi$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	53                   	push   %ebx$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	8b 0d e8 ce 32 f0    	mov    0xf032cee8,%ecx$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	89 c3                	mov    %eax,%ebx$/;"	l
f01056a2	obj/kern/kernel.asm	/^f01056a2:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	72 20                	jb     f01056c9 <mpsearch1+0x37>$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	f0 $/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	00 $/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	c7 04 24 05 93 10 f0 	movl   $0xf0109305,(%esp)$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	e8 77 a9 ff ff       	call   f0100040 <_panic>$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	89 f2                	mov    %esi,%edx$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	39 d1                	cmp    %edx,%ecx$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	77 20                	ja     f01056f5 <mpsearch1+0x63>$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	f0 $/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	00 $/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	c7 04 24 05 93 10 f0 	movl   $0xf0109305,(%esp)$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	e8 4b a9 ff ff       	call   f0100040 <_panic>$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	eb 2f                	jmp    f0105732 <mpsearch1+0xa0>$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	00 $/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	c7 44 24 04 15 93 10 	movl   $0xf0109315,0x4(%esp)$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	f0 $/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	e8 b8 fd ff ff       	call   f01054d3 <memcmp>$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	85 c0                	test   %eax,%eax$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	75 10                	jne    f010572f <mpsearch1+0x9d>$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	89 d8                	mov    %ebx,%eax$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	e8 45 ff ff ff       	call   f0105670 <sum>$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	84 c0                	test   %al,%al$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	74 0c                	je     f010573b <mpsearch1+0xa9>$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	72 cd                	jb     f0105703 <mpsearch1+0x71>$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	89 d8                	mov    %ebx,%eax$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	5b                   	pop    %ebx$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	5e                   	pop    %esi$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	5d                   	pop    %ebp$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	c3                   	ret    $/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744 <mp_init>:$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	55                   	push   %ebp$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	89 e5                	mov    %esp,%ebp$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	57                   	push   %edi$/;"	l
f0105748	obj/kern/kernel.asm	/^f0105748:	56                   	push   %esi$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	53                   	push   %ebx$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	c7 05 c0 d3 33 f0 20 	movl   $0xf033d020,0xf033d3c0$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	d0 33 f0 $/;"	d
f0105757	obj/kern/kernel.asm	/^f0105757:	83 3d e8 ce 32 f0 00 	cmpl   $0x0,0xf032cee8$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	75 24                	jne    f0105784 <mp_init+0x40>$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	00 $/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	f0 $/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	00 $/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	c7 04 24 05 93 10 f0 	movl   $0xf0109305,(%esp)$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	e8 bc a8 ff ff       	call   f0100040 <_panic>$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	85 c0                	test   %eax,%eax$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	74 16                	je     f01057a5 <mp_init+0x61>$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	e8 f6 fe ff ff       	call   f0105692 <mpsearch1>$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	85 c0                	test   %eax,%eax$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	75 3c                	jne    f01057df <mp_init+0x9b>$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	eb 20                	jmp    f01057c5 <mp_init+0x81>$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	e8 d4 fe ff ff       	call   f0105692 <mpsearch1>$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	85 c0                	test   %eax,%eax$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	75 1a                	jne    f01057df <mp_init+0x9b>$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	e8 be fe ff ff       	call   f0105692 <mpsearch1>$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	85 c0                	test   %eax,%eax$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	0f 84 2c 02 00 00    	je     f0105a0b <mp_init+0x2c7>$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	85 db                	test   %ebx,%ebx$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	74 06                	je     f01057ef <mp_init+0xab>$/;"	l
f01057e9	obj/kern/kernel.asm	/^f01057e9:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	74 11                	je     f0105800 <mp_init+0xbc>$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	c7 04 24 78 91 10 f0 	movl   $0xf0109178,(%esp)$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	e8 23 da ff ff       	call   f010321e <cprintf>$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	e9 0b 02 00 00       	jmp    f0105a0b <mp_init+0x2c7>$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	89 d8                	mov    %ebx,%eax$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	3b 05 e8 ce 32 f0    	cmp    0xf032cee8,%eax$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	72 20                	jb     f010582d <mp_init+0xe9>$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	f0 $/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	00 $/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	c7 04 24 05 93 10 f0 	movl   $0xf0109305,(%esp)$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	e8 13 a8 ff ff       	call   f0100040 <_panic>$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	00 $/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	c7 44 24 04 1a 93 10 	movl   $0xf010931a,0x4(%esp)$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	f0 $/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	e8 88 fc ff ff       	call   f01054d3 <memcmp>$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	85 c0                	test   %eax,%eax$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	74 11                	je     f0105860 <mp_init+0x11c>$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	c7 04 24 a8 91 10 f0 	movl   $0xf01091a8,(%esp)$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	e8 c3 d9 ff ff       	call   f010321e <cprintf>$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	e9 ab 01 00 00       	jmp    f0105a0b <mp_init+0x2c7>$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	66 8b 73 04          	mov    0x4(%ebx),%si$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	0f b7 d6             	movzwl %si,%edx$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	89 d8                	mov    %ebx,%eax$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	e8 02 fe ff ff       	call   f0105670 <sum>$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	84 c0                	test   %al,%al$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	74 11                	je     f0105883 <mp_init+0x13f>$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	c7 04 24 dc 91 10 f0 	movl   $0xf01091dc,(%esp)$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	e8 a0 d9 ff ff       	call   f010321e <cprintf>$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	e9 88 01 00 00       	jmp    f0105a0b <mp_init+0x2c7>$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	8a 43 06             	mov    0x6(%ebx),%al$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	3c 01                	cmp    $0x1,%al$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	74 1c                	je     f01058a6 <mp_init+0x162>$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	3c 04                	cmp    $0x4,%al$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	74 18                	je     f01058a6 <mp_init+0x162>$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	c7 04 24 00 92 10 f0 	movl   $0xf0109200,(%esp)$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	e8 7d d9 ff ff       	call   f010321e <cprintf>$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	e9 65 01 00 00       	jmp    f0105a0b <mp_init+0x2c7>$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	0f b7 53 28          	movzwl 0x28(%ebx),%edx$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	0f b7 c6             	movzwl %si,%eax$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	01 d8                	add    %ebx,%eax$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	e8 bc fd ff ff       	call   f0105670 <sum>$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	84 c0                	test   %al,%al$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	74 11                	je     f01058cc <mp_init+0x188>$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	c7 04 24 20 92 10 f0 	movl   $0xf0109220,(%esp)$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	e8 57 d9 ff ff       	call   f010321e <cprintf>$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	e9 3f 01 00 00       	jmp    f0105a0b <mp_init+0x2c7>$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	85 db                	test   %ebx,%ebx$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	0f 84 37 01 00 00    	je     f0105a0b <mp_init+0x2c7>$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	c7 05 00 d0 33 f0 01 	movl   $0x1,0xf033d000$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	00 00 00 $/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	a3 00 e0 37 f0       	mov    %eax,0xf037e000$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	8d 73 2c             	lea    0x2c(%ebx),%esi$/;"	l
f01058e9	obj/kern/kernel.asm	/^f01058e9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	e9 94 00 00 00       	jmp    f0105987 <mp_init+0x243>$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	8a 06                	mov    (%esi),%al$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	84 c0                	test   %al,%al$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	74 06                	je     f01058ff <mp_init+0x1bb>$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	3c 04                	cmp    $0x4,%al$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	77 68                	ja     f0105965 <mp_init+0x221>$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	eb 61                	jmp    f0105960 <mp_init+0x21c>$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	f6 46 03 02          	testb  $0x2,0x3(%esi)$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	74 1d                	je     f0105922 <mp_init+0x1de>$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	a1 c4 d3 33 f0       	mov    0xf033d3c4,%eax$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	29 c2                	sub    %eax,%edx$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	8d 04 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%eax$/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	a3 c0 d3 33 f0       	mov    %eax,0xf033d3c0$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	a1 c4 d3 33 f0       	mov    0xf033d3c4,%eax$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	7f 1b                	jg     f0105947 <mp_init+0x203>$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	29 c2                	sub    %eax,%edx$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	88 04 95 20 d0 33 f0 	mov    %al,-0xfcc2fe0(,%edx,4)$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	40                   	inc    %eax$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	a3 c4 d3 33 f0       	mov    %eax,0xf033d3c4$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	eb 14                	jmp    f010595b <mp_init+0x217>$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	c7 04 24 50 92 10 f0 	movl   $0xf0109250,(%esp)$/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	e8 c3 d8 ff ff       	call   f010321e <cprintf>$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	83 c6 14             	add    $0x14,%esi$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	eb 26                	jmp    f0105986 <mp_init+0x242>$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	83 c6 08             	add    $0x8,%esi$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	eb 21                	jmp    f0105986 <mp_init+0x242>$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105968	obj/kern/kernel.asm	/^f0105968:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	c7 04 24 78 92 10 f0 	movl   $0xf0109278,(%esp)$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	e8 a6 d8 ff ff       	call   f010321e <cprintf>$/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	c7 05 00 d0 33 f0 00 	movl   $0x0,0xf033d000$/;"	l
f010597f	obj/kern/kernel.asm	/^f010597f:	00 00 00 $/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	0f b7 7b 22          	movzwl 0x22(%ebx),%edi$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	47                   	inc    %edi$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	39 c7                	cmp    %eax,%edi$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	0f 82 60 ff ff ff    	jb     f01058f3 <mp_init+0x1af>$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	a1 c0 d3 33 f0       	mov    0xf033d3c0,%eax$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	83 3d 00 d0 33 f0 00 	cmpl   $0x0,0xf033d000$/;"	l
f01059a6	obj/kern/kernel.asm	/^f01059a6:	75 22                	jne    f01059ca <mp_init+0x286>$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	c7 05 c4 d3 33 f0 01 	movl   $0x1,0xf033d3c4$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	00 00 00 $/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	c7 05 00 e0 37 f0 00 	movl   $0x0,0xf037e000$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	00 00 00 $/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	c7 04 24 98 92 10 f0 	movl   $0xf0109298,(%esp)$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	e8 56 d8 ff ff       	call   f010321e <cprintf>$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	eb 41                	jmp    f0105a0b <mp_init+0x2c7>$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	8b 15 c4 d3 33 f0    	mov    0xf033d3c4,%edx$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059db	obj/kern/kernel.asm	/^f01059db:	c7 04 24 1f 93 10 f0 	movl   $0xf010931f,(%esp)$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	e8 37 d8 ff ff       	call   f010321e <cprintf>$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	74 1b                	je     f0105a0b <mp_init+0x2c7>$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	c7 04 24 c4 92 10 f0 	movl   $0xf01092c4,(%esp)$/;"	l
f01059f7	obj/kern/kernel.asm	/^f01059f7:	e8 22 d8 ff ff       	call   f010321e <cprintf>$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	b0 70                	mov    $0x70,%al$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	ee                   	out    %al,(%dx)$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	b2 23                	mov    $0x23,%dl$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	ec                   	in     (%dx),%al$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	83 c8 01             	or     $0x1,%eax$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	ee                   	out    %al,(%dx)$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	5b                   	pop    %ebx$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	5e                   	pop    %esi$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	5f                   	pop    %edi$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	5d                   	pop    %ebp$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	c3                   	ret    $/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14 <lapicw>:$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	55                   	push   %ebp$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	03 05 04 e0 37 f0    	add    0xf037e004,%eax$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	89 10                	mov    %edx,(%eax)$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	a1 04 e0 37 f0       	mov    0xf037e004,%eax$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	5d                   	pop    %ebp$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	c3                   	ret    $/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c <cpunum>:$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	55                   	push   %ebp$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	a1 04 e0 37 f0       	mov    0xf037e004,%eax$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	85 c0                	test   %eax,%eax$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	74 08                	je     f0105a40 <cpunum+0x14>$/;"	l
f0105a38	obj/kern/kernel.asm	/^f0105a38:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	eb 05                	jmp    f0105a45 <cpunum+0x19>$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	5d                   	pop    %ebp$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	c3                   	ret    $/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47 <lapic_init>:$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	55                   	push   %ebp$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	a1 00 e0 37 f0       	mov    0xf037e000,%eax$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	85 c0                	test   %eax,%eax$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	0f 84 27 01 00 00    	je     f0105b81 <lapic_init+0x13a>$/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	00 $/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	e8 69 b5 ff ff       	call   f0100fd3 <mmio_map_region>$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	a3 04 e0 37 f0       	mov    %eax,0xf037e004$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	e8 96 ff ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	e8 87 ff ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	e8 78 ff ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105a9c	obj/kern/kernel.asm	/^f0105a9c:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	e8 69 ff ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105aab	obj/kern/kernel.asm	/^f0105aab:	e8 7c ff ff ff       	call   f0105a2c <cpunum>$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105ab7	obj/kern/kernel.asm	/^f0105ab7:	29 c2                	sub    %eax,%edx$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	8d 04 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%eax$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	39 05 c0 d3 33 f0    	cmp    %eax,0xf033d3c0$/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9:	74 0f                	je     f0105ada <lapic_init+0x93>$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	e8 3a ff ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	e8 2b ff ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	a1 04 e0 37 f0       	mov    0xf037e004,%eax$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	3c 03                	cmp    $0x3,%al$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	76 0f                	jbe    f0105b07 <lapic_init+0xc0>$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	e8 0d ff ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	e8 fe fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	e8 ef fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	e8 e0 fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	e8 d1 fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	e8 c2 fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	e8 b3 fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	8b 15 04 e0 37 f0    	mov    0xf037e004,%edx$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	75 f5                	jne    f0105b67 <lapic_init+0x120>$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	e8 93 fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	c9                   	leave  $/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	c3                   	ret    $/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83 <lapic_eoi>:$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	55                   	push   %ebp$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b86	obj/kern/kernel.asm	/^f0105b86:	83 3d 04 e0 37 f0 00 	cmpl   $0x0,0xf037e004$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	74 0f                	je     f0105b9e <lapic_eoi+0x1b>$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	e8 76 fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	5d                   	pop    %ebp$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	c3                   	ret    $/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0 <lapic_startap>:$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	55                   	push   %ebp$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	56                   	push   %esi$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	53                   	push   %ebx$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	8a 5d 08             	mov    0x8(%ebp),%bl$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	b0 0f                	mov    $0xf,%al$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	ee                   	out    %al,(%dx)$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	b2 71                	mov    $0x71,%dl$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	b0 0a                	mov    $0xa,%al$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	ee                   	out    %al,(%dx)$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	83 3d e8 ce 32 f0 00 	cmpl   $0x0,0xf032cee8$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	75 24                	jne    f0105be8 <lapic_startap+0x48>$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	00 $/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	c7 44 24 08 48 61 10 	movl   $0xf0106148,0x8(%esp)$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	f0 $/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	00 $/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	c7 04 24 3c 93 10 f0 	movl   $0xf010933c,(%esp)$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	e8 58 a4 ff ff       	call   f0100040 <_panic>$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	00 00 $/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	89 f0                	mov    %esi,%eax$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	89 da                	mov    %ebx,%edx$/;"	l
f0105c01	obj/kern/kernel.asm	/^f0105c01:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	e8 09 fe ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	e8 fa fd ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	e8 eb fd ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0105c2c	obj/kern/kernel.asm	/^f0105c2c:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	89 da                	mov    %ebx,%edx$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	e8 d6 fd ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	89 f2                	mov    %esi,%edx$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	e8 ca fd ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	89 da                	mov    %ebx,%edx$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	e8 be fd ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	89 f2                	mov    %esi,%edx$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	e8 b2 fd ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	5b                   	pop    %ebx$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	5e                   	pop    %esi$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	5d                   	pop    %ebp$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	c3                   	ret    $/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69 <lapic_ipi>:$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	55                   	push   %ebp$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	e8 95 fd ff ff       	call   f0105a14 <lapicw>$/;"	l
f0105c7f	obj/kern/kernel.asm	/^f0105c7f:	8b 15 04 e0 37 f0    	mov    0xf037e004,%edx$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	75 f5                	jne    f0105c85 <lapic_ipi+0x1c>$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	5d                   	pop    %ebp$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	c3                   	ret    $/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94 <holding>:$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	55                   	push   %ebp$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	53                   	push   %ebx$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105c9b	obj/kern/kernel.asm	/^f0105c9b:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	74 25                	je     f0105cc5 <holding+0x31>$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	e8 84 fd ff ff       	call   f0105a2c <cpunum>$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	29 c2                	sub    %eax,%edx$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	8d 04 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%eax$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	0f 94 c0             	sete   %al$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	eb 05                	jmp    f0105cca <holding+0x36>$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	5b                   	pop    %ebx$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	5d                   	pop    %ebp$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	c3                   	ret    $/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0 <__spin_initlock>:$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	55                   	push   %ebp$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	5d                   	pop    %ebp$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	c3                   	ret    $/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb <spin_lock>:$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	55                   	push   %ebp$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	53                   	push   %ebx$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	89 d8                	mov    %ebx,%eax$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	e8 98 ff ff ff       	call   f0105c94 <holding>$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	85 c0                	test   %eax,%eax$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	74 30                	je     f0105d30 <spin_lock+0x45>$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	e8 24 fd ff ff       	call   f0105a2c <cpunum>$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	c7 44 24 08 4c 93 10 	movl   $0xf010934c,0x8(%esp)$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	f0 $/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	00 $/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	c7 04 24 b0 93 10 f0 	movl   $0xf01093b0,(%esp)$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	e8 14 a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	f3 90                	pause  $/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	eb 05                	jmp    f0105d35 <spin_lock+0x4a>$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	89 d0                	mov    %edx,%eax$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0105d3a	obj/kern/kernel.asm	/^f0105d3a:	85 c0                	test   %eax,%eax$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	75 ee                	jne    f0105d2c <spin_lock+0x41>$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	e8 e9 fc ff ff       	call   f0105a2c <cpunum>$/;"	l
f0105d43	obj/kern/kernel.asm	/^f0105d43:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	29 c2                	sub    %eax,%edx$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	8d 04 85 20 d0 33 f0 	lea    -0xfcc2fe0(,%eax,4),%eax$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	89 ea                	mov    %ebp,%edx$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	76 10                	jbe    f0105d7b <spin_lock+0x90>$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	8b 12                	mov    (%edx),%edx$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	40                   	inc    %eax$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	75 ea                	jne    f0105d63 <spin_lock+0x78>$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	eb 0d                	jmp    f0105d88 <spin_lock+0x9d>$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	40                   	inc    %eax$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	7e f3                	jle    f0105d7b <spin_lock+0x90>$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	83 c4 24             	add    $0x24,%esp$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	5b                   	pop    %ebx$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	5d                   	pop    %ebp$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	c3                   	ret    $/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e <spin_unlock>:$/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e:	55                   	push   %ebp$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	57                   	push   %edi$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	56                   	push   %esi$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	53                   	push   %ebx$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	89 d8                	mov    %ebx,%eax$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	e8 f3 fe ff ff       	call   f0105c94 <holding>$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	85 c0                	test   %eax,%eax$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	0f 85 d3 00 00 00    	jne    f0105e7c <spin_unlock+0xee>$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	00 $/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	8d 75 a8             	lea    -0x58(%ebp),%esi$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	e8 85 f6 ff ff       	call   f0105448 <memmove>$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	e8 5b fc ff ff       	call   f0105a2c <cpunum>$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	c7 04 24 78 93 10 f0 	movl   $0xf0109378,(%esp)$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	e8 35 d4 ff ff       	call   f010321e <cprintf>$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	89 f3                	mov    %esi,%ebx$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	89 c7                	mov    %eax,%edi$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	eb 63                	jmp    f0105e58 <spin_unlock+0xca>$/;"	l
f0105df5	obj/kern/kernel.asm	/^f0105df5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	e8 44 e4 ff ff       	call   f0104245 <debuginfo_eip>$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	85 c0                	test   %eax,%eax$/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	78 39                	js     f0105e3e <spin_unlock+0xb0>$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	8b 06                	mov    (%esi),%eax$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	89 c2                	mov    %eax,%edx$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	c7 04 24 c0 93 10 f0 	movl   $0xf01093c0,(%esp)$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	e8 e2 d3 ff ff       	call   f010321e <cprintf>$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	eb 12                	jmp    f0105e50 <spin_unlock+0xc2>$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	8b 06                	mov    (%esi),%eax$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	c7 04 24 d7 93 10 f0 	movl   $0xf01093d7,(%esp)$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	e8 ce d3 ff ff       	call   f010321e <cprintf>$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	3b 5d a4             	cmp    -0x5c(%ebp),%ebx$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	74 08                	je     f0105e60 <spin_unlock+0xd2>$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	89 de                	mov    %ebx,%esi$/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	85 c0                	test   %eax,%eax$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	75 95                	jne    f0105df5 <spin_unlock+0x67>$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	c7 44 24 08 df 93 10 	movl   $0xf01093df,0x8(%esp)$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	f0 $/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	00 $/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	c7 04 24 b0 93 10 f0 	movl   $0xf01093b0,(%esp)$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	e8 c4 a1 ff ff       	call   f0100040 <_panic>$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	83 c4 7c             	add    $0x7c,%esp$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	5b                   	pop    %ebx$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	5e                   	pop    %esi$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	5f                   	pop    %edi$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	5d                   	pop    %ebp$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	c3                   	ret    $/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c <__udivdi3>:$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	55                   	push   %ebp$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	57                   	push   %edi$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	56                   	push   %esi$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	89 cd                	mov    %ecx,%ebp$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	85 c0                	test   %eax,%eax$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	75 2c                	jne    f0105ee8 <__udivdi3+0x4c>$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	39 f9                	cmp    %edi,%ecx$/;"	l
f0105ebe	obj/kern/kernel.asm	/^f0105ebe:	77 68                	ja     f0105f28 <__udivdi3+0x8c>$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	85 c9                	test   %ecx,%ecx$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	75 0b                	jne    f0105ecf <__udivdi3+0x33>$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	31 d2                	xor    %edx,%edx$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	f7 f1                	div    %ecx$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	89 c1                	mov    %eax,%ecx$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	31 d2                	xor    %edx,%edx$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	89 f8                	mov    %edi,%eax$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	f7 f1                	div    %ecx$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	89 c7                	mov    %eax,%edi$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	89 f0                	mov    %esi,%eax$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	f7 f1                	div    %ecx$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	89 c6                	mov    %eax,%esi$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	89 f0                	mov    %esi,%eax$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	89 fa                	mov    %edi,%edx$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	5e                   	pop    %esi$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	5f                   	pop    %edi$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	5d                   	pop    %ebp$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	c3                   	ret    $/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	39 f8                	cmp    %edi,%eax$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	77 2c                	ja     f0105f18 <__udivdi3+0x7c>$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	0f bd f0             	bsr    %eax,%esi$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	75 4c                	jne    f0105f40 <__udivdi3+0xa4>$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	39 f8                	cmp    %edi,%eax$/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	72 0a                	jb     f0105f07 <__udivdi3+0x6b>$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	0f 87 ad 00 00 00    	ja     f0105fb4 <__udivdi3+0x118>$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	89 f0                	mov    %esi,%eax$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	89 fa                	mov    %edi,%edx$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	5e                   	pop    %esi$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	5f                   	pop    %edi$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	5d                   	pop    %ebp$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	c3                   	ret    $/;"	l
f0105f17	obj/kern/kernel.asm	/^f0105f17:	90                   	nop$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	31 ff                	xor    %edi,%edi$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	31 f6                	xor    %esi,%esi$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	89 f0                	mov    %esi,%eax$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	89 fa                	mov    %edi,%edx$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	5e                   	pop    %esi$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	5f                   	pop    %edi$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	5d                   	pop    %ebp$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	c3                   	ret    $/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	90                   	nop$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	89 fa                	mov    %edi,%edx$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	89 f0                	mov    %esi,%eax$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	f7 f1                	div    %ecx$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	89 c6                	mov    %eax,%esi$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	31 ff                	xor    %edi,%edi$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	89 f0                	mov    %esi,%eax$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	89 fa                	mov    %edi,%edx$/;"	l
f0105f36	obj/kern/kernel.asm	/^f0105f36:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	5e                   	pop    %esi$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	5f                   	pop    %edi$/;"	l
f0105f3b	obj/kern/kernel.asm	/^f0105f3b:	5d                   	pop    %ebp$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	c3                   	ret    $/;"	l
f0105f3d	obj/kern/kernel.asm	/^f0105f3d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	89 f1                	mov    %esi,%ecx$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	d3 e0                	shl    %cl,%eax$/;"	d
f0105f44	obj/kern/kernel.asm	/^f0105f44:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	29 f0                	sub    %esi,%eax$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	89 ea                	mov    %ebp,%edx$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	88 c1                	mov    %al,%cl$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	d3 ea                	shr    %cl,%edx$/;"	d
f0105f55	obj/kern/kernel.asm	/^f0105f55:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	09 ca                	or     %ecx,%edx$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	89 f1                	mov    %esi,%ecx$/;"	l
f0105f61	obj/kern/kernel.asm	/^f0105f61:	d3 e5                	shl    %cl,%ebp$/;"	d
f0105f63	obj/kern/kernel.asm	/^f0105f63:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
f0105f67	obj/kern/kernel.asm	/^f0105f67:	89 fd                	mov    %edi,%ebp$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	88 c1                	mov    %al,%cl$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	d3 ed                	shr    %cl,%ebp$/;"	d
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	89 fa                	mov    %edi,%edx$/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	89 f1                	mov    %esi,%ecx$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	d3 e2                	shl    %cl,%edx$/;"	d
f0105f73	obj/kern/kernel.asm	/^f0105f73:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	88 c1                	mov    %al,%cl$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	d3 ef                	shr    %cl,%edi$/;"	d
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	09 d7                	or     %edx,%edi$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	89 f8                	mov    %edi,%eax$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	89 ea                	mov    %ebp,%edx$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	89 d1                	mov    %edx,%ecx$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	89 c7                	mov    %eax,%edi$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	72 17                	jb     f0105fa8 <__udivdi3+0x10c>$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	74 09                	je     f0105f9c <__udivdi3+0x100>$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	89 fe                	mov    %edi,%esi$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	31 ff                	xor    %edi,%edi$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	e9 41 ff ff ff       	jmp    f0105edd <__udivdi3+0x41>$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	89 f1                	mov    %esi,%ecx$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	d3 e2                	shl    %cl,%edx$/;"	d
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	39 c2                	cmp    %eax,%edx$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	73 eb                	jae    f0105f93 <__udivdi3+0xf7>$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	31 ff                	xor    %edi,%edi$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	e9 2b ff ff ff       	jmp    f0105edd <__udivdi3+0x41>$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	66 90                	xchg   %ax,%ax$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	31 f6                	xor    %esi,%esi$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	e9 22 ff ff ff       	jmp    f0105edd <__udivdi3+0x41>$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc <__umoddi3>:$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	55                   	push   %ebp$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	57                   	push   %edi$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	56                   	push   %esi$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	89 c7                	mov    %eax,%edi$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	89 f2                	mov    %esi,%edx$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	85 ed                	test   %ebp,%ebp$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	75 16                	jne    f0105ff8 <__umoddi3+0x3c>$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	0f 86 a6 00 00 00    	jbe    f0106090 <__umoddi3+0xd4>$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	f7 f1                	div    %ecx$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	89 d0                	mov    %edx,%eax$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	31 d2                	xor    %edx,%edx$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	5e                   	pop    %esi$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	5f                   	pop    %edi$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	5d                   	pop    %ebp$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	c3                   	ret    $/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	90                   	nop$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	39 f5                	cmp    %esi,%ebp$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	0f 87 ac 00 00 00    	ja     f01060ac <__umoddi3+0xf0>$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	0f 84 a8 00 00 00    	je     f01060b8 <__umoddi3+0xfc>$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106016	obj/kern/kernel.asm	/^f0106016:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	89 f9                	mov    %edi,%ecx$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	d3 e8                	shr    %cl,%eax$/;"	d
f0106027	obj/kern/kernel.asm	/^f0106027:	09 e8                	or     %ebp,%eax$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	d3 e0                	shl    %cl,%eax$/;"	d
f0106037	obj/kern/kernel.asm	/^f0106037:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	89 f2                	mov    %esi,%edx$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	d3 e2                	shl    %cl,%edx$/;"	d
f010603f	obj/kern/kernel.asm	/^f010603f:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	d3 e0                	shl    %cl,%eax$/;"	d
f0106045	obj/kern/kernel.asm	/^f0106045:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	89 f9                	mov    %edi,%ecx$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	d3 e8                	shr    %cl,%eax$/;"	d
f0106051	obj/kern/kernel.asm	/^f0106051:	09 d0                	or     %edx,%eax$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	d3 ee                	shr    %cl,%esi$/;"	d
f0106055	obj/kern/kernel.asm	/^f0106055:	89 f2                	mov    %esi,%edx$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	89 d6                	mov    %edx,%esi$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061:	89 c5                	mov    %eax,%ebp$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	89 d1                	mov    %edx,%ecx$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	39 d6                	cmp    %edx,%esi$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	72 67                	jb     f01060d0 <__umoddi3+0x114>$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	74 75                	je     f01060e0 <__umoddi3+0x124>$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	29 e8                	sub    %ebp,%eax$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	d3 e8                	shr    %cl,%eax$/;"	d
f0106079	obj/kern/kernel.asm	/^f0106079:	89 f2                	mov    %esi,%edx$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	89 f9                	mov    %edi,%ecx$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	d3 e2                	shl    %cl,%edx$/;"	d
f010607f	obj/kern/kernel.asm	/^f010607f:	09 d0                	or     %edx,%eax$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	89 f2                	mov    %esi,%edx$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	d3 ea                	shr    %cl,%edx$/;"	d
f0106089	obj/kern/kernel.asm	/^f0106089:	83 c4 20             	add    $0x20,%esp$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	5e                   	pop    %esi$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	5f                   	pop    %edi$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	5d                   	pop    %ebp$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	c3                   	ret    $/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	85 c9                	test   %ecx,%ecx$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	75 0b                	jne    f010609f <__umoddi3+0xe3>$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	31 d2                	xor    %edx,%edx$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	f7 f1                	div    %ecx$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	89 c1                	mov    %eax,%ecx$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	89 f0                	mov    %esi,%eax$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	31 d2                	xor    %edx,%edx$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	f7 f1                	div    %ecx$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	89 f8                	mov    %edi,%eax$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	e9 3e ff ff ff       	jmp    f0105fea <__umoddi3+0x2e>$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	89 f2                	mov    %esi,%edx$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	83 c4 20             	add    $0x20,%esp$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	5e                   	pop    %esi$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	5f                   	pop    %edi$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	5d                   	pop    %ebp$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	c3                   	ret    $/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	39 f5                	cmp    %esi,%ebp$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	72 04                	jb     f01060c0 <__umoddi3+0x104>$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	39 f9                	cmp    %edi,%ecx$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	77 06                	ja     f01060c6 <__umoddi3+0x10a>$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	89 f2                	mov    %esi,%edx$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	29 cf                	sub    %ecx,%edi$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	19 ea                	sbb    %ebp,%edx$/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	89 f8                	mov    %edi,%eax$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	83 c4 20             	add    $0x20,%esp$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	5e                   	pop    %esi$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	5f                   	pop    %edi$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	5d                   	pop    %ebp$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	c3                   	ret    $/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	90                   	nop$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	89 d1                	mov    %edx,%ecx$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	89 c5                	mov    %eax,%ebp$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	eb 8d                	jmp    f010606b <__umoddi3+0xaf>$/;"	l
f01060de	obj/kern/kernel.asm	/^f01060de:	66 90                	xchg   %ax,%ax$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	72 ea                	jb     f01060d0 <__umoddi3+0x114>$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	89 f1                	mov    %esi,%ecx$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	eb 81                	jmp    f010606b <__umoddi3+0xaf>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
game_dest	kern/game.h	/^	game_dest,$/;"	e	enum:__anon7
game_display	kern/game_draw.c	/^game_display(){$/;"	f
game_display	kern/game_draw.h	/^void game_display();$/;"	p	signature:()
game_loop	kern/game.c	/^game_loop(void) { \/* driven by keyboard interuption *\/$/;"	f	signature:(void)
game_loop	kern/game.h	/^void game_loop();$/;"	p	signature:()
game_out	kern/game.h	/^	game_out$/;"	e	enum:__anon7
game_space	kern/game.h	/^	game_space = 0,$/;"	e	enum:__anon7
game_wall	kern/game.h	/^	game_wall,$/;"	e	enum:__anon7
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getch	obj/kern/kernel.asm	/^		getch = getchar();$/;"	d
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
grey	kern/game_draw.h	5;"	d
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
height	kern/draw.c	40;"	d	file:
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/game.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/game.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
log2	inc/stdio.h	34;"	d
log3	inc/stdio.h	40;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/game.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
map	kern/game_layout.h	/^static int map[9][9] = {$/;"	v
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	signature:(physaddr_t pa, size_t size)
mmio_map_region	kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
move_area_height	kern/draw.c	43;"	d	file:
move_area_width	kern/draw.c	44;"	d	file:
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
next_box_x	kern/game.c	13;"	d	file:
next_box_x	obj/kern/kernel.asm	/^#define next_box_x(index) (box[index].x+right)$/;"	d
next_box_x	obj/user/game.asm	/^#define next_box_x(index) (box[index].x+right)$/;"	d
next_box_y	kern/game.c	14;"	d	file:
next_box_y	obj/kern/kernel.asm	/^#define next_box_y(index) (box[index].y+down)$/;"	d
next_box_y	obj/user/game.asm	/^#define next_box_y(index) (box[index].y+down)$/;"	d
next_x	kern/game.c	11;"	d	file:
next_y	kern/game.c	12;"	d	file:
nextfree	kern/pmap.c	/^static char *nextfree;	\/\/ virtual address of next byte of free memory$/;"	v	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) (n+nextfree), PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	  npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^	  npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/game.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/game.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/game.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/game.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/game.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	75;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/game.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/game.asm	/^			padc = '-';$/;"	d
padc	obj/user/game.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link ;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*)boot_alloc(sizeof(struct PageInfo)*npages);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) (((uint8_t *)elfhdr) + elfhdr->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pink	kern/game_draw.h	8;"	d
pos	kern/game.h	/^struct pos{$/;"	s
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pos::x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
pos::y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
position_init	kern/game.c	/^position_init() {$/;"	f	file:
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/game.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/game.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/game.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prepare_buffer	kern/video.c	/^prepare_buffer(void) {$/;"	f	signature:(void)
prepare_buffer	kern/video.h	/^void prepare_buffer(void);$/;"	p	signature:(void)
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/game.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protag	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:pos
protag_infrontof_box	kern/game.c	/^protag_infrontof_box(int right, int down) { \/\/ if false return 0,else return box index + 1$/;"	f	file:	signature:(int right, int down)
protag_movable	kern/game.c	/^protag_movable(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protag_move	kern/game.c	/^protag_move(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^			pt = &pt_base[PTX(va)];$/;"	d
pt	obj/kern/kernel.asm	/^		pt = &pt_base[PTX(va)];$/;"	d
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pt_base	obj/kern/kernel.asm	/^			pt_base = ((pte_t *) page2kva(page_as_pt));$/;"	d
pt_base	obj/kern/kernel.asm	/^		pt_base = (pte_t *)pt_base_kva;$/;"	d
pte_store	obj/kern/kernel.asm	/^		pte_store = pgdir_walk(env->env_pgdir,(void *) start, 0);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/game.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
red	kern/game_draw.h	10;"	d
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	obj/kern/kernel.asm	/^		result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/game.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/game.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/game.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	signature:(void)
sched_halt	kern/sched.c	/^void sched_halt(void);$/;"	p	file:	signature:(void)
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/game.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static void*$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/game.asm	/^static int$/;"	l
static	obj/user/game.asm	/^static long long$/;"	l
static	obj/user/game.asm	/^static unsigned long long$/;"	l
static	obj/user/game.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f	access:public
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f	access:public
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f	access:public
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_divzero	grade-lab3	/^def test_divzero():$/;"	f	access:public
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f	access:public
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f	access:public
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f	access:public
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f	access:public
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f	access:public
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f	access:public
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f	access:public
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f	access:public
test_faultread	grade-lab3	/^def test_faultread():$/;"	f	access:public
test_faultread	grade-lab4	/^def test_faultread():$/;"	f	access:public
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f	access:public
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f	access:public
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f	access:public
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f	access:public
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f	access:public
test_forktree	grade-lab4	/^def test_forktree():$/;"	f	access:public
test_hello	grade-lab3	/^def test_hello():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f	access:public
test_primes	grade-lab4	/^def test_primes():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f	access:public
test_softint	grade-lab3	/^def test_softint():$/;"	f	access:public
test_spin	grade-lab4	/^def test_spin():$/;"	f	access:public
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f	access:public
test_testbss	grade-lab3	/^def test_testbss():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/game.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	obj/kern/kernel.asm	/^uint8_t *vmem = VMEM_ADDR;$/;"	l
uint8_t	obj/kern/kernel.asm	/^uint8_t vbuf[SCR_SIZE];$/;"	l
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = oaddr;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = start;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vbuf	kern/video.c	/^uint8_t vbuf[SCR_SIZE];$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
victory	kern/game.c	/^victory() {$/;"	f	file:
vmem	kern/video.c	/^uint8_t *vmem = VMEM_ADDR;$/;"	v
vmem	obj/kern/kernel.asm	/^	vmem = VMEM_ADDR;$/;"	d
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/game.asm	/^void *$/;"	l
void	obj/user/game.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/game.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	kern/draw.c	39;"	d	file:
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/game.asm	/^				width = 0;$/;"	d
width	obj/user/game.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/game.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
yellow	kern/game_draw.h	7;"	d
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
