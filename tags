!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon8
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon7
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon7
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon7
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f	access:public
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		= 9,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 8,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEN	kern/game_draw.c	48;"	d	file:
LEN	kern/game_draw.c	6;"	d	file:
LEN	obj/kern/kernel.asm	/^#define LEN 20$/;"	d
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	71;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	29;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	86;"	d
O_CREAT	inc/lib.h	88;"	d
O_EXCL	inc/lib.h	90;"	d
O_MKDIR	inc/lib.h	91;"	d
O_RDONLY	inc/lib.h	83;"	d
O_RDWR	inc/lib.h	85;"	d
O_TRUNC	inc/lib.h	89;"	d
O_WRONLY	inc/lib.h	84;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 8 09:40:26 EDT 2014$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIC	kern/draw.c	6;"	d	file:
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	76;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SCR_HEIGHT	kern/video.h	9;"	d
SCR_SIZE	kern/video.h	10;"	d
SCR_WIDTH	kern/video.h	8;"	d
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon4
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon4
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon4
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon4
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon4
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon4
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon4
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
VMEM_ADDR	kern/video.h	11;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	70;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_CONSOLE_H_	kern/video.h	2;"	d
_DRAW_H_	kern/draw.h	2;"	d
_GAME_DRAW_H_	kern/game_draw.h	2;"	d
_GAME_H_	kern/game.h	2;"	d
_GAME_LAYOUT_H_	kern/game_layout.h	2;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_MY_PG_WALK_	kern/pmap.c	428;"	d	file:
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon6::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:	access:public
__anon6::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:	access:public
__anon6::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:	access:public
__game_restart	obj/kern/kernel.asm	/^__game_restart:$/;"	l
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
anchor_border_bottom	kern/draw.c	49;"	d	file:
anchor_border_bottom	obj/kern/kernel.asm	/^#define anchor_border_bottom (move_area_height+anchor_border_top-1)$/;"	d
anchor_border_left	kern/draw.c	46;"	d	file:
anchor_border_right	kern/draw.c	48;"	d	file:
anchor_border_right	obj/kern/kernel.asm	/^#define anchor_border_right (move_area_width+anchor_border_left-1)$/;"	d
anchor_border_top	kern/draw.c	47;"	d	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = limit;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
black	kern/game_draw.h	9;"	d
blue	kern/game_draw.h	6;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
box	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	kern/draw.c	/^static int c[width*height]=PIC;$/;"	v	file:
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^			default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
display_buffer	kern/video.c	/^display_buffer(void) {$/;"	f	signature:(void)
display_buffer	kern/video.h	/^void display_buffer(void);$/;"	p	signature:(void)
draw_box	kern/game_draw.c	/^draw_box() { \/*and protagonist*\/$/;"	f	file:
draw_color	kern/draw.c	/^draw_color()$/;"	f
draw_color	kern/draw.h	/^void draw_color();$/;"	p	signature:()
draw_map	kern/game_draw.c	/^draw_map() {$/;"	f	file:
draw_pixel	kern/video.h	/^draw_pixel(int x, int y, int color) {$/;"	f	signature:(int x, int y, int color)
draw_square	kern/video.c	/^draw_square(int y, int x, int color, int len) {$/;"	f	signature:(int y, int x, int color, int len)
draw_square	kern/video.h	/^void draw_square(int x, int y, int color, int len);$/;"	p	signature:(int x, int y, int color, int len)
draw_string	kern/video.h	/^void draw_string(const char*, int, int, int);$/;"	p	signature:(const char*, int, int, int)
draw_tux	kern/draw.c	/^draw_tux() $/;"	f
draw_tux	kern/draw.h	/^void draw_tux();$/;"	p	signature:()
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	signature:(uint8_t *binary, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, enum EnvType type);$/;"	p	signature:(uint8_t *binary, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof(struct Env)*NENV);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/kern/kernel.asm	/^extern uint8_t *vmem;$/;"	l
extern	obj/kern/kernel.asm	/^extern uint8_t vbuf[];$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 00 12 f0       	mov    $0xf0120000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d 80 de 22 f0 00 	cmpl   $0x0,0xf022de80$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 80 de 22 f0    	mov    %esi,0xf022de80$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 89 5d 00 00       	call   f0105dea <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 80 64 10 f0       	push   $0xf0106480$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 54 36 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 24 36 00 00       	call   f01036a0 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 b1 6c 10 f0 	movl   $0xf0106cb1,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 3e 36 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 eb 07 00 00       	call   f0100880 <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	b8 08 f0 27 f0       	mov    $0xf027f008,%eax$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	2d a0 c7 22 f0       	sub    $0xf022c7a0,%eax$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	50                   	push   %eax$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	6a 00                	push   $0x0$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 a0 c7 22 f0       	push   $0xf022c7a0$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 12 57 00 00       	call   f01057ca <memset>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 81 05 00 00       	call   f010063e <cons_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000c0	obj/kern/kernel.asm	/^f01000c0:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	68 ec 64 10 f0       	push   $0xf01064ec$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	e8 f7 35 00 00       	call   f01036c6 <cprintf>$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 fd 11 00 00       	call   f01012d1 <mem_init>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	e8 40 2e 00 00       	call   f0102f19 <env_init>$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	e8 90 36 00 00       	call   f010376e <trap_init>$/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	e8 fd 59 00 00       	call   f0105ae0 <mp_init>$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	e8 1d 5d 00 00       	call   f0105e05 <lapic_init>$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	e8 00 35 00 00       	call   f01035ed <pic_init>$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed:	c7 04 24 c0 23 12 f0 	movl   $0xf01223c0,(%esp)$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 5f 5f 00 00       	call   f0106058 <spin_lock>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	83 3d 88 de 22 f0 07 	cmpl   $0x7,0xf022de88$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	77 16                	ja     f010011b <i386_init+0x81>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	68 00 70 00 00       	push   $0x7000$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	6a 59                	push   $0x59$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	68 07 65 10 f0       	push   $0xf0106507$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	e8 25 ff ff ff       	call   f0100040 <_panic>$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	b8 46 5a 10 f0       	mov    $0xf0105a46,%eax$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	2d cc 59 10 f0       	sub    $0xf01059cc,%eax$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	50                   	push   %eax$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	68 cc 59 10 f0       	push   $0xf01059cc$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	e8 df 56 00 00       	call   f0105817 <memmove>$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	83 c4 10             	add    $0x10,%esp$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	bb 20 e0 23 f0       	mov    $0xf023e020,%ebx$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	eb 4d                	jmp    f010018f <i386_init+0xf5>$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	e8 a3 5c 00 00       	call   f0105dea <cpunum>$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	05 20 e0 23 f0       	add    $0xf023e020,%eax$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	74 39                	je     f010018c <i386_init+0xf2>$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	89 d8                	mov    %ebx,%eax$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	2d 20 e0 23 f0       	sub    $0xf023e020,%eax$/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	05 00 70 24 f0       	add    $0xf0247000,%eax$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	a3 84 de 22 f0       	mov    %eax,0xf022de84$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	50                   	push   %eax$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	e8 d2 5d 00 00       	call   f0105f53 <lapic_startap>$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100187	obj/kern/kernel.asm	/^f0100187:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	75 f8                	jne    f0100184 <i386_init+0xea>$/;"	l
f010018c	obj/kern/kernel.asm	/^f010018c:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	6b 05 c4 e3 23 f0 74 	imul   $0x74,0xf023e3c4,%eax$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	05 20 e0 23 f0       	add    $0xf023e020,%eax$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	72 a3                	jb     f0100142 <i386_init+0xa8>$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	6a 00                	push   $0x0$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	68 74 a4 19 f0       	push   $0xf019a474$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	e8 3b 2f 00 00       	call   f01030ee <env_create>$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	75 e9                	jne    f01001a4 <i386_init+0x10a>$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	e8 7c 42 00 00       	call   f010443c <sched_yield>$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0 <mp_main>:$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	55                   	push   %ebp$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	77 12                	ja     f01001e4 <mp_main+0x24>$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	50                   	push   %eax$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	6a 70                	push   $0x70$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	68 07 65 10 f0       	push   $0xf0106507$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	e8 5c fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	e8 f9 5b 00 00       	call   f0105dea <cpunum>$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	50                   	push   %eax$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	68 13 65 10 f0       	push   $0xf0106513$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	e8 c7 34 00 00       	call   f01036c6 <cprintf>$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	e8 01 5c 00 00       	call   f0105e05 <lapic_init>$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	e8 e0 2c 00 00       	call   f0102ee9 <env_init_percpu>$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	e8 cc 34 00 00       	call   f01036da <trap_init_percpu>$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	e8 d7 5b 00 00       	call   f0105dea <cpunum>$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	81 c2 20 e0 23 f0    	add    $0xf023e020,%edx$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	c7 04 24 c0 23 12 f0 	movl   $0xf01223c0,(%esp)$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	e8 27 5e 00 00       	call   f0106058 <spin_lock>$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	e8 06 42 00 00       	call   f010443c <sched_yield>$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236 <_warn>:$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	55                   	push   %ebp$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	89 e5                	mov    %esp,%ebp$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	53                   	push   %ebx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	68 29 65 10 f0       	push   $0xf0106529$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	e8 76 34 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100253	obj/kern/kernel.asm	/^f0100253:	53                   	push   %ebx$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	e8 44 34 00 00       	call   f01036a0 <vcprintf>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	c7 04 24 b1 6c 10 f0 	movl   $0xf0106cb1,(%esp)$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	e8 5e 34 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100268	obj/kern/kernel.asm	/^f0100268:	83 c4 10             	add    $0x10,%esp$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	c9                   	leave  $/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	c3                   	ret    $/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270 <serial_proc_data>:$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	55                   	push   %ebp$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	89 e5                	mov    %esp,%ebp$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	ec                   	in     (%dx),%al$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	a8 01                	test   $0x1,%al$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	74 0b                	je     f0100288 <serial_proc_data+0x18>$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	ec                   	in     (%dx),%al$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	eb 05                	jmp    f010028d <serial_proc_data+0x1d>$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	5d                   	pop    %ebp$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	c3                   	ret    $/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f <cons_intr>:$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	55                   	push   %ebp$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	89 e5                	mov    %esp,%ebp$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	53                   	push   %ebx$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	89 c3                	mov    %eax,%ebx$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	eb 2b                	jmp    f01002c5 <cons_intr+0x36>$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	85 c0                	test   %eax,%eax$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	74 27                	je     f01002c5 <cons_intr+0x36>$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	8b 0d 24 d2 22 f0    	mov    0xf022d224,%ecx$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	89 15 24 d2 22 f0    	mov    %edx,0xf022d224$/;"	l
f01002ad	obj/kern/kernel.asm	/^f01002ad:	88 81 20 d0 22 f0    	mov    %al,-0xfdd2fe0(%ecx)$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	75 0a                	jne    f01002c5 <cons_intr+0x36>$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	c7 05 24 d2 22 f0 00 	movl   $0x0,0xf022d224$/;"	l
f01002c2	obj/kern/kernel.asm	/^f01002c2:	00 00 00 $/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	ff d3                	call   *%ebx$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	75 ce                	jne    f010029a <cons_intr+0xb>$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	5b                   	pop    %ebx$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	5d                   	pop    %ebp$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	c3                   	ret    $/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2 <kbd_proc_data>:$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	ec                   	in     (%dx),%al$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	a8 01                	test   $0x1,%al$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	0f 84 f0 00 00 00    	je     f01003d0 <kbd_proc_data+0xfe>$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	ec                   	in     (%dx),%al$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	89 c2                	mov    %eax,%edx$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	75 0d                	jne    f01002f9 <kbd_proc_data+0x27>$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	83 0d 00 d0 22 f0 40 	orl    $0x40,0xf022d000$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	c3                   	ret    $/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	55                   	push   %ebp$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	53                   	push   %ebx$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	84 c0                	test   %al,%al$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	79 36                	jns    f010033a <kbd_proc_data+0x68>$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	8b 0d 00 d0 22 f0    	mov    0xf022d000,%ecx$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	89 cb                	mov    %ecx,%ebx$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	85 db                	test   %ebx,%ebx$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	0f b6 82 a0 66 10 f0 	movzbl -0xfef9960(%edx),%eax$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	f7 d0                	not    %eax$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	21 c8                	and    %ecx,%eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	a3 00 d0 22 f0       	mov    %eax,0xf022d000$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	e9 9e 00 00 00       	jmp    f01003d8 <kbd_proc_data+0x106>$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	8b 0d 00 d0 22 f0    	mov    0xf022d000,%ecx$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	74 0e                	je     f0100353 <kbd_proc_data+0x81>$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	89 c2                	mov    %eax,%edx$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	89 0d 00 d0 22 f0    	mov    %ecx,0xf022d000$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	0f b6 82 a0 66 10 f0 	movzbl -0xfef9960(%edx),%eax$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	0b 05 00 d0 22 f0    	or     0xf022d000,%eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	0f b6 8a a0 65 10 f0 	movzbl -0xfef9a60(%edx),%ecx$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	31 c8                	xor    %ecx,%eax$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	a3 00 d0 22 f0       	mov    %eax,0xf022d000$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	89 c1                	mov    %eax,%ecx$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	8b 0c 8d 80 65 10 f0 	mov    -0xfef9a80(,%ecx,4),%ecx$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	a8 08                	test   $0x8,%al$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	74 1b                	je     f01003a3 <kbd_proc_data+0xd1>$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	89 da                	mov    %ebx,%edx$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	77 05                	ja     f0100397 <kbd_proc_data+0xc5>$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	eb 0c                	jmp    f01003a3 <kbd_proc_data+0xd1>$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	83 ea 41             	sub    $0x41,%edx$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	f7 d0                	not    %eax$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	a8 06                	test   $0x6,%al$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	75 2d                	jne    f01003d6 <kbd_proc_data+0x104>$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	75 25                	jne    f01003d6 <kbd_proc_data+0x104>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	68 43 65 10 f0       	push   $0xf0106543$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	e8 08 33 00 00       	call   f01036c6 <cprintf>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	ee                   	out    %al,(%dx)$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	eb 08                	jmp    f01003d8 <kbd_proc_data+0x106>$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	c3                   	ret    $/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	89 d8                	mov    %ebx,%eax$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	c9                   	leave  $/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	c3                   	ret    $/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd <cons_putc>:$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	55                   	push   %ebp$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	89 e5                	mov    %esp,%ebp$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	57                   	push   %edi$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	56                   	push   %esi$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	53                   	push   %ebx$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	89 c7                	mov    %eax,%edi$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	eb 09                	jmp    f0100402 <cons_putc+0x25>$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	89 ca                	mov    %ecx,%edx$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	ec                   	in     (%dx),%al$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	ec                   	in     (%dx),%al$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	ec                   	in     (%dx),%al$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	ec                   	in     (%dx),%al$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	89 f2                	mov    %esi,%edx$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	ec                   	in     (%dx),%al$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	a8 20                	test   $0x20,%al$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	75 08                	jne    f0100411 <cons_putc+0x34>$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	7e e8                	jle    f01003f9 <cons_putc+0x1c>$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 f8                	mov    %edi,%eax$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	ee                   	out    %al,(%dx)$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	eb 09                	jmp    f0100436 <cons_putc+0x59>$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	89 ca                	mov    %ecx,%edx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	ec                   	in     (%dx),%al$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	ec                   	in     (%dx),%al$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	ec                   	in     (%dx),%al$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	ec                   	in     (%dx),%al$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	89 f2                	mov    %esi,%edx$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	ec                   	in     (%dx),%al$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	7f 04                	jg     f0100445 <cons_putc+0x68>$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	84 c0                	test   %al,%al$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	79 e8                	jns    f010042d <cons_putc+0x50>$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	ee                   	out    %al,(%dx)$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	ee                   	out    %al,(%dx)$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	ee                   	out    %al,(%dx)$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	89 fa                	mov    %edi,%edx$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	89 f8                	mov    %edi,%eax$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	80 cc 07             	or     $0x7,%ah$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	85 d2                	test   %edx,%edx$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	89 f8                	mov    %edi,%eax$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	74 74                	je     f01004f0 <cons_putc+0x113>$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	7f 0a                	jg     f010048b <cons_putc+0xae>$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	74 14                	je     f010049a <cons_putc+0xbd>$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	e9 99 00 00 00       	jmp    f0100524 <cons_putc+0x147>$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	74 3a                	je     f01004ca <cons_putc+0xed>$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	74 3d                	je     f01004d2 <cons_putc+0xf5>$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	e9 8a 00 00 00       	jmp    f0100524 <cons_putc+0x147>$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	0f b7 05 28 d2 22 f0 	movzwl 0xf022d228,%eax$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	66 85 c0             	test   %ax,%ax$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	0f 84 e6 00 00 00    	je     f0100590 <cons_putc+0x1b3>$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	66 a3 28 d2 22 f0    	mov    %ax,0xf022d228$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	83 cf 20             	or     $0x20,%edi$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	8b 15 2c d2 22 f0    	mov    0xf022d22c,%edx$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	eb 78                	jmp    f0100542 <cons_putc+0x165>$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	66 83 05 28 d2 22 f0 	addw   $0x50,0xf022d228$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	50 $/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	0f b7 05 28 d2 22 f0 	movzwl 0xf022d228,%eax$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	66 a3 28 d2 22 f0    	mov    %ax,0xf022d228$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	eb 52                	jmp    f0100542 <cons_putc+0x165>$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	e8 e3 fe ff ff       	call   f01003dd <cons_putc>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	e8 d9 fe ff ff       	call   f01003dd <cons_putc>$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	e8 cf fe ff ff       	call   f01003dd <cons_putc>$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	e8 c5 fe ff ff       	call   f01003dd <cons_putc>$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	e8 bb fe ff ff       	call   f01003dd <cons_putc>$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	eb 1e                	jmp    f0100542 <cons_putc+0x165>$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	0f b7 05 28 d2 22 f0 	movzwl 0xf022d228,%eax$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	66 89 15 28 d2 22 f0 	mov    %dx,0xf022d228$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	8b 15 2c d2 22 f0    	mov    0xf022d22c,%edx$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	66 81 3d 28 d2 22 f0 	cmpw   $0x7cf,0xf022d228$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	cf 07 $/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	76 43                	jbe    f0100590 <cons_putc+0x1b3>$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	a1 2c d2 22 f0       	mov    0xf022d22c,%eax$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	52                   	push   %edx$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	50                   	push   %eax$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	e8 b0 52 00 00       	call   f0105817 <memmove>$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	8b 15 2c d2 22 f0    	mov    0xf022d22c,%edx$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	83 c4 10             	add    $0x10,%esp$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	39 d0                	cmp    %edx,%eax$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	75 f4                	jne    f010057c <cons_putc+0x19f>$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	66 83 2d 28 d2 22 f0 	subw   $0x50,0xf022d228$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	50 $/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	8b 0d 30 d2 22 f0    	mov    0xf022d230,%ecx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	89 ca                	mov    %ecx,%edx$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	ee                   	out    %al,(%dx)$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	0f b7 1d 28 d2 22 f0 	movzwl 0xf022d228,%ebx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	89 d8                	mov    %ebx,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	89 f2                	mov    %esi,%edx$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	ee                   	out    %al,(%dx)$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	89 ca                	mov    %ecx,%edx$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	ee                   	out    %al,(%dx)$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	89 d8                	mov    %ebx,%eax$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	89 f2                	mov    %esi,%edx$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	ee                   	out    %al,(%dx)$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	5b                   	pop    %ebx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	5e                   	pop    %esi$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	5f                   	pop    %edi$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	5d                   	pop    %ebp$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	c3                   	ret    $/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6 <serial_intr>:$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	80 3d 34 d2 22 f0 00 	cmpb   $0x0,0xf022d234$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	74 11                	je     f01005e0 <serial_intr+0x1a>$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	55                   	push   %ebp$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	b8 70 02 10 f0       	mov    $0xf0100270,%eax$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	e8 b0 fc ff ff       	call   f010028f <cons_intr>$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	c9                   	leave  $/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	f3 c3                	repz ret $/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2 <kbd_intr>:$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	55                   	push   %ebp$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	b8 d2 02 10 f0       	mov    $0xf01002d2,%eax$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	e8 9d fc ff ff       	call   f010028f <cons_intr>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	c9                   	leave  $/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	c3                   	ret    $/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4 <cons_getc>:$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	55                   	push   %ebp$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	e8 c7 ff ff ff       	call   f01005c6 <serial_intr>$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	e8 de ff ff ff       	call   f01005e2 <kbd_intr>$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	a1 20 d2 22 f0       	mov    0xf022d220,%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	3b 05 24 d2 22 f0    	cmp    0xf022d224,%eax$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	74 26                	je     f0100637 <cons_getc+0x43>$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	89 15 20 d2 22 f0    	mov    %edx,0xf022d220$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	0f b6 88 20 d0 22 f0 	movzbl -0xfdd2fe0(%eax),%ecx$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 c8                	mov    %ecx,%eax$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	75 11                	jne    f010063c <cons_getc+0x48>$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	c7 05 20 d2 22 f0 00 	movl   $0x0,0xf022d220$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	00 00 00 $/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	eb 05                	jmp    f010063c <cons_getc+0x48>$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	c9                   	leave  $/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	c3                   	ret    $/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e <cons_init>:$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	55                   	push   %ebp$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	57                   	push   %edi$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	56                   	push   %esi$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	53                   	push   %ebx$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	5a a5 $/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	74 11                	je     f0100675 <cons_init+0x37>$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	c7 05 30 d2 22 f0 b4 	movl   $0x3b4,0xf022d230$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	03 00 00 $/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	eb 16                	jmp    f010068b <cons_init+0x4d>$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c7 05 30 d2 22 f0 d4 	movl   $0x3d4,0xf022d230$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	03 00 00 $/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	8b 3d 30 d2 22 f0    	mov    0xf022d230,%edi$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	89 fa                	mov    %edi,%edx$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	ee                   	out    %al,(%dx)$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	89 da                	mov    %ebx,%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	ec                   	in     (%dx),%al$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	89 fa                	mov    %edi,%edx$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	ee                   	out    %al,(%dx)$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	89 da                	mov    %ebx,%edx$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	ec                   	in     (%dx),%al$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	89 35 2c d2 22 f0    	mov    %esi,0xf022d22c$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	09 c8                	or     %ecx,%eax$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	66 a3 28 d2 22 f0    	mov    %ax,0xf022d228$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	e8 1c ff ff ff       	call   f01005e2 <kbd_intr>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	0f b7 05 a8 23 12 f0 	movzwl 0xf01223a8,%eax$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	50                   	push   %eax$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	e8 9a 2e 00 00       	call   f0103575 <irq_setmask_8259A>$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	89 f2                	mov    %esi,%edx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	ee                   	out    %al,(%dx)$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	ee                   	out    %al,(%dx)$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	89 da                	mov    %ebx,%edx$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	ee                   	out    %al,(%dx)$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	ee                   	out    %al,(%dx)$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	ee                   	out    %al,(%dx)$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	ee                   	out    %al,(%dx)$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	ee                   	out    %al,(%dx)$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	ec                   	in     (%dx),%al$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	89 c1                	mov    %eax,%ecx$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	3c ff                	cmp    $0xff,%al$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	0f 95 05 34 d2 22 f0 	setne  0xf022d234$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	89 f2                	mov    %esi,%edx$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	ec                   	in     (%dx),%al$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	89 da                	mov    %ebx,%edx$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	ec                   	in     (%dx),%al$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	75 10                	jne    f010075b <cons_init+0x11d>$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	68 4f 65 10 f0       	push   $0xf010654f$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	e8 6e 2f 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	83 c4 10             	add    $0x10,%esp$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	5b                   	pop    %ebx$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	5e                   	pop    %esi$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	5f                   	pop    %edi$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	5d                   	pop    %ebp$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	c3                   	ret    $/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763 <cputchar>:$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	55                   	push   %ebp$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	89 e5                	mov    %esp,%ebp$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	e8 6c fc ff ff       	call   f01003dd <cons_putc>$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	c9                   	leave  $/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	c3                   	ret    $/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773 <getchar>:$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	55                   	push   %ebp$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	89 e5                	mov    %esp,%ebp$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	e8 76 fe ff ff       	call   f01005f4 <cons_getc>$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	85 c0                	test   %eax,%eax$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	74 f7                	je     f0100779 <getchar+0x6>$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	c9                   	leave  $/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	c3                   	ret    $/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784 <iscons>:$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	55                   	push   %ebp$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	89 e5                	mov    %esp,%ebp$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	5d                   	pop    %ebp$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	c3                   	ret    $/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e <mon_help>:$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	55                   	push   %ebp$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	68 a0 67 10 f0       	push   $0xf01067a0$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	68 be 67 10 f0       	push   $0xf01067be$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	68 c3 67 10 f0       	push   $0xf01067c3$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	e8 1e 2f 00 00       	call   f01036c6 <cprintf>$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	68 2c 68 10 f0       	push   $0xf010682c$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	68 cc 67 10 f0       	push   $0xf01067cc$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	68 c3 67 10 f0       	push   $0xf01067c3$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	e8 07 2f 00 00       	call   f01036c6 <cprintf>$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	c9                   	leave  $/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	c3                   	ret    $/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6 <mon_kerninfo>:$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	55                   	push   %ebp$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	68 d5 67 10 f0       	push   $0xf01067d5$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	e8 f0 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	68 54 68 10 f0       	push   $0xf0106854$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	e8 de 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	68 7c 68 10 f0       	push   $0xf010687c$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	e8 c7 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	68 71 64 10 00       	push   $0x106471$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	68 71 64 10 f0       	push   $0xf0106471$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	68 a0 68 10 f0       	push   $0xf01068a0$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	e8 b0 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	68 a0 c7 22 00       	push   $0x22c7a0$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	68 a0 c7 22 f0       	push   $0xf022c7a0$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	68 c4 68 10 f0       	push   $0xf01068c4$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	e8 99 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	68 08 f0 27 00       	push   $0x27f008$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	68 08 f0 27 f0       	push   $0xf027f008$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	68 e8 68 10 f0       	push   $0xf01068e8$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	e8 82 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	b8 07 f4 27 f0       	mov    $0xf027f407,%eax$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	85 c0                	test   %eax,%eax$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	50                   	push   %eax$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	68 0c 69 10 f0       	push   $0xf010690c$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	e8 57 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	c9                   	leave  $/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	c3                   	ret    $/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876 <mon_backtrace>:$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	55                   	push   %ebp$/;"	l
f0100877	obj/kern/kernel.asm	/^f0100877:	89 e5                	mov    %esp,%ebp$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	5d                   	pop    %ebp$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	c3                   	ret    $/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880 <monitor>:$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	55                   	push   %ebp$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	89 e5                	mov    %esp,%ebp$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	57                   	push   %edi$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	56                   	push   %esi$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	53                   	push   %ebx$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	68 38 69 10 f0       	push   $0xf0106938$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	e8 33 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	c7 04 24 5c 69 10 f0 	movl   $0xf010695c,(%esp)$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	e8 27 2e 00 00       	call   f01036c6 <cprintf>$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	74 0e                	je     f01008b6 <monitor+0x36>$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	e8 62 35 00 00       	call   f0103e15 <print_trapframe>$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	68 ee 67 10 f0       	push   $0xf01067ee$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	e8 b0 4c 00 00       	call   f0105573 <readline>$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	89 c3                	mov    %eax,%ebx$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	85 c0                	test   %eax,%eax$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	74 ea                	je     f01008b6 <monitor+0x36>$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	eb 0a                	jmp    f01008e4 <monitor+0x64>$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	89 f7                	mov    %esi,%edi$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	89 fe                	mov    %edi,%esi$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	84 c0                	test   %al,%al$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	74 63                	je     f010094e <monitor+0xce>$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	0f be c0             	movsbl %al,%eax$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	50                   	push   %eax$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	68 f2 67 10 f0       	push   $0xf01067f2$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	e8 91 4e 00 00       	call   f010578d <strchr>$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	85 c0                	test   %eax,%eax$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	75 d7                	jne    f01008da <monitor+0x5a>$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	74 46                	je     f010094e <monitor+0xce>$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	75 14                	jne    f0100921 <monitor+0xa1>$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	6a 10                	push   $0x10$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	68 f7 67 10 f0       	push   $0xf01067f7$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	e8 aa 2d 00 00       	call   f01036c6 <cprintf>$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	eb 95                	jmp    f01008b6 <monitor+0x36>$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	eb 03                	jmp    f010092d <monitor+0xad>$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	84 c0                	test   %al,%al$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	74 ae                	je     f01008e2 <monitor+0x62>$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	0f be c0             	movsbl %al,%eax$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	50                   	push   %eax$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	68 f2 67 10 f0       	push   $0xf01067f2$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	e8 48 4e 00 00       	call   f010578d <strchr>$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	85 c0                	test   %eax,%eax$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	74 de                	je     f010092a <monitor+0xaa>$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	eb 94                	jmp    f01008e2 <monitor+0x62>$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	00 $/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	85 f6                	test   %esi,%esi$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	0f 84 58 ff ff ff    	je     f01008b6 <monitor+0x36>$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	68 be 67 10 f0       	push   $0xf01067be$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	e8 c1 4d 00 00       	call   f010572f <strcmp>$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	85 c0                	test   %eax,%eax$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	74 1e                	je     f0100993 <monitor+0x113>$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	68 cc 67 10 f0       	push   $0xf01067cc$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	e8 aa 4d 00 00       	call   f010572f <strcmp>$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	85 c0                	test   %eax,%eax$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	75 2f                	jne    f01009bb <monitor+0x13b>$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	eb 05                	jmp    f0100998 <monitor+0x118>$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	01 d0                	add    %edx,%eax$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	51                   	push   %ecx$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	56                   	push   %esi$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	ff 14 85 8c 69 10 f0 	call   *-0xfef9674(,%eax,4)$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	85 c0                	test   %eax,%eax$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	78 1d                	js     f01009d3 <monitor+0x153>$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	e9 fb fe ff ff       	jmp    f01008b6 <monitor+0x36>$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	68 14 68 10 f0       	push   $0xf0106814$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	e8 fb 2c 00 00       	call   f01036c6 <cprintf>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	e9 e3 fe ff ff       	jmp    f01008b6 <monitor+0x36>$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	5b                   	pop    %ebx$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	5e                   	pop    %esi$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	5f                   	pop    %edi$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	5d                   	pop    %ebp$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	c3                   	ret    $/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db <boot_alloc>:$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	83 3d 40 d2 22 f0 00 	cmpl   $0x0,0xf022d240$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	75 11                	jne    f01009f5 <boot_alloc+0x1a>$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	ba 07 00 28 f0       	mov    $0xf0280007,%edx$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	89 15 40 d2 22 f0    	mov    %edx,0xf022d240$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	85 c0                	test   %eax,%eax$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	75 06                	jne    f01009ff <boot_alloc+0x24>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	a1 40 d2 22 f0       	mov    0xf022d240,%eax$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	c3                   	ret    $/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	55                   	push   %ebp$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	53                   	push   %ebx$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	6a 6e                	push   $0x6e$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	68 54 76 10 f0       	push   $0xf0107654$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	ff 35 40 d2 22 f0    	pushl  0xf022d240$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	68 e4 6c 10 f0       	push   $0xf0106ce4$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	e8 a2 2c 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	a1 40 d2 22 f0       	mov    0xf022d240,%eax$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	8d 94 18 ff 0f 00 00 	lea    0xfff(%eax,%ebx,1),%edx$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	89 15 40 d2 22 f0    	mov    %edx,0xf022d240$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	c9                   	leave  $/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	c3                   	ret    $/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44 <check_va2pa>:$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	89 d1                	mov    %edx,%ecx$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	a8 01                	test   $0x1,%al$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	74 52                	je     f0100aa2 <check_va2pa+0x5e>$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	89 c1                	mov    %eax,%ecx$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	3b 0d 88 de 22 f0    	cmp    0xf022de88,%ecx$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	72 1b                	jb     f0100a7d <check_va2pa+0x39>$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	55                   	push   %ebp$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	50                   	push   %eax$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	68 c1 03 00 00       	push   $0x3c1$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	e8 c3 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	89 c2                	mov    %eax,%edx$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	85 d2                	test   %edx,%edx$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	c3                   	ret    $/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	c3                   	ret    $/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8 <check_page_free_list>:$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	55                   	push   %ebp$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	57                   	push   %edi$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	56                   	push   %esi$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	53                   	push   %ebx$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	84 c0                	test   %al,%al$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	0f 85 ac 02 00 00    	jne    f0100d65 <check_page_free_list+0x2bd>$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	e9 b9 02 00 00       	jmp    f0100d77 <check_page_free_list+0x2cf>$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	68 18 6d 10 f0       	push   $0xf0106d18$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	68 f3 02 00 00       	push   $0x2f3$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	e8 6b f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	89 c2                	mov    %eax,%edx$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	2b 15 90 de 22 f0    	sub    0xf022de90,%edx$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	0f 95 c2             	setne  %dl$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	8b 00                	mov    (%eax),%eax$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	85 c0                	test   %eax,%eax$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	75 dc                	jne    f0100ae1 <check_page_free_list+0x39>$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	89 10                	mov    %edx,(%eax)$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	a3 3c d2 22 f0       	mov    %eax,0xf022d23c$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	8b 1d 3c d2 22 f0    	mov    0xf022d23c,%ebx$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	eb 53                	jmp    f0100b7e <check_page_free_list+0xd6>$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	89 c2                	mov    %eax,%edx$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	39 f2                	cmp    %esi,%edx$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	73 3a                	jae    f0100b7c <check_page_free_list+0xd4>$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	89 c2                	mov    %eax,%edx$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	72 12                	jb     f0100b61 <check_page_free_list+0xb9>$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	50                   	push   %eax$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	6a 58                	push   $0x58$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	e8 df f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	68 80 00 00 00       	push   $0x80$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	68 97 00 00 00       	push   $0x97$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	50                   	push   %eax$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	e8 51 4c 00 00       	call   f01057ca <memset>$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	85 db                	test   %ebx,%ebx$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	75 a9                	jne    f0100b2b <check_page_free_list+0x83>$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	e8 4f fe ff ff       	call   f01009db <boot_alloc>$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	8b 15 3c d2 22 f0    	mov    0xf022d23c,%edx$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	8b 0d 90 de 22 f0    	mov    0xf022de90,%ecx$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	a1 88 de 22 f0       	mov    0xf022de88,%eax$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	e9 52 01 00 00       	jmp    f0100d08 <check_page_free_list+0x260>$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	73 19                	jae    f0100bd3 <check_page_free_list+0x12b>$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	68 b6 69 10 f0       	push   $0xf01069b6$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	68 0d 03 00 00       	push   $0x30d$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	e8 6d f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	72 19                	jb     f0100bf1 <check_page_free_list+0x149>$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	68 d7 69 10 f0       	push   $0xf01069d7$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	68 0e 03 00 00       	push   $0x30e$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	e8 4f f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	89 d0                	mov    %edx,%eax$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	a8 07                	test   $0x7,%al$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	74 19                	je     f0100c13 <check_page_free_list+0x16b>$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	68 3c 6d 10 f0       	push   $0xf0106d3c$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	68 0f 03 00 00       	push   $0x30f$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	e8 2d f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	85 c0                	test   %eax,%eax$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	75 19                	jne    f0100c36 <check_page_free_list+0x18e>$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	68 eb 69 10 f0       	push   $0xf01069eb$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	68 12 03 00 00       	push   $0x312$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	e8 0a f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	75 19                	jne    f0100c56 <check_page_free_list+0x1ae>$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	68 fc 69 10 f0       	push   $0xf01069fc$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	68 13 03 00 00       	push   $0x313$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	e8 ea f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	75 19                	jne    f0100c76 <check_page_free_list+0x1ce>$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	68 70 6d 10 f0       	push   $0xf0106d70$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	68 14 03 00 00       	push   $0x314$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	e8 ca f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	75 19                	jne    f0100c96 <check_page_free_list+0x1ee>$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	68 15 6a 10 f0       	push   $0xf0106a15$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	68 15 03 00 00       	push   $0x315$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	e8 aa f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	0f 86 fd 00 00 00    	jbe    f0100d9e <check_page_free_list+0x2f6>$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	89 c7                	mov    %eax,%edi$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	77 12                	ja     f0100cbd <check_page_free_list+0x215>$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	50                   	push   %eax$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	6a 58                	push   $0x58$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	e8 83 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	0f 86 c2 00 00 00    	jbe    f0100d8e <check_page_free_list+0x2e6>$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	68 94 6d 10 f0       	push   $0xf0106d94$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	68 16 03 00 00       	push   $0x316$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	e8 5b f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	68 2f 6a 10 f0       	push   $0xf0106a2f$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	68 18 03 00 00       	push   $0x318$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	e8 42 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	eb 03                	jmp    f0100d06 <check_page_free_list+0x25e>$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	8b 12                	mov    (%edx),%edx$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	85 d2                	test   %edx,%edx$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	0f 85 a6 fe ff ff    	jne    f0100bb6 <check_page_free_list+0x10e>$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	85 f6                	test   %esi,%esi$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	7f 19                	jg     f0100d2d <check_page_free_list+0x285>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	68 4c 6a 10 f0       	push   $0xf0106a4c$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	68 20 03 00 00       	push   $0x320$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	e8 13 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	85 db                	test   %ebx,%ebx$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	7f 19                	jg     f0100d4a <check_page_free_list+0x2a2>$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	68 5e 6a 10 f0       	push   $0xf0106a5e$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	68 21 03 00 00       	push   $0x321$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	e8 f6 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	68 22 03 00 00       	push   $0x322$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	68 3c 76 10 f0       	push   $0xf010763c$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	68 dc 6d 10 f0       	push   $0xf0106ddc$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	e8 63 29 00 00       	call   f01036c6 <cprintf>$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	eb 49                	jmp    f0100dae <check_page_free_list+0x306>$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	a1 3c d2 22 f0       	mov    0xf022d23c,%eax$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	85 c0                	test   %eax,%eax$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	0f 85 63 fd ff ff    	jne    f0100ad5 <check_page_free_list+0x2d>$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	e9 47 fd ff ff       	jmp    f0100abe <check_page_free_list+0x16>$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	83 3d 3c d2 22 f0 00 	cmpl   $0x0,0xf022d23c$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	0f 84 3a fd ff ff    	je     f0100abe <check_page_free_list+0x16>$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	e9 95 fd ff ff       	jmp    f0100b23 <check_page_free_list+0x7b>$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	0f 85 6a ff ff ff    	jne    f0100d03 <check_page_free_list+0x25b>$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	e9 47 ff ff ff       	jmp    f0100ce5 <check_page_free_list+0x23d>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	0f 85 55 ff ff ff    	jne    f0100cfe <check_page_free_list+0x256>$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	e9 37 ff ff ff       	jmp    f0100ce5 <check_page_free_list+0x23d>$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	5b                   	pop    %ebx$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	5e                   	pop    %esi$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	5f                   	pop    %edi$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	5d                   	pop    %ebp$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	c3                   	ret    $/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6 <page_init>:$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	55                   	push   %ebp$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	57                   	push   %edi$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	56                   	push   %esi$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	53                   	push   %ebx$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	8b 35 3c d2 22 f0    	mov    0xf022d23c,%esi$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	a1 40 d2 22 f0       	mov    0xf022d240,%eax$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	8d b8 00 00 00 10    	lea    0x10000000(%eax),%edi$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	c6 45 e3 00          	movb   $0x0,-0x1d(%ebp)$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	e9 ba 00 00 00       	jmp    f0100e9e <page_init+0xe8>$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	89 c2                	mov    %eax,%edx$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	81 fa 00 70 00 00    	cmp    $0x7000,%edx$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	75 12                	jne    f0100e03 <page_init+0x4d>$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	8b 15 90 de 22 f0    	mov    0xf022de90,%edx$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	66 c7 44 c2 04 01 00 	movw   $0x1,0x4(%edx,%eax,8)$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	e9 98 00 00 00       	jmp    f0100e9b <page_init+0xe5>$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	81 fa ff ff 09 00    	cmp    $0x9ffff,%edx$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	0f 96 c3             	setbe  %bl$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	85 c0                	test   %eax,%eax$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	0f 95 c1             	setne  %cl$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	20 d9                	and    %bl,%cl$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	74 24                	je     f0100e39 <page_init+0x83>$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	89 d3                	mov    %edx,%ebx$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	03 1d 90 de 22 f0    	add    0xf022de90,%ebx$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	89 33                	mov    %esi,(%ebx)$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	89 d6                	mov    %edx,%esi$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	03 35 90 de 22 f0    	add    0xf022de90,%esi$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	88 4d e3             	mov    %cl,-0x1d(%ebp)$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	eb 62                	jmp    f0100e9b <page_init+0xe5>$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	81 7d e4 ff ff ff ef 	cmpl   $0xefffffff,-0x1c(%ebp)$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	77 23                	ja     f0100e65 <page_init+0xaf>$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	80 7d e3 00          	cmpb   $0x0,-0x1d(%ebp)$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	74 06                	je     f0100e4e <page_init+0x98>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	89 35 3c d2 22 f0    	mov    %esi,0xf022d23c$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	68 52 01 00 00       	push   $0x152$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	e8 db f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	39 d7                	cmp    %edx,%edi$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	77 25                	ja     f0100e8e <page_init+0xd8>$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	89 d1                	mov    %edx,%ecx$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	03 0d 90 de 22 f0    	add    0xf022de90,%ecx$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	89 31                	mov    %esi,(%ecx)$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	89 d6                	mov    %edx,%esi$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	03 35 90 de 22 f0    	add    0xf022de90,%esi$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	c6 45 e3 01          	movb   $0x1,-0x1d(%ebp)$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	eb 0d                	jmp    f0100e9b <page_init+0xe5>$/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	8b 15 90 de 22 f0    	mov    0xf022de90,%edx$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	66 c7 44 c2 04 01 00 	movw   $0x1,0x4(%edx,%eax,8)$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	3b 05 88 de 22 f0    	cmp    0xf022de88,%eax$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	0f 82 3a ff ff ff    	jb     f0100de4 <page_init+0x2e>$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	80 7d e3 00          	cmpb   $0x0,-0x1d(%ebp)$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	74 06                	je     f0100eb6 <page_init+0x100>$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	89 35 3c d2 22 f0    	mov    %esi,0xf022d23c$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	5b                   	pop    %ebx$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	5e                   	pop    %esi$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	5f                   	pop    %edi$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	5d                   	pop    %ebp$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	c3                   	ret    $/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe <page_alloc>:$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	55                   	push   %ebp$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	53                   	push   %ebx$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	8b 1d 3c d2 22 f0    	mov    0xf022d23c,%ebx$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	85 db                	test   %ebx,%ebx$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	74 62                	je     f0100f31 <page_alloc+0x73>$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	a3 3c d2 22 f0       	mov    %eax,0xf022d23c$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	6a 08                	push   $0x8$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	6a 00                	push   $0x0$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	53                   	push   %ebx$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	e8 e7 48 00 00       	call   f01057ca <memset>$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	74 45                	je     f0100f31 <page_alloc+0x73>$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	89 d8                	mov    %ebx,%eax$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 c2                	mov    %eax,%edx$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	72 12                	jb     f0100f19 <page_alloc+0x5b>$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	50                   	push   %eax$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	6a 58                	push   $0x58$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	e8 27 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	6a 00                	push   $0x0$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	50                   	push   %eax$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	e8 9c 48 00 00       	call   f01057ca <memset>$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	c9                   	leave  $/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	c3                   	ret    $/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38 <page_free>:$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	55                   	push   %ebp$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	74 19                	je     f0100f5f <page_free+0x27>$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	68 6f 6a 10 f0       	push   $0xf0106a6f$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	68 84 01 00 00       	push   $0x184$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	e8 e1 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	74 19                	je     f0100f7f <page_free+0x47>$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	68 83 6a 10 f0       	push   $0xf0106a83$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	68 85 01 00 00       	push   $0x185$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	e8 c1 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	8b 15 3c d2 22 f0    	mov    0xf022d23c,%edx$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	89 10                	mov    %edx,(%eax)$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	a3 3c d2 22 f0       	mov    %eax,0xf022d23c$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	c9                   	leave  $/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	c3                   	ret    $/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e <page_decref>:$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	55                   	push   %ebp$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	66 85 c0             	test   %ax,%ax$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	75 0c                	jne    f0100fb3 <page_decref+0x25>$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	52                   	push   %edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	e8 88 ff ff ff       	call   f0100f38 <page_free>$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	c9                   	leave  $/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	c3                   	ret    $/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5 <pgdir_walk>:$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	55                   	push   %ebp$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	56                   	push   %esi$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	53                   	push   %ebx$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	89 f3                	mov    %esi,%ebx$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	a8 01                	test   $0x1,%al$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	74 39                	je     f0101007 <pgdir_walk+0x52>$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	89 c2                	mov    %eax,%edx$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	39 15 88 de 22 f0    	cmp    %edx,0xf022de88$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	77 15                	ja     f0100ff5 <pgdir_walk+0x40>$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	50                   	push   %eax$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	68 c8 01 00 00       	push   $0x1c8$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	e8 4b f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	eb 6c                	jmp    f0101073 <pgdir_walk+0xbe>$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	75 5a                	jne    f0101067 <pgdir_walk+0xb2>$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	6a 01                	push   $0x1$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	e8 a7 fe ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	83 c4 10             	add    $0x10,%esp$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	85 c0                	test   %eax,%eax$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	74 50                	je     f010106e <pgdir_walk+0xb9>$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	89 c2                	mov    %eax,%edx$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	72 12                	jb     f010104e <pgdir_walk+0x99>$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	50                   	push   %eax$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	6a 58                	push   $0x58$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	e8 f2 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	89 c2                	mov    %eax,%edx$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	83 ca 07             	or     $0x7,%edx$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	89 13                	mov    %edx,(%ebx)$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	eb 0c                	jmp    f0101073 <pgdir_walk+0xbe>$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	eb 05                	jmp    f0101073 <pgdir_walk+0xbe>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	5b                   	pop    %ebx$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	5e                   	pop    %esi$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	5d                   	pop    %ebp$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	c3                   	ret    $/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a <boot_map_region>:$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	55                   	push   %ebp$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	89 e5                	mov    %esp,%ebp$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	57                   	push   %edi$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	56                   	push   %esi$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	53                   	push   %ebx$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	89 c8                	mov    %ecx,%eax$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	83 f9 ff             	cmp    $0xffffffff,%ecx$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	0f 45 c8             	cmovne %eax,%ecx$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	89 d3                	mov    %edx,%ebx$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	29 d0                	sub    %edx,%eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	83 c8 01             	or     $0x1,%eax$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	eb 2b                	jmp    f01010d9 <boot_map_region+0x5f>$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	6a 01                	push   $0x1$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	53                   	push   %ebx$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	e8 f9 fe ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	89 da                	mov    %ebx,%edx$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	29 d6                	sub    %edx,%esi$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	0b 75 d8             	or     -0x28(%ebp),%esi$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	89 30                	mov    %esi,(%eax)$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	74 0e                	je     f01010e4 <boot_map_region+0x6a>$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	83 c7 01             	add    $0x1,%edi$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	75 ca                	jne    f01010ae <boot_map_region+0x34>$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	5b                   	pop    %ebx$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	5e                   	pop    %esi$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	5f                   	pop    %edi$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	5d                   	pop    %ebp$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	c3                   	ret    $/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec <page_lookup>:$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	55                   	push   %ebp$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	53                   	push   %ebx$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	6a 00                	push   $0x0$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	e8 b2 fe ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	85 c0                	test   %eax,%eax$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	74 37                	je     f0101141 <page_lookup+0x55>$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	74 39                	je     f0101148 <page_lookup+0x5c>$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	85 db                	test   %ebx,%ebx$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	74 02                	je     f0101115 <page_lookup+0x29>$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	8b 00                	mov    (%eax),%eax$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	3b 05 88 de 22 f0    	cmp    0xf022de88,%eax$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	72 14                	jb     f0101136 <page_lookup+0x4a>$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	68 00 6e 10 f0       	push   $0xf0106e00$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	6a 51                	push   $0x51$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	e8 0a ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	8b 15 90 de 22 f0    	mov    0xf022de90,%edx$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	eb 0c                	jmp    f010114d <page_lookup+0x61>$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	eb 05                	jmp    f010114d <page_lookup+0x61>$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	c9                   	leave  $/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	c3                   	ret    $/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152 <tlb_invalidate>:$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	55                   	push   %ebp$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	89 e5                	mov    %esp,%ebp$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	e8 8d 4c 00 00       	call   f0105dea <cpunum>$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	83 b8 28 e0 23 f0 00 	cmpl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	74 16                	je     f010117f <tlb_invalidate+0x2d>$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	e8 7c 4c 00 00       	call   f0105dea <cpunum>$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	75 06                	jne    f0101185 <tlb_invalidate+0x33>$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	0f 01 38             	invlpg (%eax)$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	c9                   	leave  $/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	c3                   	ret    $/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187 <page_remove>:$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	55                   	push   %ebp$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	89 e5                	mov    %esp,%ebp$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	56                   	push   %esi$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	53                   	push   %ebx$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	50                   	push   %eax$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	56                   	push   %esi$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	53                   	push   %ebx$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	e8 4c ff ff ff       	call   f01010ec <page_lookup>$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	85 c0                	test   %eax,%eax$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	74 1f                	je     f01011c6 <page_remove+0x3f>$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	50                   	push   %eax$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	e8 de fd ff ff       	call   f0100f8e <page_decref>$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	56                   	push   %esi$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	53                   	push   %ebx$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	e8 8f ff ff ff       	call   f0101152 <tlb_invalidate>$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	5b                   	pop    %ebx$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	5e                   	pop    %esi$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	5d                   	pop    %ebp$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	c3                   	ret    $/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd <page_insert>:$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	55                   	push   %ebp$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	57                   	push   %edi$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	56                   	push   %esi$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	53                   	push   %ebx$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	6a 01                	push   $0x1$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	57                   	push   %edi$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	e8 ce fd ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	85 c0                	test   %eax,%eax$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	74 6f                	je     f010125d <page_insert+0x90>$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	89 c3                	mov    %eax,%ebx$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	8b 00                	mov    (%eax),%eax$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	a8 01                	test   $0x1,%al$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	74 43                	je     f0101239 <page_insert+0x6c>$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	89 f2                	mov    %esi,%edx$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	2b 15 90 de 22 f0    	sub    0xf022de90,%edx$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	39 d0                	cmp    %edx,%eax$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	75 11                	jne    f010121e <page_insert+0x51>$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	09 d0                	or     %edx,%eax$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	eb 44                	jmp    f0101262 <page_insert+0x95>$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	57                   	push   %edi$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	e8 5d ff ff ff       	call   f0101187 <page_remove>$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	57                   	push   %edi$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	e8 1c ff ff ff       	call   f0101152 <tlb_invalidate>$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	89 f0                	mov    %esi,%eax$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	83 ca 01             	or     $0x1,%edx$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	09 d0                	or     %edx,%eax$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	eb 05                	jmp    f0101262 <page_insert+0x95>$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	5b                   	pop    %ebx$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	5e                   	pop    %esi$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	5f                   	pop    %edi$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	5d                   	pop    %ebp$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	c3                   	ret    $/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a <mmio_map_region>:$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	55                   	push   %ebp$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	89 e5                	mov    %esp,%ebp$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	53                   	push   %ebx$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	8b 15 00 23 12 f0    	mov    0xf0122300,%edx$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	8d 9a ff 0f 00 00    	lea    0xfff(%edx),%ebx$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	03 5d 0c             	add    0xc(%ebp),%ebx$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	81 fb 00 00 c0 ef    	cmp    $0xefc00000,%ebx$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	76 17                	jbe    f01012ab <mmio_map_region+0x41>$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	68 93 6a 10 f0       	push   $0xf0106a93$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	68 97 02 00 00       	push   $0x297$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	e8 95 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	89 d9                	mov    %ebx,%ecx$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	29 d1                	sub    %edx,%ecx$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	6a 1b                	push   $0x1b$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	e8 b9 fd ff ff       	call   f010107a <boot_map_region>$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	a1 00 23 12 f0       	mov    0xf0122300,%eax$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	89 1d 00 23 12 f0    	mov    %ebx,0xf0122300$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	c9                   	leave  $/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	c3                   	ret    $/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1 <mem_init>:$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	55                   	push   %ebp$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	57                   	push   %edi$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	56                   	push   %esi$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	53                   	push   %ebx$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	83 ec 48             	sub    $0x48,%esp$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	6a 15                	push   $0x15$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	e8 66 22 00 00       	call   f0103547 <mc146818_read>$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	89 c3                	mov    %eax,%ebx$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	e8 58 22 00 00       	call   f0103547 <mc146818_read>$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	09 d8                	or     %ebx,%eax$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	85 c0                	test   %eax,%eax$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	a3 44 d2 22 f0       	mov    %eax,0xf022d244$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	e8 31 22 00 00       	call   f0103547 <mc146818_read>$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	89 c3                	mov    %eax,%ebx$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	e8 23 22 00 00       	call   f0103547 <mc146818_read>$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	09 d8                	or     %ebx,%eax$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	85 c0                	test   %eax,%eax$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	85 c0                	test   %eax,%eax$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	74 0e                	je     f010134f <mem_init+0x7e>$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	89 15 88 de 22 f0    	mov    %edx,0xf022de88$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	eb 0c                	jmp    f010135b <mem_init+0x8a>$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	8b 15 44 d2 22 f0    	mov    0xf022d244,%edx$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	89 15 88 de 22 f0    	mov    %edx,0xf022de88$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	50                   	push   %eax$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	a1 44 d2 22 f0       	mov    0xf022d244,%eax$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	50                   	push   %eax$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	a1 88 de 22 f0       	mov    0xf022de88,%eax$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	50                   	push   %eax$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	68 20 6e 10 f0       	push   $0xf0106e20$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	e8 42 23 00 00       	call   f01036c6 <cprintf>$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	e8 4d f6 ff ff       	call   f01009db <boot_alloc>$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	a3 8c de 22 f0       	mov    %eax,0xf022de8c$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	68 00 10 00 00       	push   $0x1000$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	6a 00                	push   $0x0$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	50                   	push   %eax$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	e8 27 44 00 00       	call   f01057ca <memset>$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	77 15                	ja     f01013c7 <mem_init+0xf6>$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	50                   	push   %eax$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	68 96 00 00 00       	push   $0x96$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	e8 79 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	83 ca 05             	or     $0x5,%edx$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	a1 88 de 22 f0       	mov    0xf022de88,%eax$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	e8 f8 f5 ff ff       	call   f01009db <boot_alloc>$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	a3 90 de 22 f0       	mov    %eax,0xf022de90$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	e8 e9 f5 ff ff       	call   f01009db <boot_alloc>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	a3 48 d2 22 f0       	mov    %eax,0xf022d248$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	e8 ba f9 ff ff       	call   f0100db6 <page_init>$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	e8 a2 f6 ff ff       	call   f0100aa8 <check_page_free_list>$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	83 3d 90 de 22 f0 00 	cmpl   $0x0,0xf022de90$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	75 17                	jne    f0101426 <mem_init+0x155>$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	68 a4 6a 10 f0       	push   $0xf0106aa4$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	68 33 03 00 00       	push   $0x333$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	e8 1a ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	a1 3c d2 22 f0       	mov    0xf022d23c,%eax$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	eb 05                	jmp    f0101437 <mem_init+0x166>$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	8b 00                	mov    (%eax),%eax$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	85 c0                	test   %eax,%eax$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	75 f7                	jne    f0101432 <mem_init+0x161>$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	6a 00                	push   $0x0$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	e8 79 fa ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	89 c7                	mov    %eax,%edi$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	83 c4 10             	add    $0x10,%esp$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	85 c0                	test   %eax,%eax$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	75 19                	jne    f0101467 <mem_init+0x196>$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	68 bf 6a 10 f0       	push   $0xf0106abf$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	68 3b 03 00 00       	push   $0x33b$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	e8 d9 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	6a 00                	push   $0x0$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	e8 4d fa ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	89 c6                	mov    %eax,%esi$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	85 c0                	test   %eax,%eax$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	75 19                	jne    f0101493 <mem_init+0x1c2>$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	68 d5 6a 10 f0       	push   $0xf0106ad5$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	68 3c 03 00 00       	push   $0x33c$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	e8 ad eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	6a 00                	push   $0x0$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	e8 21 fa ff ff       	call   f0100ebe <page_alloc>$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	85 c0                	test   %eax,%eax$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	75 19                	jne    f01014c0 <mem_init+0x1ef>$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	68 eb 6a 10 f0       	push   $0xf0106aeb$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	68 3d 03 00 00       	push   $0x33d$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	e8 80 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	39 f7                	cmp    %esi,%edi$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	75 19                	jne    f01014dd <mem_init+0x20c>$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	68 01 6b 10 f0       	push   $0xf0106b01$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	68 40 03 00 00       	push   $0x340$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	e8 63 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	39 c6                	cmp    %eax,%esi$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	74 04                	je     f01014e8 <mem_init+0x217>$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	39 c7                	cmp    %eax,%edi$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	75 19                	jne    f0101501 <mem_init+0x230>$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	68 5c 6e 10 f0       	push   $0xf0106e5c$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	68 41 03 00 00       	push   $0x341$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	e8 3f eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	8b 0d 90 de 22 f0    	mov    0xf022de90,%ecx$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	8b 15 88 de 22 f0    	mov    0xf022de88,%edx$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	89 f8                	mov    %edi,%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	29 c8                	sub    %ecx,%eax$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	39 d0                	cmp    %edx,%eax$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	72 19                	jb     f0101537 <mem_init+0x266>$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	68 13 6b 10 f0       	push   $0xf0106b13$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	68 42 03 00 00       	push   $0x342$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	e8 09 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	89 f0                	mov    %esi,%eax$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	29 c8                	sub    %ecx,%eax$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	39 c2                	cmp    %eax,%edx$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	77 19                	ja     f010155e <mem_init+0x28d>$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	68 30 6b 10 f0       	push   $0xf0106b30$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	68 43 03 00 00       	push   $0x343$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	e8 e2 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	29 c8                	sub    %ecx,%eax$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	39 c2                	cmp    %eax,%edx$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	77 19                	ja     f0101586 <mem_init+0x2b5>$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	68 4d 6b 10 f0       	push   $0xf0106b4d$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	68 44 03 00 00       	push   $0x344$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	e8 ba ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	a1 3c d2 22 f0       	mov    0xf022d23c,%eax$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	c7 05 3c d2 22 f0 00 	movl   $0x0,0xf022d23c$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	00 00 00 $/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	6a 00                	push   $0x0$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	e8 1c f9 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	85 c0                	test   %eax,%eax$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	74 19                	je     f01015c2 <mem_init+0x2f1>$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	68 6a 6b 10 f0       	push   $0xf0106b6a$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	68 4b 03 00 00       	push   $0x34b$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	e8 7e ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	57                   	push   %edi$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	e8 6d f9 ff ff       	call   f0100f38 <page_free>$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	e8 65 f9 ff ff       	call   f0100f38 <page_free>$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	83 c4 04             	add    $0x4,%esp$/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	e8 5a f9 ff ff       	call   f0100f38 <page_free>$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	e8 d4 f8 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	89 c6                	mov    %eax,%esi$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	85 c0                	test   %eax,%eax$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	75 19                	jne    f010160c <mem_init+0x33b>$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	68 bf 6a 10 f0       	push   $0xf0106abf$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	68 52 03 00 00       	push   $0x352$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	e8 34 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	6a 00                	push   $0x0$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	e8 a8 f8 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	89 c7                	mov    %eax,%edi$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	83 c4 10             	add    $0x10,%esp$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	85 c0                	test   %eax,%eax$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	75 19                	jne    f0101638 <mem_init+0x367>$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	68 d5 6a 10 f0       	push   $0xf0106ad5$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	68 53 03 00 00       	push   $0x353$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	e8 08 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	6a 00                	push   $0x0$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	e8 7c f8 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	85 c0                	test   %eax,%eax$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	75 19                	jne    f0101665 <mem_init+0x394>$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	68 eb 6a 10 f0       	push   $0xf0106aeb$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	68 54 03 00 00       	push   $0x354$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	e8 db e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	39 fe                	cmp    %edi,%esi$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	75 19                	jne    f0101682 <mem_init+0x3b1>$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	68 01 6b 10 f0       	push   $0xf0106b01$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	68 56 03 00 00       	push   $0x356$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	e8 be e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	39 c7                	cmp    %eax,%edi$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	74 04                	je     f010168d <mem_init+0x3bc>$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	39 c6                	cmp    %eax,%esi$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	75 19                	jne    f01016a6 <mem_init+0x3d5>$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	68 5c 6e 10 f0       	push   $0xf0106e5c$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	68 57 03 00 00       	push   $0x357$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	e8 9a e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	6a 00                	push   $0x0$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	e8 0e f8 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	85 c0                	test   %eax,%eax$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	74 19                	je     f01016d0 <mem_init+0x3ff>$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	68 6a 6b 10 f0       	push   $0xf0106b6a$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	68 58 03 00 00       	push   $0x358$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	e8 70 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	89 f0                	mov    %esi,%eax$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	89 c2                	mov    %eax,%edx$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	72 12                	jb     f01016fd <mem_init+0x42c>$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	50                   	push   %eax$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	6a 58                	push   $0x58$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	e8 43 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	6a 01                	push   $0x1$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	50                   	push   %eax$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	e8 b8 40 00 00       	call   f01057ca <memset>$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	e8 1e f8 ff ff       	call   f0100f38 <page_free>$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	e8 98 f7 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	85 c0                	test   %eax,%eax$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	75 19                	jne    f0101746 <mem_init+0x475>$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	68 79 6b 10 f0       	push   $0xf0106b79$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	68 5d 03 00 00       	push   $0x35d$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	e8 fa e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	39 c6                	cmp    %eax,%esi$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	74 19                	je     f0101763 <mem_init+0x492>$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	68 97 6b 10 f0       	push   $0xf0106b97$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	68 5e 03 00 00       	push   $0x35e$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	e8 dd e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	89 f0                	mov    %esi,%eax$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	89 c2                	mov    %eax,%edx$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	72 12                	jb     f0101790 <mem_init+0x4bf>$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	50                   	push   %eax$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	6a 58                	push   $0x58$/;"	l
f0101786	obj/kern/kernel.asm	/^f0101786:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	e8 b0 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	74 19                	je     f01017ba <mem_init+0x4e9>$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	68 a7 6b 10 f0       	push   $0xf0106ba7$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	68 61 03 00 00       	push   $0x361$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	e8 86 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	83 c0 01             	add    $0x1,%eax$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	39 d0                	cmp    %edx,%eax$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	75 db                	jne    f010179c <mem_init+0x4cb>$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	a3 3c d2 22 f0       	mov    %eax,0xf022d23c$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	56                   	push   %esi$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	e8 66 f7 ff ff       	call   f0100f38 <page_free>$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	e8 5e f7 ff ff       	call   f0100f38 <page_free>$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	83 c4 04             	add    $0x4,%esp$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	e8 53 f7 ff ff       	call   f0100f38 <page_free>$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	a1 3c d2 22 f0       	mov    0xf022d23c,%eax$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	eb 05                	jmp    f01017f4 <mem_init+0x523>$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	8b 00                	mov    (%eax),%eax$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	85 c0                	test   %eax,%eax$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	75 f7                	jne    f01017ef <mem_init+0x51e>$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	85 db                	test   %ebx,%ebx$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	74 19                	je     f0101815 <mem_init+0x544>$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	68 b1 6b 10 f0       	push   $0xf0106bb1$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	68 6e 03 00 00       	push   $0x36e$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	e8 2b e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	68 7c 6e 10 f0       	push   $0xf0106e7c$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	e8 a4 1e 00 00       	call   f01036c6 <cprintf>$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	e8 90 f6 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	85 c0                	test   %eax,%eax$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	75 19                	jne    f0101851 <mem_init+0x580>$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	68 bf 6a 10 f0       	push   $0xf0106abf$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	68 d6 03 00 00       	push   $0x3d6$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	e8 ef e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	6a 00                	push   $0x0$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	e8 63 f6 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	89 c3                	mov    %eax,%ebx$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	85 c0                	test   %eax,%eax$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	75 19                	jne    f010187d <mem_init+0x5ac>$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	68 d5 6a 10 f0       	push   $0xf0106ad5$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	68 d7 03 00 00       	push   $0x3d7$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	e8 c3 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	6a 00                	push   $0x0$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	e8 37 f6 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	89 c6                	mov    %eax,%esi$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	83 c4 10             	add    $0x10,%esp$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	85 c0                	test   %eax,%eax$/;"	l
f010188e	obj/kern/kernel.asm	/^f010188e:	75 19                	jne    f01018a9 <mem_init+0x5d8>$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	68 eb 6a 10 f0       	push   $0xf0106aeb$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	68 d8 03 00 00       	push   $0x3d8$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	e8 97 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	75 19                	jne    f01018c7 <mem_init+0x5f6>$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	68 01 6b 10 f0       	push   $0xf0106b01$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	68 db 03 00 00       	push   $0x3db$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	e8 79 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	39 c3                	cmp    %eax,%ebx$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	74 05                	je     f01018d0 <mem_init+0x5ff>$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	75 19                	jne    f01018e9 <mem_init+0x618>$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	68 5c 6e 10 f0       	push   $0xf0106e5c$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	68 dc 03 00 00       	push   $0x3dc$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	e8 57 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	a1 3c d2 22 f0       	mov    0xf022d23c,%eax$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	c7 05 3c d2 22 f0 00 	movl   $0x0,0xf022d23c$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	00 00 00 $/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	6a 00                	push   $0x0$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	e8 b9 f5 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	85 c0                	test   %eax,%eax$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	74 19                	je     f0101925 <mem_init+0x654>$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	68 6a 6b 10 f0       	push   $0xf0106b6a$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	e8 1b e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	50                   	push   %eax$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	6a 00                	push   $0x0$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	e8 b3 f7 ff ff       	call   f01010ec <page_lookup>$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	83 c4 10             	add    $0x10,%esp$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	85 c0                	test   %eax,%eax$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	74 19                	je     f0101959 <mem_init+0x688>$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	68 9c 6e 10 f0       	push   $0xf0106e9c$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	68 e6 03 00 00       	push   $0x3e6$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	e8 e7 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	6a 02                	push   $0x2$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	6a 00                	push   $0x0$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	53                   	push   %ebx$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	e8 64 f8 ff ff       	call   f01011cd <page_insert>$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	83 c4 10             	add    $0x10,%esp$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	85 c0                	test   %eax,%eax$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	78 19                	js     f0101989 <mem_init+0x6b8>$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	68 d4 6e 10 f0       	push   $0xf0106ed4$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	e8 b7 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	e8 a4 f5 ff ff       	call   f0100f38 <page_free>$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	6a 02                	push   $0x2$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	6a 00                	push   $0x0$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	53                   	push   %ebx$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	e8 29 f8 ff ff       	call   f01011cd <page_insert>$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	85 c0                	test   %eax,%eax$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	74 19                	je     f01019c4 <mem_init+0x6f3>$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	68 04 6f 10 f0       	push   $0xf0106f04$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	68 ed 03 00 00       	push   $0x3ed$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	e8 7c e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	8b 3d 8c de 22 f0    	mov    0xf022de8c,%edi$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	a1 90 de 22 f0       	mov    0xf022de90,%eax$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	89 c1                	mov    %eax,%ecx$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	8b 17                	mov    (%edi),%edx$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	29 c8                	sub    %ecx,%eax$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	39 c2                	cmp    %eax,%edx$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	74 19                	je     f0101a04 <mem_init+0x733>$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	68 34 6f 10 f0       	push   $0xf0106f34$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	e8 3c e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	89 f8                	mov    %edi,%eax$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	e8 34 f0 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	89 da                	mov    %ebx,%edx$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	74 19                	je     f0101a38 <mem_init+0x767>$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	68 5c 6f 10 f0       	push   $0xf0106f5c$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101a29	obj/kern/kernel.asm	/^f0101a29:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	e8 08 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	74 19                	je     f0101a58 <mem_init+0x787>$/;"	l
f0101a3f	obj/kern/kernel.asm	/^f0101a3f:	68 bc 6b 10 f0       	push   $0xf0106bbc$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	e8 e8 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	74 19                	je     f0101a7b <mem_init+0x7aa>$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	68 cd 6b 10 f0       	push   $0xf0106bcd$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	e8 c5 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	6a 02                	push   $0x2$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	56                   	push   %esi$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	57                   	push   %edi$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	e8 44 f7 ff ff       	call   f01011cd <page_insert>$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	85 c0                	test   %eax,%eax$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	74 19                	je     f0101aa9 <mem_init+0x7d8>$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	68 8c 6f 10 f0       	push   $0xf0106f8c$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	e8 97 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	e8 8c ef ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	89 f2                	mov    %esi,%edx$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	2b 15 90 de 22 f0    	sub    0xf022de90,%edx$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	74 19                	je     f0101ae3 <mem_init+0x812>$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	68 c8 6f 10 f0       	push   $0xf0106fc8$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	e8 5d e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	74 19                	je     f0101b03 <mem_init+0x832>$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	68 de 6b 10 f0       	push   $0xf0106bde$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	e8 3d e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	6a 00                	push   $0x0$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	e8 b1 f3 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	85 c0                	test   %eax,%eax$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	74 19                	je     f0101b2d <mem_init+0x85c>$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	68 6a 6b 10 f0       	push   $0xf0106b6a$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	68 f9 03 00 00       	push   $0x3f9$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	e8 13 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	6a 02                	push   $0x2$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	56                   	push   %esi$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	e8 8d f6 ff ff       	call   f01011cd <page_insert>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	85 c0                	test   %eax,%eax$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	74 19                	je     f0101b60 <mem_init+0x88f>$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	68 8c 6f 10 f0       	push   $0xf0106f8c$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0101b56	obj/kern/kernel.asm	/^f0101b56:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	e8 e0 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	e8 d5 ee ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	89 f2                	mov    %esi,%edx$/;"	l
f0101b71	obj/kern/kernel.asm	/^f0101b71:	2b 15 90 de 22 f0    	sub    0xf022de90,%edx$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	74 19                	je     f0101b9a <mem_init+0x8c9>$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	68 c8 6f 10 f0       	push   $0xf0106fc8$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	e8 a6 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	74 19                	je     f0101bba <mem_init+0x8e9>$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	68 de 6b 10 f0       	push   $0xf0106bde$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	e8 86 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	6a 00                	push   $0x0$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	e8 fa f2 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	85 c0                	test   %eax,%eax$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	74 19                	je     f0101be4 <mem_init+0x913>$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	68 6a 6b 10 f0       	push   $0xf0106b6a$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	68 02 04 00 00       	push   $0x402$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	e8 5c e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	8b 15 8c de 22 f0    	mov    0xf022de8c,%edx$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	8b 02                	mov    (%edx),%eax$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	3b 0d 88 de 22 f0    	cmp    0xf022de88,%ecx$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	72 15                	jb     f0101c13 <mem_init+0x942>$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	50                   	push   %eax$/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	68 05 04 00 00       	push   $0x405$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	e8 2d e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	6a 00                	push   $0x0$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	52                   	push   %edx$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	e8 8a f3 ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	74 19                	je     f0101c51 <mem_init+0x980>$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	68 f8 6f 10 f0       	push   $0xf0106ff8$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	68 06 04 00 00       	push   $0x406$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	e8 ef e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	6a 06                	push   $0x6$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	56                   	push   %esi$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	e8 69 f5 ff ff       	call   f01011cd <page_insert>$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	85 c0                	test   %eax,%eax$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	74 19                	je     f0101c84 <mem_init+0x9b3>$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	68 38 70 10 f0       	push   $0xf0107038$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	68 09 04 00 00       	push   $0x409$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	e8 bc e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	8b 3d 8c de 22 f0    	mov    0xf022de8c,%edi$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	89 f8                	mov    %edi,%eax$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	e8 ae ed ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	89 f2                	mov    %esi,%edx$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	2b 15 90 de 22 f0    	sub    0xf022de90,%edx$/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	74 19                	je     f0101cc1 <mem_init+0x9f0>$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	68 c8 6f 10 f0       	push   $0xf0106fc8$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	68 0a 04 00 00       	push   $0x40a$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	e8 7f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	74 19                	je     f0101ce1 <mem_init+0xa10>$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	68 de 6b 10 f0       	push   $0xf0106bde$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	68 0b 04 00 00       	push   $0x40b$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	e8 5f e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	6a 00                	push   $0x0$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	57                   	push   %edi$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	e8 c4 f2 ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	75 19                	jne    f0101d12 <mem_init+0xa41>$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	68 78 70 10 f0       	push   $0xf0107078$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	e8 2e e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	75 19                	jne    f0101d35 <mem_init+0xa64>$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	68 ef 6b 10 f0       	push   $0xf0106bef$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	68 0d 04 00 00       	push   $0x40d$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	e8 0b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	6a 02                	push   $0x2$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	56                   	push   %esi$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	50                   	push   %eax$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	e8 8a f4 ff ff       	call   f01011cd <page_insert>$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	85 c0                	test   %eax,%eax$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	74 19                	je     f0101d63 <mem_init+0xa92>$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	68 8c 6f 10 f0       	push   $0xf0106f8c$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	68 10 04 00 00       	push   $0x410$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	e8 dd e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	6a 00                	push   $0x0$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	e8 3d f2 ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	75 19                	jne    f0101d99 <mem_init+0xac8>$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	68 ac 70 10 f0       	push   $0xf01070ac$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	68 11 04 00 00       	push   $0x411$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	e8 a7 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	6a 00                	push   $0x0$/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	e8 07 f2 ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	74 19                	je     f0101dcf <mem_init+0xafe>$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	68 e0 70 10 f0       	push   $0xf01070e0$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	68 12 04 00 00       	push   $0x412$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	e8 71 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	6a 02                	push   $0x2$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	e8 e9 f3 ff ff       	call   f01011cd <page_insert>$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	85 c0                	test   %eax,%eax$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	78 19                	js     f0101e04 <mem_init+0xb33>$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	68 18 71 10 f0       	push   $0xf0107118$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	68 15 04 00 00       	push   $0x415$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	e8 3c e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	6a 02                	push   $0x2$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	53                   	push   %ebx$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	e8 b6 f3 ff ff       	call   f01011cd <page_insert>$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	85 c0                	test   %eax,%eax$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	74 19                	je     f0101e37 <mem_init+0xb66>$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	68 50 71 10 f0       	push   $0xf0107150$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	68 18 04 00 00       	push   $0x418$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	e8 09 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	6a 00                	push   $0x0$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	e8 69 f1 ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	74 19                	je     f0101e6d <mem_init+0xb9c>$/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	68 e0 70 10 f0       	push   $0xf01070e0$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	68 19 04 00 00       	push   $0x419$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	e8 d3 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	8b 3d 8c de 22 f0    	mov    0xf022de8c,%edi$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	89 f8                	mov    %edi,%eax$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	e8 c5 eb ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101e7f	obj/kern/kernel.asm	/^f0101e7f:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	89 d8                	mov    %ebx,%eax$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	74 19                	je     f0101eaf <mem_init+0xbde>$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	68 8c 71 10 f0       	push   $0xf010718c$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101ea0	obj/kern/kernel.asm	/^f0101ea0:	68 1c 04 00 00       	push   $0x41c$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	e8 91 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	89 f8                	mov    %edi,%eax$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	e8 89 eb ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	74 19                	je     f0101ed9 <mem_init+0xc08>$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	68 b8 71 10 f0       	push   $0xf01071b8$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	68 1d 04 00 00       	push   $0x41d$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101ed4	obj/kern/kernel.asm	/^f0101ed4:	e8 67 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	74 19                	je     f0101ef9 <mem_init+0xc28>$/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	68 05 6c 10 f0       	push   $0xf0106c05$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101eea	obj/kern/kernel.asm	/^f0101eea:	68 1f 04 00 00       	push   $0x41f$/;"	l
f0101eef	obj/kern/kernel.asm	/^f0101eef:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	e8 47 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	74 19                	je     f0101f19 <mem_init+0xc48>$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	68 16 6c 10 f0       	push   $0xf0106c16$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	68 20 04 00 00       	push   $0x420$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	e8 27 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	6a 00                	push   $0x0$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	e8 9b ef ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	85 c0                	test   %eax,%eax$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	74 04                	je     f0101f2e <mem_init+0xc5d>$/;"	l
f0101f2a	obj/kern/kernel.asm	/^f0101f2a:	39 c6                	cmp    %eax,%esi$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	74 19                	je     f0101f47 <mem_init+0xc76>$/;"	l
f0101f2e	obj/kern/kernel.asm	/^f0101f2e:	68 e8 71 10 f0       	push   $0xf01071e8$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	68 23 04 00 00       	push   $0x423$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	e8 f9 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	6a 00                	push   $0x0$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	e8 30 f2 ff ff       	call   f0101187 <page_remove>$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	8b 3d 8c de 22 f0    	mov    0xf022de8c,%edi$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	89 f8                	mov    %edi,%eax$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	e8 db ea ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	74 19                	je     f0101f8a <mem_init+0xcb9>$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	68 0c 72 10 f0       	push   $0xf010720c$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	68 27 04 00 00       	push   $0x427$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	e8 b6 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	89 f8                	mov    %edi,%eax$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	e8 ae ea ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	89 da                	mov    %ebx,%edx$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	2b 15 90 de 22 f0    	sub    0xf022de90,%edx$/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	39 d0                	cmp    %edx,%eax$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	74 19                	je     f0101fc1 <mem_init+0xcf0>$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	68 b8 71 10 f0       	push   $0xf01071b8$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	68 28 04 00 00       	push   $0x428$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	e8 7f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	74 19                	je     f0101fe1 <mem_init+0xd10>$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	68 bc 6b 10 f0       	push   $0xf0106bbc$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	68 29 04 00 00       	push   $0x429$/;"	l
f0101fd7	obj/kern/kernel.asm	/^f0101fd7:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	e8 5f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	74 19                	je     f0102001 <mem_init+0xd30>$/;"	l
f0101fe8	obj/kern/kernel.asm	/^f0101fe8:	68 16 6c 10 f0       	push   $0xf0106c16$/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	68 2a 04 00 00       	push   $0x42a$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	e8 3f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	6a 00                	push   $0x0$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102008	obj/kern/kernel.asm	/^f0102008:	53                   	push   %ebx$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	57                   	push   %edi$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	e8 be f1 ff ff       	call   f01011cd <page_insert>$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	85 c0                	test   %eax,%eax$/;"	l
f0102014	obj/kern/kernel.asm	/^f0102014:	74 19                	je     f010202f <mem_init+0xd5e>$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	68 30 72 10 f0       	push   $0xf0107230$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	68 2d 04 00 00       	push   $0x42d$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	e8 11 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	75 19                	jne    f010204f <mem_init+0xd7e>$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	68 27 6c 10 f0       	push   $0xf0106c27$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	68 2e 04 00 00       	push   $0x42e$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	e8 f1 df ff ff       	call   f0100040 <_panic>$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	74 19                	je     f010206d <mem_init+0xd9c>$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	68 33 6c 10 f0       	push   $0xf0106c33$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010205e	obj/kern/kernel.asm	/^f010205e:	68 2f 04 00 00       	push   $0x42f$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	e8 d3 df ff ff       	call   f0100040 <_panic>$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	e8 07 f1 ff ff       	call   f0101187 <page_remove>$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	8b 3d 8c de 22 f0    	mov    0xf022de8c,%edi$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	89 f8                	mov    %edi,%eax$/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	e8 b2 e9 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	74 19                	je     f01020b3 <mem_init+0xde2>$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	68 0c 72 10 f0       	push   $0xf010720c$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	68 33 04 00 00       	push   $0x433$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	e8 8d df ff ff       	call   f0100040 <_panic>$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	89 f8                	mov    %edi,%eax$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	e8 85 e9 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	74 19                	je     f01020dd <mem_init+0xe0c>$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	68 68 72 10 f0       	push   $0xf0107268$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	68 34 04 00 00       	push   $0x434$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	e8 63 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	74 19                	je     f01020fd <mem_init+0xe2c>$/;"	l
f01020e4	obj/kern/kernel.asm	/^f01020e4:	68 48 6c 10 f0       	push   $0xf0106c48$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	68 35 04 00 00       	push   $0x435$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	e8 43 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	74 19                	je     f010211d <mem_init+0xe4c>$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	68 16 6c 10 f0       	push   $0xf0106c16$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	68 36 04 00 00       	push   $0x436$/;"	l
f0102113	obj/kern/kernel.asm	/^f0102113:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	e8 23 df ff ff       	call   f0100040 <_panic>$/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	6a 00                	push   $0x0$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	e8 97 ed ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	83 c4 10             	add    $0x10,%esp$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	39 c3                	cmp    %eax,%ebx$/;"	l
f010212c	obj/kern/kernel.asm	/^f010212c:	75 04                	jne    f0102132 <mem_init+0xe61>$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	85 c0                	test   %eax,%eax$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	75 19                	jne    f010214b <mem_init+0xe7a>$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	68 90 72 10 f0       	push   $0xf0107290$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	68 39 04 00 00       	push   $0x439$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	e8 f5 de ff ff       	call   f0100040 <_panic>$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	6a 00                	push   $0x0$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	e8 69 ed ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0102155	obj/kern/kernel.asm	/^f0102155:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	85 c0                	test   %eax,%eax$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	74 19                	je     f0102175 <mem_init+0xea4>$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	68 6a 6b 10 f0       	push   $0xf0106b6a$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	68 3c 04 00 00       	push   $0x43c$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	e8 cb de ff ff       	call   f0100040 <_panic>$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	8b 0d 8c de 22 f0    	mov    0xf022de8c,%ecx$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	8b 11                	mov    (%ecx),%edx$/;"	l
f010217d	obj/kern/kernel.asm	/^f010217d:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	39 c2                	cmp    %eax,%edx$/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	74 19                	je     f01021af <mem_init+0xede>$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	68 34 6f 10 f0       	push   $0xf0106f34$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	68 3f 04 00 00       	push   $0x43f$/;"	l
f01021a5	obj/kern/kernel.asm	/^f01021a5:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	e8 91 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	74 19                	je     f01021d8 <mem_init+0xf07>$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	68 cd 6b 10 f0       	push   $0xf0106bcd$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	68 41 04 00 00       	push   $0x441$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	e8 68 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021d8	obj/kern/kernel.asm	/^f01021d8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	50                   	push   %eax$/;"	l
f01021e5	obj/kern/kernel.asm	/^f01021e5:	e8 4e ed ff ff       	call   f0100f38 <page_free>$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01021ed	obj/kern/kernel.asm	/^f01021ed:	6a 01                	push   $0x1$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	68 00 10 40 00       	push   $0x401000$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	e8 b6 ed ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	89 c7                	mov    %eax,%edi$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	8b 0d 88 de 22 f0    	mov    0xf022de88,%ecx$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	89 c2                	mov    %eax,%edx$/;"	l
f010221c	obj/kern/kernel.asm	/^f010221c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	39 ca                	cmp    %ecx,%edx$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	72 15                	jb     f010223b <mem_init+0xf6a>$/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	50                   	push   %eax$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	68 48 04 00 00       	push   $0x448$/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102236	obj/kern/kernel.asm	/^f0102236:	e8 05 de ff ff       	call   f0100040 <_panic>$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	39 c7                	cmp    %eax,%edi$/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	74 19                	je     f010225d <mem_init+0xf8c>$/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	68 59 6c 10 f0       	push   $0xf0106c59$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	68 49 04 00 00       	push   $0x449$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	e8 e3 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010226a	obj/kern/kernel.asm	/^f010226a:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	89 c2                	mov    %eax,%edx$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	77 12                	ja     f0102297 <mem_init+0xfc6>$/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	50                   	push   %eax$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	6a 58                	push   $0x58$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	e8 a9 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	68 ff 00 00 00       	push   $0xff$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	50                   	push   %eax$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	e8 1b 35 00 00       	call   f01057ca <memset>$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	e8 7e ec ff ff       	call   f0100f38 <page_free>$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	6a 01                	push   $0x1$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	6a 00                	push   $0x0$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f01022c7	obj/kern/kernel.asm	/^f01022c7:	e8 e9 ec ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	89 fa                	mov    %edi,%edx$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	2b 15 90 de 22 f0    	sub    0xf022de90,%edx$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022da	obj/kern/kernel.asm	/^f01022da:	89 d0                	mov    %edx,%eax$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	3b 05 88 de 22 f0    	cmp    0xf022de88,%eax$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	72 12                	jb     f01022fc <mem_init+0x102b>$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	52                   	push   %edx$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	6a 58                	push   $0x58$/;"	l
f01022f2	obj/kern/kernel.asm	/^f01022f2:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	e8 44 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	74 19                	je     f0102329 <mem_init+0x1058>$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	68 71 6c 10 f0       	push   $0xf0106c71$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	68 53 04 00 00       	push   $0x453$/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	e8 17 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	83 c0 04             	add    $0x4,%eax$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	39 d0                	cmp    %edx,%eax$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	75 db                	jne    f010230b <mem_init+0x103a>$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010233e	obj/kern/kernel.asm	/^f010233e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	89 0d 3c d2 22 f0    	mov    %ecx,0xf022d23c$/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	50                   	push   %eax$/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	e8 e2 eb ff ff       	call   f0100f38 <page_free>$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	e8 da eb ff ff       	call   f0100f38 <page_free>$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	e8 d2 eb ff ff       	call   f0100f38 <page_free>$/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	68 01 10 00 00       	push   $0x1001$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	6a 00                	push   $0x0$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	e8 f5 ee ff ff       	call   f010126a <mmio_map_region>$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	89 c3                	mov    %eax,%ebx$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	83 c4 08             	add    $0x8,%esp$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	6a 00                	push   $0x0$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	e8 e4 ee ff ff       	call   f010126a <mmio_map_region>$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	89 c6                	mov    %eax,%esi$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102391	obj/kern/kernel.asm	/^f0102391:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	76 07                	jbe    f01023a0 <mem_init+0x10cf>$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	76 19                	jbe    f01023b9 <mem_init+0x10e8>$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	68 b4 72 10 f0       	push   $0xf01072b4$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	68 63 04 00 00       	push   $0x463$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	e8 87 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	77 08                	ja     f01023cf <mem_init+0x10fe>$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	77 19                	ja     f01023e8 <mem_init+0x1117>$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	68 dc 72 10 f0       	push   $0xf01072dc$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	68 64 04 00 00       	push   $0x464$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	e8 58 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	89 da                	mov    %ebx,%edx$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	09 f2                	or     %esi,%edx$/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	74 19                	je     f010240d <mem_init+0x113c>$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	68 04 73 10 f0       	push   $0xf0107304$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	68 66 04 00 00       	push   $0x466$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	e8 33 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	39 c6                	cmp    %eax,%esi$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	73 19                	jae    f010242a <mem_init+0x1159>$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	68 88 6c 10 f0       	push   $0xf0106c88$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	68 68 04 00 00       	push   $0x468$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	e8 16 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	8b 3d 8c de 22 f0    	mov    0xf022de8c,%edi$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	89 da                	mov    %ebx,%edx$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	89 f8                	mov    %edi,%eax$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	e8 0b e6 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	85 c0                	test   %eax,%eax$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	74 19                	je     f0102456 <mem_init+0x1185>$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	68 2c 73 10 f0       	push   $0xf010732c$/;"	l
f0102442	obj/kern/kernel.asm	/^f0102442:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	68 6a 04 00 00       	push   $0x46a$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102451	obj/kern/kernel.asm	/^f0102451:	e8 ea db ff ff       	call   f0100040 <_panic>$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	89 c2                	mov    %eax,%edx$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	89 f8                	mov    %edi,%eax$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	e8 dc e5 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	74 19                	je     f0102488 <mem_init+0x11b7>$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	68 50 73 10 f0       	push   $0xf0107350$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	68 6b 04 00 00       	push   $0x46b$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	e8 b8 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	89 f2                	mov    %esi,%edx$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	89 f8                	mov    %edi,%eax$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	e8 b3 e5 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	85 c0                	test   %eax,%eax$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	74 19                	je     f01024ae <mem_init+0x11dd>$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	68 80 73 10 f0       	push   $0xf0107380$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	68 6c 04 00 00       	push   $0x46c$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	e8 92 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	89 f8                	mov    %edi,%eax$/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	e8 89 e5 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01024be	obj/kern/kernel.asm	/^f01024be:	74 19                	je     f01024d9 <mem_init+0x1208>$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	68 a4 73 10 f0       	push   $0xf01073a4$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	68 6d 04 00 00       	push   $0x46d$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	e8 67 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	6a 00                	push   $0x0$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	53                   	push   %ebx$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	57                   	push   %edi$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	e8 d0 ea ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	75 19                	jne    f0102506 <mem_init+0x1235>$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	68 d0 73 10 f0       	push   $0xf01073d0$/;"	l
f01024f2	obj/kern/kernel.asm	/^f01024f2:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	68 6f 04 00 00       	push   $0x46f$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	e8 3a db ff ff       	call   f0100040 <_panic>$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102509	obj/kern/kernel.asm	/^f0102509:	6a 00                	push   $0x0$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	53                   	push   %ebx$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	e8 9e ea ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0102517	obj/kern/kernel.asm	/^f0102517:	8b 00                	mov    (%eax),%eax$/;"	l
f0102519	obj/kern/kernel.asm	/^f0102519:	83 c4 10             	add    $0x10,%esp$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	83 e0 04             	and    $0x4,%eax$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	74 19                	je     f010253d <mem_init+0x126c>$/;"	l
f0102524	obj/kern/kernel.asm	/^f0102524:	68 14 74 10 f0       	push   $0xf0107414$/;"	l
f0102529	obj/kern/kernel.asm	/^f0102529:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	68 70 04 00 00       	push   $0x470$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	e8 03 db ff ff       	call   f0100040 <_panic>$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	6a 00                	push   $0x0$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	53                   	push   %ebx$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	e8 67 ea ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102554	obj/kern/kernel.asm	/^f0102554:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	6a 00                	push   $0x0$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	e8 4e ea ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	6a 00                	push   $0x0$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	56                   	push   %esi$/;"	l
f0102573	obj/kern/kernel.asm	/^f0102573:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	e8 37 ea ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	c7 04 24 9a 6c 10 f0 	movl   $0xf0106c9a,(%esp)$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	e8 36 11 00 00       	call   f01036c6 <cprintf>$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	a1 90 de 22 f0       	mov    0xf022de90,%eax$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	77 15                	ja     f01025b4 <mem_init+0x12e3>$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	50                   	push   %eax$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	68 be 00 00 00       	push   $0xbe$/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	e8 8c da ff ff       	call   f0100040 <_panic>$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	8b 15 88 de 22 f0    	mov    0xf022de88,%edx$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	6a 04                	push   $0x4$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	50                   	push   %eax$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	e8 99 ea ff ff       	call   f010107a <boot_map_region>$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	a1 48 d2 22 f0       	mov    0xf022d248,%eax$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	77 15                	ja     f0102605 <mem_init+0x1334>$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	50                   	push   %eax$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	68 ca 00 00 00       	push   $0xca$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	e8 3b da ff ff       	call   f0100040 <_panic>$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	6a 05                	push   $0x5$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	50                   	push   %eax$/;"	l
f0102610	obj/kern/kernel.asm	/^f0102610:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102615	obj/kern/kernel.asm	/^f0102615:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	e8 56 ea ff ff       	call   f010107a <boot_map_region>$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	b8 00 80 11 f0       	mov    $0xf0118000,%eax$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	77 15                	ja     f0102648 <mem_init+0x1377>$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	50                   	push   %eax$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	68 d9 00 00 00       	push   $0xd9$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	e8 f8 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	6a 02                	push   $0x2$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	68 00 80 11 00       	push   $0x118000$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	e8 14 ea ff ff       	call   f010107a <boot_map_region>$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	c7 45 c4 00 f0 23 f0 	movl   $0xf023f000,-0x3c(%ebp)$/;"	l
f010266d	obj/kern/kernel.asm	/^f010266d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	bb 00 f0 23 f0       	mov    $0xf023f000,%ebx$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	77 15                	ja     f0102697 <mem_init+0x13c6>$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	53                   	push   %ebx$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	68 1a 01 00 00       	push   $0x11a$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	e8 a9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	6a 02                	push   $0x2$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	50                   	push   %eax$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	89 f2                	mov    %esi,%edx$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	e8 c6 e9 ff ff       	call   f010107a <boot_map_region>$/;"	l
f01026b4	obj/kern/kernel.asm	/^f01026b4:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	b8 00 f0 27 f0       	mov    $0xf027f000,%eax$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	39 d8                	cmp    %ebx,%eax$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	75 ae                	jne    f010267a <mem_init+0x13a9>$/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	6a 02                	push   $0x2$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	6a 00                	push   $0x0$/;"	l
f01026d3	obj/kern/kernel.asm	/^f01026d3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01026e2	obj/kern/kernel.asm	/^f01026e2:	e8 93 e9 ff ff       	call   f010107a <boot_map_region>$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	8b 3d 8c de 22 f0    	mov    0xf022de8c,%edi$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	a1 88 de 22 f0       	mov    0xf022de88,%eax$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	8b 35 90 de 22 f0    	mov    0xf022de90,%esi$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	eb 55                	jmp    f010276c <mem_init+0x149b>$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f010271d	obj/kern/kernel.asm	/^f010271d:	89 f8                	mov    %edi,%eax$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	e8 20 e3 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	77 15                	ja     f0102742 <mem_init+0x1471>$/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	56                   	push   %esi$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	68 86 03 00 00       	push   $0x386$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	e8 fe d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	39 c2                	cmp    %eax,%edx$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	74 19                	je     f0102766 <mem_init+0x1495>$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	68 48 74 10 f0       	push   $0xf0107448$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	68 86 03 00 00       	push   $0x386$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	e8 da d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	77 a6                	ja     f0102717 <mem_init+0x1446>$/;"	l
f0102771	obj/kern/kernel.asm	/^f0102771:	8b 35 48 d2 22 f0    	mov    0xf022d248,%esi$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010277a	obj/kern/kernel.asm	/^f010277a:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	89 da                	mov    %ebx,%edx$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	89 f8                	mov    %edi,%eax$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	e8 bc e2 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	77 15                	ja     f01027a6 <mem_init+0x14d5>$/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	56                   	push   %esi$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	68 8b 03 00 00       	push   $0x38b$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	e8 9a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	39 d0                	cmp    %edx,%eax$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	74 19                	je     f01027ca <mem_init+0x14f9>$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	68 7c 74 10 f0       	push   $0xf010747c$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	68 8b 03 00 00       	push   $0x38b$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	e8 76 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	75 a7                	jne    f010277f <mem_init+0x14ae>$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	eb 30                	jmp    f0102815 <mem_init+0x1544>$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	89 f8                	mov    %edi,%eax$/;"	l
f01027ed	obj/kern/kernel.asm	/^f01027ed:	e8 52 e2 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	39 c3                	cmp    %eax,%ebx$/;"	l
f01027f4	obj/kern/kernel.asm	/^f01027f4:	74 19                	je     f010280f <mem_init+0x153e>$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	68 b0 74 10 f0       	push   $0xf01074b0$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	68 8f 03 00 00       	push   $0x38f$/;"	l
f0102805	obj/kern/kernel.asm	/^f0102805:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	e8 31 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	72 cc                	jb     f01027e5 <mem_init+0x1514>$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0102821	obj/kern/kernel.asm	/^f0102821:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	89 c3                	mov    %eax,%ebx$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	89 da                	mov    %ebx,%edx$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	89 f8                	mov    %edi,%eax$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	e8 fe e1 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	77 15                	ja     f0102863 <mem_init+0x1592>$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	56                   	push   %esi$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0102854	obj/kern/kernel.asm	/^f0102854:	68 97 03 00 00       	push   $0x397$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	e8 dd d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	8d 94 0b 00 f0 23 f0 	lea    -0xfdc1000(%ebx,%ecx,1),%edx$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	39 d0                	cmp    %edx,%eax$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	74 19                	je     f010288a <mem_init+0x15b9>$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	68 d8 74 10 f0       	push   $0xf01074d8$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	68 97 03 00 00       	push   $0x397$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	e8 b6 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	75 a8                	jne    f010283d <mem_init+0x156c>$/;"	l
f0102895	obj/kern/kernel.asm	/^f0102895:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	89 c6                	mov    %eax,%esi$/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	89 da                	mov    %ebx,%edx$/;"	l
f01028a5	obj/kern/kernel.asm	/^f01028a5:	89 f8                	mov    %edi,%eax$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	e8 98 e1 ff ff       	call   f0100a44 <check_va2pa>$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	74 19                	je     f01028ca <mem_init+0x15f9>$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	68 20 75 10 f0       	push   $0xf0107520$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	68 99 03 00 00       	push   $0x399$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	e8 76 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	39 de                	cmp    %ebx,%esi$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	75 cf                	jne    f01028a3 <mem_init+0x15d2>$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	81 fe 00 f0 27 f0    	cmp    $0xf027f000,%esi$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	0f 85 2d ff ff ff    	jne    f0102824 <mem_init+0x1553>$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	eb 2a                	jmp    f0102928 <mem_init+0x1657>$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	77 1f                	ja     f0102928 <mem_init+0x1657>$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	75 7e                	jne    f010298d <mem_init+0x16bc>$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	68 b3 6c 10 f0       	push   $0xf0106cb3$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	68 a4 03 00 00       	push   $0x3a4$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102923	obj/kern/kernel.asm	/^f0102923:	e8 18 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	76 3f                	jbe    f010296e <mem_init+0x169d>$/;"	l
f010292f	obj/kern/kernel.asm	/^f010292f:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	75 19                	jne    f0102950 <mem_init+0x167f>$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	68 b3 6c 10 f0       	push   $0xf0106cb3$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	68 a8 03 00 00       	push   $0x3a8$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	e8 f0 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	75 38                	jne    f010298d <mem_init+0x16bc>$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	68 c4 6c 10 f0       	push   $0xf0106cc4$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	68 a9 03 00 00       	push   $0x3a9$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	e8 d2 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	74 19                	je     f010298d <mem_init+0x16bc>$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	68 d5 6c 10 f0       	push   $0xf0106cd5$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	68 ac 03 00 00       	push   $0x3ac$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	e8 b3 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	0f 86 63 ff ff ff    	jbe    f01028fe <mem_init+0x162d>$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	68 44 75 10 f0       	push   $0xf0107544$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	e8 1e 0d 00 00       	call   f01036c6 <cprintf>$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	77 15                	ja     f01029cc <mem_init+0x16fb>$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	50                   	push   %eax$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f01029bd	obj/kern/kernel.asm	/^f01029bd:	68 f1 00 00 00       	push   $0xf1$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	e8 74 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	e8 ca e0 ff ff       	call   f0100aa8 <check_page_free_list>$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	6a 00                	push   $0x0$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	e8 c8 e4 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	89 c3                	mov    %eax,%ebx$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	85 c0                	test   %eax,%eax$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	75 19                	jne    f0102a18 <mem_init+0x1747>$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	68 bf 6a 10 f0       	push   $0xf0106abf$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	68 85 04 00 00       	push   $0x485$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	e8 28 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	6a 00                	push   $0x0$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	e8 9c e4 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	89 c7                	mov    %eax,%edi$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	85 c0                	test   %eax,%eax$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	75 19                	jne    f0102a44 <mem_init+0x1773>$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	68 d5 6a 10 f0       	push   $0xf0106ad5$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	68 86 04 00 00       	push   $0x486$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	e8 fc d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a47	obj/kern/kernel.asm	/^f0102a47:	6a 00                	push   $0x0$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	e8 70 e4 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	89 c6                	mov    %eax,%esi$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	85 c0                	test   %eax,%eax$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	75 19                	jne    f0102a70 <mem_init+0x179f>$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	68 eb 6a 10 f0       	push   $0xf0106aeb$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	68 87 04 00 00       	push   $0x487$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	e8 d0 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	53                   	push   %ebx$/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	e8 bf e4 ff ff       	call   f0100f38 <page_free>$/;"	l
f0102a79	obj/kern/kernel.asm	/^f0102a79:	89 f8                	mov    %edi,%eax$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0102a81	obj/kern/kernel.asm	/^f0102a81:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a84	obj/kern/kernel.asm	/^f0102a84:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	89 c2                	mov    %eax,%edx$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	72 12                	jb     f0102aa9 <mem_init+0x17d8>$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	50                   	push   %eax$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	6a 58                	push   $0x58$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0102aa4	obj/kern/kernel.asm	/^f0102aa4:	e8 97 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	6a 01                	push   $0x1$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102ab8	obj/kern/kernel.asm	/^f0102ab8:	50                   	push   %eax$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	e8 0c 2d 00 00       	call   f01057ca <memset>$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	89 f0                	mov    %esi,%eax$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	89 c2                	mov    %eax,%edx$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	72 12                	jb     f0102aee <mem_init+0x181d>$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	50                   	push   %eax$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	6a 58                	push   $0x58$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	e8 52 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102af6	obj/kern/kernel.asm	/^f0102af6:	6a 02                	push   $0x2$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	50                   	push   %eax$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	e8 c7 2c 00 00       	call   f01057ca <memset>$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	6a 02                	push   $0x2$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	57                   	push   %edi$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	e8 b7 e6 ff ff       	call   f01011cd <page_insert>$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102b19	obj/kern/kernel.asm	/^f0102b19:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	74 19                	je     f0102b39 <mem_init+0x1868>$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	68 bc 6b 10 f0       	push   $0xf0106bbc$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	68 8c 04 00 00       	push   $0x48c$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	e8 07 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102b40	obj/kern/kernel.asm	/^f0102b40:	01 01 01 $/;"	l
f0102b43	obj/kern/kernel.asm	/^f0102b43:	74 19                	je     f0102b5e <mem_init+0x188d>$/;"	l
f0102b45	obj/kern/kernel.asm	/^f0102b45:	68 64 75 10 f0       	push   $0xf0107564$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	68 8d 04 00 00       	push   $0x48d$/;"	l
f0102b54	obj/kern/kernel.asm	/^f0102b54:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102b59	obj/kern/kernel.asm	/^f0102b59:	e8 e2 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	6a 02                	push   $0x2$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b65	obj/kern/kernel.asm	/^f0102b65:	56                   	push   %esi$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	e8 5c e6 ff ff       	call   f01011cd <page_insert>$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	02 02 02 $/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	74 19                	je     f0102b99 <mem_init+0x18c8>$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	68 88 75 10 f0       	push   $0xf0107588$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	68 8f 04 00 00       	push   $0x48f$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	e8 a7 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	74 19                	je     f0102bb9 <mem_init+0x18e8>$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	68 de 6b 10 f0       	push   $0xf0106bde$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	68 90 04 00 00       	push   $0x490$/;"	l
f0102baf	obj/kern/kernel.asm	/^f0102baf:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	e8 87 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102bbe	obj/kern/kernel.asm	/^f0102bbe:	74 19                	je     f0102bd9 <mem_init+0x1908>$/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	68 48 6c 10 f0       	push   $0xf0106c48$/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102bca	obj/kern/kernel.asm	/^f0102bca:	68 91 04 00 00       	push   $0x491$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	e8 67 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	03 03 03 $/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	89 f0                	mov    %esi,%eax$/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	89 c2                	mov    %eax,%edx$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102bf6	obj/kern/kernel.asm	/^f0102bf6:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	72 12                	jb     f0102c10 <mem_init+0x193f>$/;"	l
f0102bfe	obj/kern/kernel.asm	/^f0102bfe:	50                   	push   %eax$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	6a 58                	push   $0x58$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	e8 30 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	03 03 03 $/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	74 19                	je     f0102c35 <mem_init+0x1964>$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	68 ac 75 10 f0       	push   $0xf01075ac$/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	68 93 04 00 00       	push   $0x493$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102c30	obj/kern/kernel.asm	/^f0102c30:	e8 0b d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	e8 3f e5 ff ff       	call   f0101187 <page_remove>$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	74 19                	je     f0102c6b <mem_init+0x199a>$/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	68 16 6c 10 f0       	push   $0xf0106c16$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	68 95 04 00 00       	push   $0x495$/;"	l
f0102c61	obj/kern/kernel.asm	/^f0102c61:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	e8 d5 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	8b 0d 8c de 22 f0    	mov    0xf022de8c,%ecx$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	89 d8                	mov    %ebx,%eax$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0102c81	obj/kern/kernel.asm	/^f0102c81:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c84	obj/kern/kernel.asm	/^f0102c84:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	39 c2                	cmp    %eax,%edx$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	74 19                	je     f0102ca4 <mem_init+0x19d3>$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	68 34 6f 10 f0       	push   $0xf0106f34$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102c95	obj/kern/kernel.asm	/^f0102c95:	68 98 04 00 00       	push   $0x498$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	e8 9c d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	74 19                	je     f0102cca <mem_init+0x19f9>$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	68 cd 6b 10 f0       	push   $0xf0106bcd$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	68 9a 04 00 00       	push   $0x49a$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	68 9c 69 10 f0       	push   $0xf010699c$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	e8 76 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	53                   	push   %ebx$/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	e8 5f e2 ff ff       	call   f0100f38 <page_free>$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	c7 04 24 d8 75 10 f0 	movl   $0xf01075d8,(%esp)$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	e8 e1 09 00 00       	call   f01036c6 <cprintf>$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	5b                   	pop    %ebx$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	5e                   	pop    %esi$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	5f                   	pop    %edi$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	5d                   	pop    %ebp$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	c3                   	ret    $/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0 <user_mem_check>:$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	55                   	push   %ebp$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	89 e5                	mov    %esp,%ebp$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	57                   	push   %edi$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	56                   	push   %esi$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	53                   	push   %ebx$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102cfc	obj/kern/kernel.asm	/^f0102cfc:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	8d 84 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%eax$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	83 ce 01             	or     $0x1,%esi$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	eb 4c                	jmp    f0102d6e <user_mem_check+0x7e>$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	6a 00                	push   $0x0$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	53                   	push   %ebx$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102d2b	obj/kern/kernel.asm	/^f0102d2b:	e8 85 e2 ff ff       	call   f0100fb5 <pgdir_walk>$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	77 0c                	ja     f0102d47 <user_mem_check+0x57>$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	85 c0                	test   %eax,%eax$/;"	l
f0102d3d	obj/kern/kernel.asm	/^f0102d3d:	74 08                	je     f0102d47 <user_mem_check+0x57>$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	89 f2                	mov    %esi,%edx$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	23 10                	and    (%eax),%edx$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	39 d6                	cmp    %edx,%esi$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	74 21                	je     f0102d68 <user_mem_check+0x78>$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	3b 5d 0c             	cmp    0xc(%ebp),%ebx$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	73 0f                	jae    f0102d5b <user_mem_check+0x6b>$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	a3 38 d2 22 f0       	mov    %eax,0xf022d238$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	eb 1d                	jmp    f0102d78 <user_mem_check+0x88>$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	89 1d 38 d2 22 f0    	mov    %ebx,0xf022d238$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	eb 10                	jmp    f0102d78 <user_mem_check+0x88>$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	72 af                	jb     f0102d22 <user_mem_check+0x32>$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	5b                   	pop    %ebx$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	5e                   	pop    %esi$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	5f                   	pop    %edi$/;"	l
f0102d7e	obj/kern/kernel.asm	/^f0102d7e:	5d                   	pop    %ebp$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	c3                   	ret    $/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80 <user_mem_assert>:$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	55                   	push   %ebp$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	53                   	push   %ebx$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	50                   	push   %eax$/;"	l
f0102d91	obj/kern/kernel.asm	/^f0102d91:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	53                   	push   %ebx$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	e8 53 ff ff ff       	call   f0102cf0 <user_mem_check>$/;"	l
f0102d9d	obj/kern/kernel.asm	/^f0102d9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	85 c0                	test   %eax,%eax$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	79 21                	jns    f0102dc5 <user_mem_assert+0x45>$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	ff 35 38 d2 22 f0    	pushl  0xf022d238$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	68 04 76 10 f0       	push   $0xf0107604$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	e8 0c 09 00 00       	call   f01036c6 <cprintf>$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	e8 14 06 00 00       	call   f01033d6 <env_destroy>$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	c9                   	leave  $/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	c3                   	ret    $/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca <region_alloc>:$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	55                   	push   %ebp$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	89 e5                	mov    %esp,%ebp$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	57                   	push   %edi$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	56                   	push   %esi$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	53                   	push   %ebx$/;"	l
f0102dd0	obj/kern/kernel.asm	/^f0102dd0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	89 c7                	mov    %eax,%edi$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	89 d3                	mov    %edx,%ebx$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	8d 34 0a             	lea    (%edx,%ecx,1),%esi$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	eb 58                	jmp    f0102e40 <region_alloc+0x76>$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	6a 00                	push   $0x0$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	e8 cc e0 ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	85 c0                	test   %eax,%eax$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	75 17                	jne    f0102e10 <region_alloc+0x46>$/;"	l
f0102df9	obj/kern/kernel.asm	/^f0102df9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	68 5f 76 10 f0       	push   $0xf010765f$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	68 2d 01 00 00       	push   $0x12d$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	e8 30 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	6a 06                	push   $0x6$/;"	l
f0102e12	obj/kern/kernel.asm	/^f0102e12:	53                   	push   %ebx$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	50                   	push   %eax$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	e8 b1 e3 ff ff       	call   f01011cd <page_insert>$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	85 c0                	test   %eax,%eax$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	74 17                	je     f0102e3a <region_alloc+0x70>$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	68 d4 76 10 f0       	push   $0xf01076d4$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	68 30 01 00 00       	push   $0x130$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	e8 06 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	76 a4                	jbe    f0102de8 <region_alloc+0x1e>$/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	5b                   	pop    %ebx$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	5e                   	pop    %esi$/;"	l
f0102e49	obj/kern/kernel.asm	/^f0102e49:	5f                   	pop    %edi$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	5d                   	pop    %ebp$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	c3                   	ret    $/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c <envid2env>:$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	55                   	push   %ebp$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	56                   	push   %esi$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	53                   	push   %ebx$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	85 c0                	test   %eax,%eax$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	75 1a                	jne    f0102e75 <envid2env+0x29>$/;"	l
f0102e5b	obj/kern/kernel.asm	/^f0102e5b:	e8 8a 2f 00 00       	call   f0105dea <cpunum>$/;"	l
f0102e60	obj/kern/kernel.asm	/^f0102e60:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	eb 70                	jmp    f0102ee5 <envid2env+0x99>$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	89 c3                	mov    %eax,%ebx$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	03 1d 48 d2 22 f0    	add    0xf022d248,%ebx$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	74 05                	je     f0102e91 <envid2env+0x45>$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	74 10                	je     f0102ea1 <envid2env+0x55>$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	eb 44                	jmp    f0102ee5 <envid2env+0x99>$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	84 d2                	test   %dl,%dl$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	74 36                	je     f0102edb <envid2env+0x8f>$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	e8 40 2f 00 00       	call   f0105dea <cpunum>$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	3b 98 28 e0 23 f0    	cmp    -0xfdc1fd8(%eax),%ebx$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	74 26                	je     f0102edb <envid2env+0x8f>$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	e8 2d 2f 00 00       	call   f0105dea <cpunum>$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	74 10                	je     f0102edb <envid2env+0x8f>$/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	eb 0a                	jmp    f0102ee5 <envid2env+0x99>$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	5b                   	pop    %ebx$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	5e                   	pop    %esi$/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	5d                   	pop    %ebp$/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	c3                   	ret    $/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9 <env_init_percpu>:$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	55                   	push   %ebp$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	89 e5                	mov    %esp,%ebp$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	b8 20 23 12 f0       	mov    $0xf0122320,%eax$/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102ef4	obj/kern/kernel.asm	/^f0102ef4:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	8e e8                	mov    %eax,%gs$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	8e e0                	mov    %eax,%fs$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	8e c0                	mov    %eax,%es$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	8e d8                	mov    %eax,%ds$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	8e d0                	mov    %eax,%ss$/;"	l
f0102f08	obj/kern/kernel.asm	/^f0102f08:	ea 0f 2f 10 f0 08 00 	ljmp   $0x8,$0xf0102f0f$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	0f 00 d0             	lldt   %ax$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	5d                   	pop    %ebp$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	c3                   	ret    $/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19 <env_init>:$/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	55                   	push   %ebp$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f0102f24	obj/kern/kernel.asm	/^f0102f24:	6a 00                	push   $0x0$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	ff 35 48 d2 22 f0    	pushl  0xf022d248$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	e8 99 28 00 00       	call   f01057ca <memset>$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	8b 0d 48 d2 22 f0    	mov    0xf022d248,%ecx$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	89 0d 4c d2 22 f0    	mov    %ecx,0xf022d24c$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	8d 41 7c             	lea    0x7c(%ecx),%eax$/;"	l
f0102f40	obj/kern/kernel.asm	/^f0102f40:	8d 91 7c f0 01 00    	lea    0x1f07c(%ecx),%edx$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	89 40 c8             	mov    %eax,-0x38(%eax)$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	75 f6                	jne    f0102f49 <env_init+0x30>$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	c7 81 c8 ef 01 00 00 	movl   $0x0,0x1efc8(%ecx)$/;"	l
f0102f5a	obj/kern/kernel.asm	/^f0102f5a:	00 00 00 $/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	e8 87 ff ff ff       	call   f0102ee9 <env_init_percpu>$/;"	l
f0102f62	obj/kern/kernel.asm	/^f0102f62:	c9                   	leave  $/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	c3                   	ret    $/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64 <env_alloc>:$/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	55                   	push   %ebp$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	56                   	push   %esi$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	53                   	push   %ebx$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	8b 1d 4c d2 22 f0    	mov    0xf022d24c,%ebx$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	85 db                	test   %ebx,%ebx$/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	0f 84 64 01 00 00    	je     f01030db <env_alloc+0x177>$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	6a 01                	push   $0x1$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	e8 3d df ff ff       	call   f0100ebe <page_alloc>$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	89 c6                	mov    %eax,%esi$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	85 c0                	test   %eax,%eax$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	0f 84 54 01 00 00    	je     f01030e2 <env_alloc+0x17e>$/;"	l
f0102f8e	obj/kern/kernel.asm	/^f0102f8e:	2b 05 90 de 22 f0    	sub    0xf022de90,%eax$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	89 c2                	mov    %eax,%edx$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	3b 15 88 de 22 f0    	cmp    0xf022de88,%edx$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	72 12                	jb     f0102fb9 <env_alloc+0x55>$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	50                   	push   %eax$/;"	l
f0102fa8	obj/kern/kernel.asm	/^f0102fa8:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	6a 58                	push   $0x58$/;"	l
f0102faf	obj/kern/kernel.asm	/^f0102faf:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	e8 87 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	ff 35 8c de 22 f0    	pushl  0xf022de8c$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	50                   	push   %eax$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	e8 42 28 00 00       	call   f0105817 <memmove>$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	77 15                	ja     f0102ffc <env_alloc+0x98>$/;"	l
f0102fe7	obj/kern/kernel.asm	/^f0102fe7:	50                   	push   %eax$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	68 c9 00 00 00       	push   $0xc9$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	e8 44 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	89 da                	mov    %ebx,%edx$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	2b 15 48 d2 22 f0    	sub    0xf022d248,%edx$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	09 d0                	or     %edx,%eax$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103051	obj/kern/kernel.asm	/^f0103051:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	6a 44                	push   $0x44$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	6a 00                	push   $0x0$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	53                   	push   %ebx$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	e8 6c 27 00 00       	call   f01057ca <memset>$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103084	obj/kern/kernel.asm	/^f0103084:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	a3 4c d2 22 f0       	mov    %eax,0xf022d24c$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	e8 4d 2d 00 00       	call   f0105dea <cpunum>$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	83 b8 28 e0 23 f0 00 	cmpl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	74 11                	je     f01030c2 <env_alloc+0x15e>$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	e8 34 2d 00 00       	call   f0105dea <cpunum>$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	53                   	push   %ebx$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	52                   	push   %edx$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	68 84 76 10 f0       	push   $0xf0107684$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	e8 f5 05 00 00       	call   f01036c6 <cprintf>$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	eb 0c                	jmp    f01030e7 <env_alloc+0x183>$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	eb 05                	jmp    f01030e7 <env_alloc+0x183>$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	5b                   	pop    %ebx$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	5e                   	pop    %esi$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	5d                   	pop    %ebp$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	c3                   	ret    $/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee <env_create>:$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	55                   	push   %ebp$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	57                   	push   %edi$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	56                   	push   %esi$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	53                   	push   %ebx$/;"	l
f01030f4	obj/kern/kernel.asm	/^f01030f4:	83 ec 34             	sub    $0x34,%esp$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	6a 00                	push   $0x0$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01030fc	obj/kern/kernel.asm	/^f01030fc:	50                   	push   %eax$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	e8 62 fe ff ff       	call   f0102f64 <env_alloc>$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	85 c0                	test   %eax,%eax$/;"	l
f0103107	obj/kern/kernel.asm	/^f0103107:	74 17                	je     f0103120 <env_create+0x32>$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010310c	obj/kern/kernel.asm	/^f010310c:	68 99 76 10 f0       	push   $0xf0107699$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	68 95 01 00 00       	push   $0x195$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	e8 20 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	89 47 50             	mov    %eax,0x50(%edi)$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	74 17                	je     f010314b <env_create+0x5d>$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	68 f8 76 10 f0       	push   $0xf01076f8$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	68 6e 01 00 00       	push   $0x16e$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	e8 f5 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	89 c3                	mov    %eax,%ebx$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	03 58 1c             	add    0x1c(%eax),%ebx$/;"	l
f0103153	obj/kern/kernel.asm	/^f0103153:	0f b7 70 2c          	movzwl 0x2c(%eax),%esi$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	01 de                	add    %ebx,%esi$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	eb 77                	jmp    f01031d5 <env_create+0xe7>$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	75 6f                	jne    f01031d2 <env_create+0xe4>$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	89 f8                	mov    %edi,%eax$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	e8 5a fc ff ff       	call   f0102dca <region_alloc>$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	0f 20 d8             	mov    %cr3,%eax$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	77 15                	ja     f0103195 <env_create+0xa7>$/;"	l
f0103180	obj/kern/kernel.asm	/^f0103180:	50                   	push   %eax$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	68 77 01 00 00       	push   $0x177$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	e8 ab ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103195	obj/kern/kernel.asm	/^f0103195:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010319d	obj/kern/kernel.asm	/^f010319d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	50                   	push   %eax$/;"	l
f01031aa	obj/kern/kernel.asm	/^f01031aa:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	e8 65 26 00 00       	call   f0105817 <memmove>$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	29 c2                	sub    %eax,%edx$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	52                   	push   %edx$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	6a 00                	push   $0x0$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	50                   	push   %eax$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	e8 01 26 00 00       	call   f01057ca <memset>$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	39 de                	cmp    %ebx,%esi$/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	77 85                	ja     f010315e <env_create+0x70>$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	89 f8                	mov    %edi,%eax$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	e8 d7 fb ff ff       	call   f0102dca <region_alloc>$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	5b                   	pop    %ebx$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	5e                   	pop    %esi$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	5f                   	pop    %edi$/;"	l
f01031f9	obj/kern/kernel.asm	/^f01031f9:	5d                   	pop    %ebp$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	c3                   	ret    $/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb <env_free>:$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	55                   	push   %ebp$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	57                   	push   %edi$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	56                   	push   %esi$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	53                   	push   %ebx$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	e8 de 2b 00 00       	call   f0105dea <cpunum>$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	39 b8 28 e0 23 f0    	cmp    %edi,-0xfdc1fd8(%eax)$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	75 29                	jne    f0103240 <env_free+0x45>$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	77 15                	ja     f0103238 <env_free+0x3d>$/;"	l
f0103223	obj/kern/kernel.asm	/^f0103223:	50                   	push   %eax$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	68 a9 01 00 00       	push   $0x1a9$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	e8 08 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0103243	obj/kern/kernel.asm	/^f0103243:	e8 a2 2b 00 00       	call   f0105dea <cpunum>$/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	83 b8 28 e0 23 f0 00 	cmpl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f0103257	obj/kern/kernel.asm	/^f0103257:	74 11                	je     f010326a <env_free+0x6f>$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	e8 8c 2b 00 00       	call   f0105dea <cpunum>$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	53                   	push   %ebx$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	52                   	push   %edx$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	68 af 76 10 f0       	push   $0xf01076af$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	e8 4d 04 00 00       	call   f01036c6 <cprintf>$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	83 c4 10             	add    $0x10,%esp$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103286	obj/kern/kernel.asm	/^f0103286:	89 d0                	mov    %edx,%eax$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	0f 84 a8 00 00 00    	je     f0103348 <env_free+0x14d>$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	89 f0                	mov    %esi,%eax$/;"	l
f01032a8	obj/kern/kernel.asm	/^f01032a8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	39 05 88 de 22 f0    	cmp    %eax,0xf022de88$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	77 15                	ja     f01032cb <env_free+0xd0>$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	56                   	push   %esi$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	68 b8 01 00 00       	push   $0x1b8$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	e8 75 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01032ce	obj/kern/kernel.asm	/^f01032ce:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	01 $/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	74 17                	je     f01032fa <env_free+0xff>$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	89 d8                	mov    %ebx,%eax$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	50                   	push   %eax$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	e8 90 de ff ff       	call   f0101187 <page_remove>$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	75 d4                	jne    f01032d9 <env_free+0xde>$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	3b 05 88 de 22 f0    	cmp    0xf022de88,%eax$/;"	l
f010331b	obj/kern/kernel.asm	/^f010331b:	72 14                	jb     f0103331 <env_free+0x136>$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	68 00 6e 10 f0       	push   $0xf0106e00$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	6a 51                	push   $0x51$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	e8 0f cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	a1 90 de 22 f0       	mov    0xf022de90,%eax$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	50                   	push   %eax$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	e8 49 dc ff ff       	call   f0100f8e <page_decref>$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103354	obj/kern/kernel.asm	/^f0103354:	0f 85 29 ff ff ff    	jne    f0103283 <env_free+0x88>$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	77 15                	ja     f0103379 <env_free+0x17e>$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	50                   	push   %eax$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	68 c6 01 00 00       	push   $0x1c6$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	e8 c7 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	3b 05 88 de 22 f0    	cmp    0xf022de88,%eax$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	72 14                	jb     f01033a4 <env_free+0x1a9>$/;"	l
f0103390	obj/kern/kernel.asm	/^f0103390:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	68 00 6e 10 f0       	push   $0xf0106e00$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	6a 51                	push   $0x51$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	68 a8 69 10 f0       	push   $0xf01069a8$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	e8 9c cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	8b 15 90 de 22 f0    	mov    0xf022de90,%edx$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01033b0	obj/kern/kernel.asm	/^f01033b0:	50                   	push   %eax$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	e8 d8 db ff ff       	call   f0100f8e <page_decref>$/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	a1 4c d2 22 f0       	mov    0xf022d24c,%eax$/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	89 3d 4c d2 22 f0    	mov    %edi,0xf022d24c$/;"	l
f01033cb	obj/kern/kernel.asm	/^f01033cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	5b                   	pop    %ebx$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	5e                   	pop    %esi$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	5f                   	pop    %edi$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	5d                   	pop    %ebp$/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	c3                   	ret    $/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6 <env_destroy>:$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	55                   	push   %ebp$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	53                   	push   %ebx$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	75 19                	jne    f01033ff <env_destroy+0x29>$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	e8 ff 29 00 00       	call   f0105dea <cpunum>$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	3b 98 28 e0 23 f0    	cmp    -0xfdc1fd8(%eax),%ebx$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	74 09                	je     f01033ff <env_destroy+0x29>$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	eb 33                	jmp    f0103432 <env_destroy+0x5c>$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	53                   	push   %ebx$/;"	l
f0103403	obj/kern/kernel.asm	/^f0103403:	e8 f3 fd ff ff       	call   f01031fb <env_free>$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	e8 dd 29 00 00       	call   f0105dea <cpunum>$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	3b 98 28 e0 23 f0    	cmp    -0xfdc1fd8(%eax),%ebx$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	75 17                	jne    f0103432 <env_destroy+0x5c>$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	e8 ca 29 00 00       	call   f0105dea <cpunum>$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	c7 80 28 e0 23 f0 00 	movl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f010342a	obj/kern/kernel.asm	/^f010342a:	00 00 00 $/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	e8 0a 10 00 00       	call   f010443c <sched_yield>$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	c9                   	leave  $/;"	l
f0103436	obj/kern/kernel.asm	/^f0103436:	c3                   	ret    $/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437 <env_pop_tf>:$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	55                   	push   %ebp$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	89 e5                	mov    %esp,%ebp$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	53                   	push   %ebx$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	e8 a7 29 00 00       	call   f0105dea <cpunum>$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	8b 98 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%ebx$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	e8 99 29 00 00       	call   f0105dea <cpunum>$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	61                   	popa   $/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	07                   	pop    %es$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	1f                   	pop    %ds$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	cf                   	iret   $/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	68 c5 76 10 f0       	push   $0xf01076c5$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	68 fb 01 00 00       	push   $0x1fb$/;"	l
f010346b	obj/kern/kernel.asm	/^f010346b:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	e8 cb cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475 <env_run>:$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	55                   	push   %ebp$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	89 e5                	mov    %esp,%ebp$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	e8 6a 29 00 00       	call   f0105dea <cpunum>$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	83 b8 28 e0 23 f0 00 	cmpl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	74 29                	je     f01034b5 <env_run+0x40>$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	e8 59 29 00 00       	call   f0105dea <cpunum>$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	75 15                	jne    f01034b5 <env_run+0x40>$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	e8 45 29 00 00       	call   f0105dea <cpunum>$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	e8 30 29 00 00       	call   f0105dea <cpunum>$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01034c0	obj/kern/kernel.asm	/^f01034c0:	89 90 28 e0 23 f0    	mov    %edx,-0xfdc1fd8(%eax)$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	e8 1f 29 00 00       	call   f0105dea <cpunum>$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	e8 0a 29 00 00       	call   f0105dea <cpunum>$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	e8 f8 28 00 00       	call   f0105dea <cpunum>$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	77 15                	ja     f010351a <env_run+0xa5>$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	50                   	push   %eax$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	68 20 02 00 00       	push   $0x220$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	68 79 76 10 f0       	push   $0xf0107679$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	e8 26 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010351f	obj/kern/kernel.asm	/^f010351f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	68 c0 23 12 f0       	push   $0xf01223c0$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	e8 c6 2b 00 00       	call   f01060f5 <spin_unlock>$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	f3 90                	pause  $/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	e8 b4 28 00 00       	call   f0105dea <cpunum>$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	ff b0 28 e0 23 f0    	pushl  -0xfdc1fd8(%eax)$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	e8 f0 fe ff ff       	call   f0103437 <env_pop_tf>$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547 <mc146818_read>:$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	55                   	push   %ebp$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	89 e5                	mov    %esp,%ebp$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010354f	obj/kern/kernel.asm	/^f010354f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	ee                   	out    %al,(%dx)$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	ec                   	in     (%dx),%al$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	5d                   	pop    %ebp$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	c3                   	ret    $/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e <mc146818_write>:$/;"	l
f010355e	obj/kern/kernel.asm	/^f010355e:	55                   	push   %ebp$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	ee                   	out    %al,(%dx)$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	ee                   	out    %al,(%dx)$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	5d                   	pop    %ebp$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	c3                   	ret    $/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575 <irq_setmask_8259A>:$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	55                   	push   %ebp$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	89 e5                	mov    %esp,%ebp$/;"	l
f0103578	obj/kern/kernel.asm	/^f0103578:	56                   	push   %esi$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	53                   	push   %ebx$/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	66 a3 a8 23 12 f0    	mov    %ax,0xf01223a8$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	80 3d 50 d2 22 f0 00 	cmpb   $0x0,0xf022d250$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	74 5a                	je     f01035e6 <irq_setmask_8259A+0x71>$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	89 c6                	mov    %eax,%esi$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	ee                   	out    %al,(%dx)$/;"	l
f0103594	obj/kern/kernel.asm	/^f0103594:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	ee                   	out    %al,(%dx)$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	68 17 77 10 f0       	push   $0xf0107717$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	e8 1b 01 00 00       	call   f01036c6 <cprintf>$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	f7 d6                	not    %esi$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	73 11                	jae    f01035ce <irq_setmask_8259A+0x59>$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	53                   	push   %ebx$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	68 61 96 10 f0       	push   $0xf0109661$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	e8 fb 00 00 00       	call   f01036c6 <cprintf>$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	75 e2                	jne    f01035b8 <irq_setmask_8259A+0x43>$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	68 b1 6c 10 f0       	push   $0xf0106cb1$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	e8 e3 00 00 00       	call   f01036c6 <cprintf>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	5b                   	pop    %ebx$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	5e                   	pop    %esi$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	5d                   	pop    %ebp$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	c3                   	ret    $/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed <pic_init>:$/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed:	c6 05 50 d2 22 f0 01 	movb   $0x1,0xf022d250$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	ee                   	out    %al,(%dx)$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	ee                   	out    %al,(%dx)$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	ee                   	out    %al,(%dx)$/;"	l
f0103610	obj/kern/kernel.asm	/^f0103610:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	ee                   	out    %al,(%dx)$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	ee                   	out    %al,(%dx)$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	ee                   	out    %al,(%dx)$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	ee                   	out    %al,(%dx)$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	ee                   	out    %al,(%dx)$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	ee                   	out    %al,(%dx)$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	ee                   	out    %al,(%dx)$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	ee                   	out    %al,(%dx)$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	ee                   	out    %al,(%dx)$/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	ee                   	out    %al,(%dx)$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	ee                   	out    %al,(%dx)$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	0f b7 05 a8 23 12 f0 	movzwl 0xf01223a8,%eax$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	74 13                	je     f010368b <pic_init+0x9e>$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	55                   	push   %ebp$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	89 e5                	mov    %esp,%ebp$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	50                   	push   %eax$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	e8 ee fe ff ff       	call   f0103575 <irq_setmask_8259A>$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	83 c4 10             	add    $0x10,%esp$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	c9                   	leave  $/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	f3 c3                	repz ret $/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d <putch>:$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	55                   	push   %ebp$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	e8 c8 d0 ff ff       	call   f0100763 <cputchar>$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	c9                   	leave  $/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	c3                   	ret    $/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0 <vcprintf>:$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	55                   	push   %ebp$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	50                   	push   %eax$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	68 8d 36 10 f0       	push   $0xf010368d$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	e8 e4 19 00 00       	call   f01050a5 <vprintfmt>$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	c9                   	leave  $/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	c3                   	ret    $/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6 <cprintf>:$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	55                   	push   %ebp$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	50                   	push   %eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	e8 c8 ff ff ff       	call   f01036a0 <vcprintf>$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	c9                   	leave  $/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	c3                   	ret    $/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da <trap_init_percpu>:$/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	55                   	push   %ebp$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	89 e5                	mov    %esp,%ebp$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	56                   	push   %esi$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	53                   	push   %ebx$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	e8 06 27 00 00       	call   f0105dea <cpunum>$/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	0f b6 98 20 e0 23 f0 	movzbl -0xfdc1fe0(%eax),%ebx$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	e8 f7 26 00 00       	call   f0105dea <cpunum>$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	8d 8a 2c e0 23 f0    	lea    -0xfdc1fd4(%edx),%ecx$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	0f b6 c3             	movzbl %bl,%eax$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	69 f0 00 80 ff 0f    	imul   $0xfff8000,%eax,%esi$/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	8d b6 00 00 00 f0    	lea    -0x10000000(%esi),%esi$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	89 b2 30 e0 23 f0    	mov    %esi,-0xfdc1fd0(%edx)$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	66 c7 82 34 e0 23 f0 	movw   $0x10,-0xfdc1fcc(%edx)$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	10 00 $/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	83 c0 05             	add    $0x5,%eax$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	66 c7 04 c5 40 23 12 	movw   $0x67,-0xfeddcc0(,%eax,8)$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	f0 67 00 $/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	66 89 0c c5 42 23 12 	mov    %cx,-0xfeddcbe(,%eax,8)$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	f0 $/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	89 ca                	mov    %ecx,%edx$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	88 14 c5 44 23 12 f0 	mov    %dl,-0xfeddcbc(,%eax,8)$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	c6 04 c5 46 23 12 f0 	movb   $0x40,-0xfeddcba(,%eax,8)$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	40 $/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	c1 e9 18             	shr    $0x18,%ecx$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	88 0c c5 47 23 12 f0 	mov    %cl,-0xfeddcb9(,%eax,8)$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	c6 04 c5 45 23 12 f0 	movb   $0x89,-0xfeddcbb(,%eax,8)$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	89 $/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	8d 1c dd 28 00 00 00 	lea    0x28(,%ebx,8),%ebx$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	0f 00 db             	ltr    %bx$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	b8 ac 23 12 f0       	mov    $0xf01223ac,%eax$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	0f 01 18             	lidtl  (%eax)$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	5b                   	pop    %ebx$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	5e                   	pop    %esi$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	5d                   	pop    %ebp$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	c3                   	ret    $/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e <trap_init>:$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	55                   	push   %ebp$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	b8 1c 42 10 f0       	mov    $0xf010421c,%eax$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	66 a3 60 d2 22 f0    	mov    %ax,0xf022d260$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	66 c7 05 62 d2 22 f0 	movw   $0x8,0xf022d262$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	08 00 $/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	c6 05 64 d2 22 f0 00 	movb   $0x0,0xf022d264$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	c6 05 65 d2 22 f0 ee 	movb   $0xee,0xf022d265$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	66 a3 66 d2 22 f0    	mov    %ax,0xf022d266$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	b8 26 42 10 f0       	mov    $0xf0104226,%eax$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	66 a3 68 d2 22 f0    	mov    %ax,0xf022d268$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	66 c7 05 6a d2 22 f0 	movw   $0x8,0xf022d26a$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	08 00 $/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	c6 05 6c d2 22 f0 00 	movb   $0x0,0xf022d26c$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	c6 05 6d d2 22 f0 ee 	movb   $0xee,0xf022d26d$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	66 a3 6e d2 22 f0    	mov    %ax,0xf022d26e$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	b8 30 42 10 f0       	mov    $0xf0104230,%eax$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	66 a3 70 d2 22 f0    	mov    %ax,0xf022d270$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	66 c7 05 72 d2 22 f0 	movw   $0x8,0xf022d272$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	08 00 $/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	c6 05 74 d2 22 f0 00 	movb   $0x0,0xf022d274$/;"	l
f01037e5	obj/kern/kernel.asm	/^f01037e5:	c6 05 75 d2 22 f0 8e 	movb   $0x8e,0xf022d275$/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	66 a3 76 d2 22 f0    	mov    %ax,0xf022d276$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	b8 3a 42 10 f0       	mov    $0xf010423a,%eax$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	66 a3 78 d2 22 f0    	mov    %ax,0xf022d278$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	66 c7 05 7a d2 22 f0 	movw   $0x8,0xf022d27a$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	08 00 $/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	c6 05 7c d2 22 f0 00 	movb   $0x0,0xf022d27c$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	c6 05 7d d2 22 f0 ee 	movb   $0xee,0xf022d27d$/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	66 a3 7e d2 22 f0    	mov    %ax,0xf022d27e$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	b8 44 42 10 f0       	mov    $0xf0104244,%eax$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	66 a3 80 d2 22 f0    	mov    %ax,0xf022d280$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	66 c7 05 82 d2 22 f0 	movw   $0x8,0xf022d282$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	08 00 $/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	c6 05 84 d2 22 f0 00 	movb   $0x0,0xf022d284$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	c6 05 85 d2 22 f0 ee 	movb   $0xee,0xf022d285$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	66 a3 86 d2 22 f0    	mov    %ax,0xf022d286$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	b8 4e 42 10 f0       	mov    $0xf010424e,%eax$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	66 a3 88 d2 22 f0    	mov    %ax,0xf022d288$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	66 c7 05 8a d2 22 f0 	movw   $0x8,0xf022d28a$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	08 00 $/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	c6 05 8c d2 22 f0 00 	movb   $0x0,0xf022d28c$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	c6 05 8d d2 22 f0 8e 	movb   $0x8e,0xf022d28d$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	66 a3 8e d2 22 f0    	mov    %ax,0xf022d28e$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	b8 58 42 10 f0       	mov    $0xf0104258,%eax$/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	66 a3 90 d2 22 f0    	mov    %ax,0xf022d290$/;"	l
f0103881	obj/kern/kernel.asm	/^f0103881:	66 c7 05 92 d2 22 f0 	movw   $0x8,0xf022d292$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	08 00 $/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a:	c6 05 94 d2 22 f0 00 	movb   $0x0,0xf022d294$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	c6 05 95 d2 22 f0 8e 	movb   $0x8e,0xf022d295$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010389b	obj/kern/kernel.asm	/^f010389b:	66 a3 96 d2 22 f0    	mov    %ax,0xf022d296$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	b8 62 42 10 f0       	mov    $0xf0104262,%eax$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	66 a3 98 d2 22 f0    	mov    %ax,0xf022d298$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	66 c7 05 9a d2 22 f0 	movw   $0x8,0xf022d29a$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	08 00 $/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	c6 05 9c d2 22 f0 00 	movb   $0x0,0xf022d29c$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	c6 05 9d d2 22 f0 ee 	movb   $0xee,0xf022d29d$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	66 a3 9e d2 22 f0    	mov    %ax,0xf022d29e$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	b8 6c 42 10 f0       	mov    $0xf010426c,%eax$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	66 a3 a0 d2 22 f0    	mov    %ax,0xf022d2a0$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	66 c7 05 a2 d2 22 f0 	movw   $0x8,0xf022d2a2$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	08 00 $/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	c6 05 a4 d2 22 f0 00 	movb   $0x0,0xf022d2a4$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	c6 05 a5 d2 22 f0 8e 	movb   $0x8e,0xf022d2a5$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	66 a3 a6 d2 22 f0    	mov    %ax,0xf022d2a6$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	b8 74 42 10 f0       	mov    $0xf0104274,%eax$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	66 a3 b0 d2 22 f0    	mov    %ax,0xf022d2b0$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	66 c7 05 b2 d2 22 f0 	movw   $0x8,0xf022d2b2$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	08 00 $/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	c6 05 b4 d2 22 f0 00 	movb   $0x0,0xf022d2b4$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	c6 05 b5 d2 22 f0 8e 	movb   $0x8e,0xf022d2b5$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	66 a3 b6 d2 22 f0    	mov    %ax,0xf022d2b6$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	b8 7c 42 10 f0       	mov    $0xf010427c,%eax$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	66 a3 b8 d2 22 f0    	mov    %ax,0xf022d2b8$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	66 c7 05 ba d2 22 f0 	movw   $0x8,0xf022d2ba$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	08 00 $/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	c6 05 bc d2 22 f0 00 	movb   $0x0,0xf022d2bc$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	c6 05 bd d2 22 f0 ee 	movb   $0xee,0xf022d2bd$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	66 a3 be d2 22 f0    	mov    %ax,0xf022d2be$/;"	l
f010394d	obj/kern/kernel.asm	/^f010394d:	b8 84 42 10 f0       	mov    $0xf0104284,%eax$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	66 a3 c0 d2 22 f0    	mov    %ax,0xf022d2c0$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	66 c7 05 c2 d2 22 f0 	movw   $0x8,0xf022d2c2$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	08 00 $/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	c6 05 c4 d2 22 f0 00 	movb   $0x0,0xf022d2c4$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	c6 05 c5 d2 22 f0 8e 	movb   $0x8e,0xf022d2c5$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	66 a3 c6 d2 22 f0    	mov    %ax,0xf022d2c6$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	b8 8c 42 10 f0       	mov    $0xf010428c,%eax$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	66 a3 c8 d2 22 f0    	mov    %ax,0xf022d2c8$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	66 c7 05 ca d2 22 f0 	movw   $0x8,0xf022d2ca$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	08 00 $/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	c6 05 cc d2 22 f0 00 	movb   $0x0,0xf022d2cc$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	c6 05 cd d2 22 f0 8e 	movb   $0x8e,0xf022d2cd$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	66 a3 ce d2 22 f0    	mov    %ax,0xf022d2ce$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	b8 94 42 10 f0       	mov    $0xf0104294,%eax$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	66 a3 d0 d2 22 f0    	mov    %ax,0xf022d2d0$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	66 c7 05 d2 d2 22 f0 	movw   $0x8,0xf022d2d2$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	08 00 $/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	c6 05 d4 d2 22 f0 00 	movb   $0x0,0xf022d2d4$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	c6 05 d5 d2 22 f0 8e 	movb   $0x8e,0xf022d2d5$/;"	l
f01039c5	obj/kern/kernel.asm	/^f01039c5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	66 a3 d6 d2 22 f0    	mov    %ax,0xf022d2d6$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	b8 9c 42 10 f0       	mov    $0xf010429c,%eax$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	66 a3 e0 d2 22 f0    	mov    %ax,0xf022d2e0$/;"	l
f01039d9	obj/kern/kernel.asm	/^f01039d9:	66 c7 05 e2 d2 22 f0 	movw   $0x8,0xf022d2e2$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	08 00 $/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	c6 05 e4 d2 22 f0 00 	movb   $0x0,0xf022d2e4$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	c6 05 e5 d2 22 f0 8e 	movb   $0x8e,0xf022d2e5$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	66 a3 e6 d2 22 f0    	mov    %ax,0xf022d2e6$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	b8 a6 42 10 f0       	mov    $0xf01042a6,%eax$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	66 a3 e8 d2 22 f0    	mov    %ax,0xf022d2e8$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	66 c7 05 ea d2 22 f0 	movw   $0x8,0xf022d2ea$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	08 00 $/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	c6 05 ec d2 22 f0 00 	movb   $0x0,0xf022d2ec$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	c6 05 ed d2 22 f0 8e 	movb   $0x8e,0xf022d2ed$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	66 a3 ee d2 22 f0    	mov    %ax,0xf022d2ee$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	b8 ae 42 10 f0       	mov    $0xf01042ae,%eax$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	66 a3 f0 d2 22 f0    	mov    %ax,0xf022d2f0$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	66 c7 05 f2 d2 22 f0 	movw   $0x8,0xf022d2f2$/;"	l
f0103a36	obj/kern/kernel.asm	/^f0103a36:	08 00 $/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	c6 05 f4 d2 22 f0 00 	movb   $0x0,0xf022d2f4$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	c6 05 f5 d2 22 f0 8e 	movb   $0x8e,0xf022d2f5$/;"	l
f0103a46	obj/kern/kernel.asm	/^f0103a46:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	66 a3 f6 d2 22 f0    	mov    %ax,0xf022d2f6$/;"	l
f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	b8 b8 42 10 f0       	mov    $0xf01042b8,%eax$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	66 a3 f8 d2 22 f0    	mov    %ax,0xf022d2f8$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	66 c7 05 fa d2 22 f0 	movw   $0x8,0xf022d2fa$/;"	l
f0103a61	obj/kern/kernel.asm	/^f0103a61:	08 00 $/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	c6 05 fc d2 22 f0 00 	movb   $0x0,0xf022d2fc$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	c6 05 fd d2 22 f0 8e 	movb   $0x8e,0xf022d2fd$/;"	l
f0103a71	obj/kern/kernel.asm	/^f0103a71:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	66 a3 fe d2 22 f0    	mov    %ax,0xf022d2fe$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	b8 c2 42 10 f0       	mov    $0xf01042c2,%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	66 a3 e0 d3 22 f0    	mov    %ax,0xf022d3e0$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	66 c7 05 e2 d3 22 f0 	movw   $0x8,0xf022d3e2$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	08 00 $/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	c6 05 e4 d3 22 f0 00 	movb   $0x0,0xf022d3e4$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	c6 05 e5 d3 22 f0 ee 	movb   $0xee,0xf022d3e5$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	66 a3 e6 d3 22 f0    	mov    %ax,0xf022d3e6$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	b8 cc 42 10 f0       	mov    $0xf01042cc,%eax$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	66 a3 00 e2 22 f0    	mov    %ax,0xf022e200$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	66 c7 05 02 e2 22 f0 	movw   $0x8,0xf022e202$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	08 00 $/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	c6 05 04 e2 22 f0 00 	movb   $0x0,0xf022e204$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	c6 05 05 e2 22 f0 ee 	movb   $0xee,0xf022e205$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	66 a3 06 e2 22 f0    	mov    %ax,0xf022e206$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	b8 d6 42 10 f0       	mov    $0xf01042d6,%eax$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	66 a3 60 d3 22 f0    	mov    %ax,0xf022d360$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	66 c7 05 62 d3 22 f0 	movw   $0x8,0xf022d362$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	08 00 $/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	c6 05 64 d3 22 f0 00 	movb   $0x0,0xf022d364$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	c6 05 65 d3 22 f0 ee 	movb   $0xee,0xf022d365$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	66 a3 66 d3 22 f0    	mov    %ax,0xf022d366$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	b8 dc 42 10 f0       	mov    $0xf01042dc,%eax$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	66 a3 68 d3 22 f0    	mov    %ax,0xf022d368$/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	66 c7 05 6a d3 22 f0 	movw   $0x8,0xf022d36a$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	08 00 $/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	c6 05 6c d3 22 f0 00 	movb   $0x0,0xf022d36c$/;"	l
f0103b16	obj/kern/kernel.asm	/^f0103b16:	c6 05 6d d3 22 f0 8e 	movb   $0x8e,0xf022d36d$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	66 a3 6e d3 22 f0    	mov    %ax,0xf022d36e$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	b8 e2 42 10 f0       	mov    $0xf01042e2,%eax$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	66 a3 70 d3 22 f0    	mov    %ax,0xf022d370$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	66 c7 05 72 d3 22 f0 	movw   $0x8,0xf022d372$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	08 00 $/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	c6 05 74 d3 22 f0 00 	movb   $0x0,0xf022d374$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	c6 05 75 d3 22 f0 8e 	movb   $0x8e,0xf022d375$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	66 a3 76 d3 22 f0    	mov    %ax,0xf022d376$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	b8 e8 42 10 f0       	mov    $0xf01042e8,%eax$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	66 a3 78 d3 22 f0    	mov    %ax,0xf022d378$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	66 c7 05 7a d3 22 f0 	movw   $0x8,0xf022d37a$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	08 00 $/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	c6 05 7c d3 22 f0 00 	movb   $0x0,0xf022d37c$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	c6 05 7d d3 22 f0 8e 	movb   $0x8e,0xf022d37d$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	66 a3 7e d3 22 f0    	mov    %ax,0xf022d37e$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	b8 ee 42 10 f0       	mov    $0xf01042ee,%eax$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	66 a3 80 d3 22 f0    	mov    %ax,0xf022d380$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	66 c7 05 82 d3 22 f0 	movw   $0x8,0xf022d382$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	08 00 $/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	c6 05 84 d3 22 f0 00 	movb   $0x0,0xf022d384$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	c6 05 85 d3 22 f0 8e 	movb   $0x8e,0xf022d385$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ba1	obj/kern/kernel.asm	/^f0103ba1:	66 a3 86 d3 22 f0    	mov    %ax,0xf022d386$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	b8 f4 42 10 f0       	mov    $0xf01042f4,%eax$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	66 a3 88 d3 22 f0    	mov    %ax,0xf022d388$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	66 c7 05 8a d3 22 f0 	movw   $0x8,0xf022d38a$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	08 00 $/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	c6 05 8c d3 22 f0 00 	movb   $0x0,0xf022d38c$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	c6 05 8d d3 22 f0 8e 	movb   $0x8e,0xf022d38d$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	66 a3 8e d3 22 f0    	mov    %ax,0xf022d38e$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	b8 fa 42 10 f0       	mov    $0xf01042fa,%eax$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	66 a3 90 d3 22 f0    	mov    %ax,0xf022d390$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	66 c7 05 92 d3 22 f0 	movw   $0x8,0xf022d392$/;"	l
f0103be4	obj/kern/kernel.asm	/^f0103be4:	08 00 $/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	c6 05 94 d3 22 f0 00 	movb   $0x0,0xf022d394$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	c6 05 95 d3 22 f0 8e 	movb   $0x8e,0xf022d395$/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	66 a3 96 d3 22 f0    	mov    %ax,0xf022d396$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	b8 00 43 10 f0       	mov    $0xf0104300,%eax$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	66 a3 98 d3 22 f0    	mov    %ax,0xf022d398$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	66 c7 05 9a d3 22 f0 	movw   $0x8,0xf022d39a$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	08 00 $/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	c6 05 9c d3 22 f0 00 	movb   $0x0,0xf022d39c$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	c6 05 9d d3 22 f0 8e 	movb   $0x8e,0xf022d39d$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	66 a3 9e d3 22 f0    	mov    %ax,0xf022d39e$/;"	l
f0103c28	obj/kern/kernel.asm	/^f0103c28:	b8 06 43 10 f0       	mov    $0xf0104306,%eax$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	66 a3 a0 d3 22 f0    	mov    %ax,0xf022d3a0$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	66 c7 05 a2 d3 22 f0 	movw   $0x8,0xf022d3a2$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	08 00 $/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	c6 05 a4 d3 22 f0 00 	movb   $0x0,0xf022d3a4$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	c6 05 a5 d3 22 f0 8e 	movb   $0x8e,0xf022d3a5$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	66 a3 a6 d3 22 f0    	mov    %ax,0xf022d3a6$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	b8 0c 43 10 f0       	mov    $0xf010430c,%eax$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	66 a3 a8 d3 22 f0    	mov    %ax,0xf022d3a8$/;"	l
f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	66 c7 05 aa d3 22 f0 	movw   $0x8,0xf022d3aa$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	08 00 $/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	c6 05 ac d3 22 f0 00 	movb   $0x0,0xf022d3ac$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	c6 05 ad d3 22 f0 8e 	movb   $0x8e,0xf022d3ad$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	66 a3 ae d3 22 f0    	mov    %ax,0xf022d3ae$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	b8 12 43 10 f0       	mov    $0xf0104312,%eax$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	66 a3 b0 d3 22 f0    	mov    %ax,0xf022d3b0$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	66 c7 05 b2 d3 22 f0 	movw   $0x8,0xf022d3b2$/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	08 00 $/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	c6 05 b4 d3 22 f0 00 	movb   $0x0,0xf022d3b4$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	c6 05 b5 d3 22 f0 8e 	movb   $0x8e,0xf022d3b5$/;"	l
f0103ca0	obj/kern/kernel.asm	/^f0103ca0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	66 a3 b6 d3 22 f0    	mov    %ax,0xf022d3b6$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	b8 18 43 10 f0       	mov    $0xf0104318,%eax$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	66 a3 b8 d3 22 f0    	mov    %ax,0xf022d3b8$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	66 c7 05 ba d3 22 f0 	movw   $0x8,0xf022d3ba$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	08 00 $/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	c6 05 bc d3 22 f0 00 	movb   $0x0,0xf022d3bc$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	c6 05 bd d3 22 f0 8e 	movb   $0x8e,0xf022d3bd$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	66 a3 be d3 22 f0    	mov    %ax,0xf022d3be$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	b8 1e 43 10 f0       	mov    $0xf010431e,%eax$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	66 a3 c0 d3 22 f0    	mov    %ax,0xf022d3c0$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	66 c7 05 c2 d3 22 f0 	movw   $0x8,0xf022d3c2$/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	08 00 $/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	c6 05 c4 d3 22 f0 00 	movb   $0x0,0xf022d3c4$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	c6 05 c5 d3 22 f0 8e 	movb   $0x8e,0xf022d3c5$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	66 a3 c6 d3 22 f0    	mov    %ax,0xf022d3c6$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	b8 24 43 10 f0       	mov    $0xf0104324,%eax$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	66 a3 c8 d3 22 f0    	mov    %ax,0xf022d3c8$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	66 c7 05 ca d3 22 f0 	movw   $0x8,0xf022d3ca$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	08 00 $/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	c6 05 cc d3 22 f0 00 	movb   $0x0,0xf022d3cc$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	c6 05 cd d3 22 f0 8e 	movb   $0x8e,0xf022d3cd$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	66 a3 ce d3 22 f0    	mov    %ax,0xf022d3ce$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	b8 2a 43 10 f0       	mov    $0xf010432a,%eax$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	66 a3 d0 d3 22 f0    	mov    %ax,0xf022d3d0$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	66 c7 05 d2 d3 22 f0 	movw   $0x8,0xf022d3d2$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	08 00 $/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	c6 05 d4 d3 22 f0 00 	movb   $0x0,0xf022d3d4$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	c6 05 d5 d3 22 f0 8e 	movb   $0x8e,0xf022d3d5$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	66 a3 d6 d3 22 f0    	mov    %ax,0xf022d3d6$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	b8 30 43 10 f0       	mov    $0xf0104330,%eax$/;"	l
f0103d5a	obj/kern/kernel.asm	/^f0103d5a:	66 a3 d8 d3 22 f0    	mov    %ax,0xf022d3d8$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	66 c7 05 da d3 22 f0 	movw   $0x8,0xf022d3da$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	08 00 $/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	c6 05 dc d3 22 f0 00 	movb   $0x0,0xf022d3dc$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	c6 05 dd d3 22 f0 8e 	movb   $0x8e,0xf022d3dd$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	66 a3 de d3 22 f0    	mov    %ax,0xf022d3de$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	e8 55 f9 ff ff       	call   f01036da <trap_init_percpu>$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	c9                   	leave  $/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	c3                   	ret    $/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87 <print_regs>:$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	55                   	push   %ebp$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	53                   	push   %ebx$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	ff 33                	pushl  (%ebx)$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	68 2b 77 10 f0       	push   $0xf010772b$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	e8 29 f9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	68 3a 77 10 f0       	push   $0xf010773a$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	e8 19 f9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	68 49 77 10 f0       	push   $0xf0107749$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	e8 09 f9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	68 58 77 10 f0       	push   $0xf0107758$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	e8 f9 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	68 67 77 10 f0       	push   $0xf0107767$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	e8 e9 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	68 76 77 10 f0       	push   $0xf0107776$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	e8 d9 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	68 85 77 10 f0       	push   $0xf0107785$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	e8 c9 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	68 94 77 10 f0       	push   $0xf0107794$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	e8 b9 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	c9                   	leave  $/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	c3                   	ret    $/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15 <print_trapframe>:$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	55                   	push   %ebp$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	56                   	push   %esi$/;"	l
f0103e19	obj/kern/kernel.asm	/^f0103e19:	53                   	push   %ebx$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	e8 c8 1f 00 00       	call   f0105dea <cpunum>$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	50                   	push   %eax$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	53                   	push   %ebx$/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27:	68 f8 77 10 f0       	push   $0xf01077f8$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	e8 95 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	e8 4e ff ff ff       	call   f0103d87 <print_regs>$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	50                   	push   %eax$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	68 16 78 10 f0       	push   $0xf0107816$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	e8 7b f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	50                   	push   %eax$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	68 29 78 10 f0       	push   $0xf0107829$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	e8 69 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	77 09                	ja     f0103e71 <print_trapframe+0x5c>$/;"	l
f0103e68	obj/kern/kernel.asm	/^f0103e68:	8b 14 85 00 7b 10 f0 	mov    -0xfef8500(,%eax,4),%edx$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	eb 1f                	jmp    f0103e90 <print_trapframe+0x7b>$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	74 15                	je     f0103e8b <print_trapframe+0x76>$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0103e79	obj/kern/kernel.asm	/^f0103e79:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	b9 c2 77 10 f0       	mov    $0xf01077c2,%ecx$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	ba af 77 10 f0       	mov    $0xf01077af,%edx$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	eb 05                	jmp    f0103e90 <print_trapframe+0x7b>$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	ba a3 77 10 f0       	mov    $0xf01077a3,%edx$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	52                   	push   %edx$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	50                   	push   %eax$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	68 3c 78 10 f0       	push   $0xf010783c$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	e8 27 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	3b 1d 60 da 22 f0    	cmp    0xf022da60,%ebx$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	75 1a                	jne    f0103ec4 <print_trapframe+0xaf>$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	75 14                	jne    f0103ec4 <print_trapframe+0xaf>$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	50                   	push   %eax$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	68 4e 78 10 f0       	push   $0xf010784e$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	e8 05 f8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	68 5d 78 10 f0       	push   $0xf010785d$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	e8 f2 f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	75 49                	jne    f0103f26 <print_trapframe+0x111>$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	89 c2                	mov    %eax,%edx$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	ba dc 77 10 f0       	mov    $0xf01077dc,%edx$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	b9 d1 77 10 f0       	mov    $0xf01077d1,%ecx$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	89 c2                	mov    %eax,%edx$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	ba ee 77 10 f0       	mov    $0xf01077ee,%edx$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	be e8 77 10 f0       	mov    $0xf01077e8,%esi$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	be 28 79 10 f0       	mov    $0xf0107928,%esi$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	b8 f3 77 10 f0       	mov    $0xf01077f3,%eax$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	51                   	push   %ecx$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	52                   	push   %edx$/;"	l
f0103f16	obj/kern/kernel.asm	/^f0103f16:	50                   	push   %eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	68 6b 78 10 f0       	push   $0xf010786b$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	e8 a5 f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	eb 10                	jmp    f0103f36 <print_trapframe+0x121>$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	68 b1 6c 10 f0       	push   $0xf0106cb1$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	e8 93 f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	68 7a 78 10 f0       	push   $0xf010787a$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	e8 80 f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	50                   	push   %eax$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	68 89 78 10 f0       	push   $0xf0107889$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	e8 6e f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	68 9c 78 10 f0       	push   $0xf010789c$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	e8 5e f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	74 25                	je     f0103f96 <print_trapframe+0x181>$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	68 ab 78 10 f0       	push   $0xf01078ab$/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	e8 45 f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	50                   	push   %eax$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	68 ba 78 10 f0       	push   $0xf01078ba$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	e8 33 f7 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	5b                   	pop    %ebx$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	5e                   	pop    %esi$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	5d                   	pop    %ebp$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	c3                   	ret    $/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d <page_fault_handler>:$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	55                   	push   %ebp$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	57                   	push   %edi$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	56                   	push   %esi$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	53                   	push   %ebx$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	e8 36 1e 00 00       	call   f0105dea <cpunum>$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	57                   	push   %edi$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	56                   	push   %esi$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	68 74 7a 10 f0       	push   $0xf0107a74$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	e8 fa f6 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	e8 41 fe ff ff       	call   f0103e15 <print_trapframe>$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	e8 11 1e 00 00       	call   f0105dea <cpunum>$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	ff b0 28 e0 23 f0    	pushl  -0xfdc1fd8(%eax)$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	e8 ec f3 ff ff       	call   f01033d6 <env_destroy>$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	5b                   	pop    %ebx$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	5e                   	pop    %esi$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	5f                   	pop    %edi$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	5d                   	pop    %ebp$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	c3                   	ret    $/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5 <trap>:$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	55                   	push   %ebp$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	57                   	push   %edi$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	56                   	push   %esi$/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	fc                   	cld    $/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	83 3d 80 de 22 f0 00 	cmpl   $0x0,0xf022de80$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	74 01                	je     f0104008 <trap+0x13>$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	f4                   	hlt    $/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	e8 dd 1d 00 00       	call   f0105dea <cpunum>$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	81 c2 20 e0 23 f0    	add    $0xf023e020,%edx$/;"	l
f0104016	obj/kern/kernel.asm	/^f0104016:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	75 10                	jne    f0104034 <trap+0x3f>$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	68 c0 23 12 f0       	push   $0xf01223c0$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	e8 27 20 00 00       	call   f0106058 <spin_lock>$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	9c                   	pushf  $/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	58                   	pop    %eax$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	74 19                	je     f0104054 <trap+0x5f>$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	68 cd 78 10 f0       	push   $0xf01078cd$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	68 19 01 00 00       	push   $0x119$/;"	l
f010404a	obj/kern/kernel.asm	/^f010404a:	68 e6 78 10 f0       	push   $0xf01078e6$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	e8 ec bf ff ff       	call   f0100040 <_panic>$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	83 e0 03             	and    $0x3,%eax$/;"	l
f010405b	obj/kern/kernel.asm	/^f010405b:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	0f 85 a0 00 00 00    	jne    f0104105 <trap+0x110>$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	68 c0 23 12 f0       	push   $0xf01223c0$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	e8 e6 1f 00 00       	call   f0106058 <spin_lock>$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	e8 73 1d 00 00       	call   f0105dea <cpunum>$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	83 b8 28 e0 23 f0 00 	cmpl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	75 19                	jne    f010409f <trap+0xaa>$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	68 f2 78 10 f0       	push   $0xf01078f2$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	68 21 01 00 00       	push   $0x121$/;"	l
f0104095	obj/kern/kernel.asm	/^f0104095:	68 e6 78 10 f0       	push   $0xf01078e6$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	e8 a1 bf ff ff       	call   f0100040 <_panic>$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	e8 46 1d 00 00       	call   f0105dea <cpunum>$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f01040b1	obj/kern/kernel.asm	/^f01040b1:	75 2d                	jne    f01040e0 <trap+0xeb>$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	e8 32 1d 00 00       	call   f0105dea <cpunum>$/;"	l
f01040b8	obj/kern/kernel.asm	/^f01040b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	ff b0 28 e0 23 f0    	pushl  -0xfdc1fd8(%eax)$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	e8 32 f1 ff ff       	call   f01031fb <env_free>$/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	e8 1c 1d 00 00       	call   f0105dea <cpunum>$/;"	l
f01040ce	obj/kern/kernel.asm	/^f01040ce:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	c7 80 28 e0 23 f0 00 	movl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	00 00 00 $/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	e8 5c 03 00 00       	call   f010443c <sched_yield>$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	e8 05 1d 00 00       	call   f0105dea <cpunum>$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	89 c7                	mov    %eax,%edi$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	e8 ee 1c 00 00       	call   f0105dea <cpunum>$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	8b b0 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%esi$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	89 35 60 da 22 f0    	mov    %esi,0xf022da60$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	75 1d                	jne    f0104130 <trap+0x13b>$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	68 f9 78 10 f0       	push   $0xf01078f9$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	e8 a6 f5 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	e8 ed fc ff ff       	call   f0103e15 <print_trapframe>$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	83 c4 10             	add    $0x10,%esp$/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	e9 ac 00 00 00       	jmp    f01041dc <trap+0x1e7>$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	74 0c                	je     f0104141 <trap+0x14c>$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	74 26                	je     f0104160 <trap+0x16b>$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	75 42                	jne    f0104181 <trap+0x18c>$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	eb 11                	jmp    f0104152 <trap+0x15d>$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	56                   	push   %esi$/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	e8 53 fe ff ff       	call   f0103f9d <page_fault_handler>$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	e9 8a 00 00 00       	jmp    f01041dc <trap+0x1e7>$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	56                   	push   %esi$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	e8 25 c7 ff ff       	call   f0100880 <monitor>$/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	eb f2                	jmp    f0104152 <trap+0x15d>$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	ff 36                	pushl  (%esi)$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	e8 50 03 00 00       	call   f01044c9 <syscall>$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	eb 5b                	jmp    f01041dc <trap+0x1e7>$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	68 f9 00 00 00       	push   $0xf9$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	68 e0 7a 10 f0       	push   $0xf0107ae0$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	68 e6 78 10 f0       	push   $0xf01078e6$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	68 98 7a 10 f0       	push   $0xf0107a98$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	e8 2c f5 ff ff       	call   f01036c6 <cprintf>$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	e8 73 fc ff ff       	call   f0103e15 <print_trapframe>$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	75 17                	jne    f01041c3 <trap+0x1ce>$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	68 16 79 10 f0       	push   $0xf0107916$/;"	l
f01041b4	obj/kern/kernel.asm	/^f01041b4:	68 fe 00 00 00       	push   $0xfe$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	68 e6 78 10 f0       	push   $0xf01078e6$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	e8 7d be ff ff       	call   f0100040 <_panic>$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	e8 22 1c 00 00       	call   f0105dea <cpunum>$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	ff b0 28 e0 23 f0    	pushl  -0xfdc1fd8(%eax)$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	e8 fd f1 ff ff       	call   f01033d6 <env_destroy>$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	e8 09 1c 00 00       	call   f0105dea <cpunum>$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	83 b8 28 e0 23 f0 00 	cmpl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	74 2a                	je     f0104217 <trap+0x222>$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	e8 f8 1b 00 00       	call   f0105dea <cpunum>$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	75 16                	jne    f0104217 <trap+0x222>$/;"	l
f0104201	obj/kern/kernel.asm	/^f0104201:	e8 e4 1b 00 00       	call   f0105dea <cpunum>$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	ff b0 28 e0 23 f0    	pushl  -0xfdc1fd8(%eax)$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	e8 5e f2 ff ff       	call   f0103475 <env_run>$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	e8 20 02 00 00       	call   f010443c <sched_yield>$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c <vec0>:$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	6a 00                	push   $0x0$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	6a 00                	push   $0x0$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	e9 29 01 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	90                   	nop$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226 <vec1>:$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	6a 00                	push   $0x0$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	6a 01                	push   $0x1$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	e9 1f 01 00 00       	jmp    f010434e <_alltraps>$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	90                   	nop$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230 <vec2>:$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	6a 00                	push   $0x0$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	6a 02                	push   $0x2$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	e9 15 01 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	90                   	nop$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a <vec3>:$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	6a 00                	push   $0x0$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	6a 03                	push   $0x3$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	e9 0b 01 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	90                   	nop$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244 <vec4>:$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	6a 00                	push   $0x0$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	6a 04                	push   $0x4$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	e9 01 01 00 00       	jmp    f010434e <_alltraps>$/;"	l
f010424d	obj/kern/kernel.asm	/^f010424d:	90                   	nop$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e <vec5>:$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	6a 00                	push   $0x0$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	6a 05                	push   $0x5$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	e9 f7 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	90                   	nop$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258 <vec6>:$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	6a 00                	push   $0x0$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	6a 06                	push   $0x6$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	e9 ed 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	90                   	nop$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262 <vec7>:$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	6a 00                	push   $0x0$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	6a 07                	push   $0x7$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	e9 e3 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	90                   	nop$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c <vec8>:$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	6a 08                	push   $0x8$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	e9 db 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	90                   	nop$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274 <vec10>:$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	6a 0a                	push   $0xa$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	e9 d3 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	90                   	nop$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c <vec11>:$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	6a 0b                	push   $0xb$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	e9 cb 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	90                   	nop$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284 <vec12>:$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	6a 0c                	push   $0xc$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	e9 c3 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	90                   	nop$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c <vec13>:$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	6a 0d                	push   $0xd$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	e9 bb 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f0104293	obj/kern/kernel.asm	/^f0104293:	90                   	nop$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294 <vec14>:$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	6a 0e                	push   $0xe$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	e9 b3 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	90                   	nop$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c <vec16>:$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	6a 00                	push   $0x0$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	6a 10                	push   $0x10$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	e9 a9 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	90                   	nop$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6 <vec17>:$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	6a 11                	push   $0x11$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	e9 a1 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	90                   	nop$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae <vec18>:$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	6a 00                	push   $0x0$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	6a 12                	push   $0x12$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	e9 97 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	90                   	nop$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8 <vec19>:$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	6a 00                	push   $0x0$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	6a 13                	push   $0x13$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	e9 8d 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1:	90                   	nop$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2 <vec48>:$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	6a 00                	push   $0x0$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	6a 30                	push   $0x30$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	e9 83 00 00 00       	jmp    f010434e <_alltraps>$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	90                   	nop$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc <vecall>:$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	6a 00                	push   $0x0$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	68 f4 01 00 00       	push   $0x1f4$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	eb 79                	jmp    f010434e <_alltraps>$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	90                   	nop$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6 <irq_0>:$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	6a 00                	push   $0x0$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	6a 20                	push   $0x20$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	eb 72                	jmp    f010434e <_alltraps>$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc <irq_1>:$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	6a 00                	push   $0x0$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	6a 21                	push   $0x21$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	eb 6c                	jmp    f010434e <_alltraps>$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2 <irq_2>:$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	6a 00                	push   $0x0$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	6a 22                	push   $0x22$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	eb 66                	jmp    f010434e <_alltraps>$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8 <irq_3>:$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	6a 00                	push   $0x0$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	6a 23                	push   $0x23$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	eb 60                	jmp    f010434e <_alltraps>$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee <irq_4>:$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	6a 00                	push   $0x0$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	6a 24                	push   $0x24$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	eb 5a                	jmp    f010434e <_alltraps>$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4 <irq_5>:$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	6a 00                	push   $0x0$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	6a 25                	push   $0x25$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	eb 54                	jmp    f010434e <_alltraps>$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa <irq_6>:$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	6a 00                	push   $0x0$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	6a 26                	push   $0x26$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	eb 4e                	jmp    f010434e <_alltraps>$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300 <irq_7>:$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	6a 00                	push   $0x0$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	6a 27                	push   $0x27$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	eb 48                	jmp    f010434e <_alltraps>$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306 <irq_8>:$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	6a 00                	push   $0x0$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	6a 28                	push   $0x28$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	eb 42                	jmp    f010434e <_alltraps>$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c <irq_9>:$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	6a 00                	push   $0x0$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	6a 29                	push   $0x29$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	eb 3c                	jmp    f010434e <_alltraps>$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312 <irq_10>:$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	6a 00                	push   $0x0$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	6a 2a                	push   $0x2a$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	eb 36                	jmp    f010434e <_alltraps>$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318 <irq_11>:$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	6a 00                	push   $0x0$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	6a 2b                	push   $0x2b$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	eb 30                	jmp    f010434e <_alltraps>$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e <irq_12>:$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	6a 00                	push   $0x0$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	6a 2c                	push   $0x2c$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	eb 2a                	jmp    f010434e <_alltraps>$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324 <irq_13>:$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	6a 00                	push   $0x0$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	6a 2d                	push   $0x2d$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	eb 24                	jmp    f010434e <_alltraps>$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a <irq_14>:$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	6a 00                	push   $0x0$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	6a 2e                	push   $0x2e$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	eb 1e                	jmp    f010434e <_alltraps>$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330 <irq_15>:$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	6a 00                	push   $0x0$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	6a 2f                	push   $0x2f$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	eb 18                	jmp    f010434e <_alltraps>$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336 <irq_16>:$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336:	6a 00                	push   $0x0$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	6a 30                	push   $0x30$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	eb 12                	jmp    f010434e <_alltraps>$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c <irq_17>:$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	6a 00                	push   $0x0$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	6a 31                	push   $0x31$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	eb 0c                	jmp    f010434e <_alltraps>$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342 <irq_18>:$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	6a 00                	push   $0x0$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	6a 32                	push   $0x32$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	eb 06                	jmp    f010434e <_alltraps>$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348 <irq_19>:$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	6a 00                	push   $0x0$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	6a 33                	push   $0x33$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	eb 00                	jmp    f010434e <_alltraps>$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e <_alltraps>:$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	1e                   	push   %ds$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	06                   	push   %es$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	60                   	pusha  $/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	8e d8                	mov    %eax,%ds$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	8e c0                	mov    %eax,%es$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	54                   	push   %esp$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	e8 95 fc ff ff       	call   f0103ff5 <trap>$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	5c                   	pop    %esp$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	61                   	popa   $/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	07                   	pop    %es$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	1f                   	pop    %ds$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104367	obj/kern/kernel.asm	/^f0104367:	cf                   	iret   $/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368 <sched_halt>:$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	55                   	push   %ebp$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	89 e5                	mov    %esp,%ebp$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	a1 48 d2 22 f0       	mov    0xf022d248,%eax$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	8b 02                	mov    (%edx),%eax$/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	76 10                	jbe    f0104395 <sched_halt+0x2d>$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	75 e8                	jne    f010437b <sched_halt+0x13>$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	eb 08                	jmp    f010439d <sched_halt+0x35>$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	75 1f                	jne    f01043bc <sched_halt+0x54>$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	68 50 7b 10 f0       	push   $0xf0107b50$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	e8 1c f3 ff ff       	call   f01036c6 <cprintf>$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	6a 00                	push   $0x0$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	e8 c9 c4 ff ff       	call   f0100880 <monitor>$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	eb f1                	jmp    f01043ad <sched_halt+0x45>$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	e8 29 1a 00 00       	call   f0105dea <cpunum>$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	c7 80 28 e0 23 f0 00 	movl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	00 00 00 $/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	a1 8c de 22 f0       	mov    0xf022de8c,%eax$/;"	l
f01043d3	obj/kern/kernel.asm	/^f01043d3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	77 12                	ja     f01043ec <sched_halt+0x84>$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	50                   	push   %eax$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	68 c8 64 10 f0       	push   $0xf01064c8$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	6a 4d                	push   $0x4d$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	68 79 7b 10 f0       	push   $0xf0107b79$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	e8 54 bc ff ff       	call   f0100040 <_panic>$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	e8 f1 19 00 00       	call   f0105dea <cpunum>$/;"	l
f01043f9	obj/kern/kernel.asm	/^f01043f9:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	81 c2 20 e0 23 f0    	add    $0xf023e020,%edx$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	68 c0 23 12 f0       	push   $0xf01223c0$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	e8 dd 1c 00 00       	call   f01060f5 <spin_unlock>$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	f3 90                	pause  $/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	e8 cb 19 00 00       	call   f0105dea <cpunum>$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	8b 80 30 e0 23 f0    	mov    -0xfdc1fd0(%eax),%eax$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	89 c4                	mov    %eax,%esp$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	6a 00                	push   $0x0$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	6a 00                	push   $0x0$/;"	l
f0104433	obj/kern/kernel.asm	/^f0104433:	fb                   	sti    $/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	f4                   	hlt    $/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	eb fd                	jmp    f0104434 <sched_halt+0xcc>$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	83 c4 10             	add    $0x10,%esp$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	c9                   	leave  $/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	c3                   	ret    $/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c <sched_yield>:$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	55                   	push   %ebp$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	89 e5                	mov    %esp,%ebp$/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	53                   	push   %ebx$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	e8 a2 19 00 00       	call   f0105dea <cpunum>$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	83 b8 28 e0 23 f0 00 	cmpl   $0x0,-0xfdc1fd8(%eax)$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	75 2c                	jne    f0104480 <sched_yield+0x44>$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	83 3d b4 23 12 f0 ff 	cmpl   $0xffffffff,0xf01223b4$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	75 23                	jne    f0104480 <sched_yield+0x44>$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	e8 88 19 00 00       	call   f0105dea <cpunum>$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	a3 b4 23 12 f0       	mov    %eax,0xf01223b4$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	8b 1d 48 d2 22 f0    	mov    0xf022d248,%ebx$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	e8 78 19 00 00       	call   f0105dea <cpunum>$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	01 d8                	add    %ebx,%eax$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	50                   	push   %eax$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	e8 f5 ef ff ff       	call   f0103475 <env_run>$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	8b 0d b4 23 12 f0    	mov    0xf01223b4,%ecx$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	8d 41 01             	lea    0x1(%ecx),%eax$/;"	l
f0104489	obj/kern/kernel.asm	/^f0104489:	8b 1d 48 d2 22 f0    	mov    0xf022d248,%ebx$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	eb 2a                	jmp    f01044bb <sched_yield+0x7f>$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	8d 90 00 fc ff ff    	lea    -0x400(%eax),%edx$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f010449c	obj/kern/kernel.asm	/^f010449c:	0f 4d c2             	cmovge %edx,%eax$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	6b d0 7c             	imul   $0x7c,%eax,%edx$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	01 da                	add    %ebx,%edx$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	83 7a 54 02          	cmpl   $0x2,0x54(%edx)$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	75 0e                	jne    f01044b8 <sched_yield+0x7c>$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	a3 b4 23 12 f0       	mov    %eax,0xf01223b4$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	52                   	push   %edx$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	e8 bd ef ff ff       	call   f0103475 <env_run>$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	39 c8                	cmp    %ecx,%eax$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	75 d2                	jne    f0104491 <sched_yield+0x55>$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	e8 a4 fe ff ff       	call   f0104368 <sched_halt>$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	c9                   	leave  $/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	c3                   	ret    $/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9 <syscall>:$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	55                   	push   %ebp$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	53                   	push   %ebx$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	0f 87 ef 00 00 00    	ja     f01045cb <syscall+0x102>$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	ff 24 85 c0 7b 10 f0 	jmp    *-0xfef8440(,%eax,4)$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	e8 02 19 00 00       	call   f0105dea <cpunum>$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	6a 00                	push   $0x0$/;"	l
f01044ea	obj/kern/kernel.asm	/^f01044ea:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	ff b0 28 e0 23 f0    	pushl  -0xfdc1fd8(%eax)$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	e8 82 e8 ff ff       	call   f0102d80 <user_mem_assert>$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	68 86 7b 10 f0       	push   $0xf0107b86$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	e8 b5 f1 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	e9 b2 00 00 00       	jmp    f01045d0 <syscall+0x107>$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	e8 d1 c0 ff ff       	call   f01005f4 <cons_getc>$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	e9 a8 00 00 00       	jmp    f01045d0 <syscall+0x107>$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	e8 bd 18 00 00       	call   f0105dea <cpunum>$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	e9 92 00 00 00       	jmp    f01045d0 <syscall+0x107>$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	6a 01                	push   $0x1$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	50                   	push   %eax$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	e8 fd e8 ff ff       	call   f0102e4c <envid2env>$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104552	obj/kern/kernel.asm	/^f0104552:	85 c0                	test   %eax,%eax$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	78 7a                	js     f01045d0 <syscall+0x107>$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	e8 8f 18 00 00       	call   f0105dea <cpunum>$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	39 90 28 e0 23 f0    	cmp    %edx,-0xfdc1fd8(%eax)$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	75 23                	jne    f010458c <syscall+0xc3>$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	e8 7c 18 00 00       	call   f0105dea <cpunum>$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010457d	obj/kern/kernel.asm	/^f010457d:	68 8b 7b 10 f0       	push   $0xf0107b8b$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	e8 3f f1 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	83 c4 10             	add    $0x10,%esp$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	eb 25                	jmp    f01045b1 <syscall+0xe8>$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	e8 56 18 00 00       	call   f0105dea <cpunum>$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	53                   	push   %ebx$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	8b 80 28 e0 23 f0    	mov    -0xfdc1fd8(%eax),%eax$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	68 a6 7b 10 f0       	push   $0xf0107ba6$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	e8 18 f1 ff ff       	call   f01036c6 <cprintf>$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	e8 1a ee ff ff       	call   f01033d6 <env_destroy>$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	eb 0a                	jmp    f01045d0 <syscall+0x107>$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	e8 71 fe ff ff       	call   f010443c <sched_yield>$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	c9                   	leave  $/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	c3                   	ret    $/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5 <stab_binsearch>:$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	55                   	push   %ebp$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	57                   	push   %edi$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	56                   	push   %esi$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	53                   	push   %ebx$/;"	l
f01045db	obj/kern/kernel.asm	/^f01045db:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	8b 01                	mov    (%ecx),%eax$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	eb 7f                	jmp    f0104679 <stab_binsearch+0xa4>$/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	01 d8                	add    %ebx,%eax$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	89 c6                	mov    %eax,%esi$/;"	l
f0104601	obj/kern/kernel.asm	/^f0104601:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	01 c6                	add    %eax,%esi$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	d1 fe                	sar    %esi$/;"	d
f0104608	obj/kern/kernel.asm	/^f0104608:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	89 f0                	mov    %esi,%eax$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	eb 03                	jmp    f0104618 <stab_binsearch+0x43>$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	39 c3                	cmp    %eax,%ebx$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	7f 0d                	jg     f0104629 <stab_binsearch+0x54>$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	39 f9                	cmp    %edi,%ecx$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	75 ee                	jne    f0104615 <stab_binsearch+0x40>$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	eb 05                	jmp    f010462e <stab_binsearch+0x59>$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	eb 4b                	jmp    f0104679 <stab_binsearch+0xa4>$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	76 11                	jbe    f010464e <stab_binsearch+0x79>$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	eb 2b                	jmp    f0104679 <stab_binsearch+0xa4>$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	73 14                	jae    f0104667 <stab_binsearch+0x92>$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	89 06                	mov    %eax,(%esi)$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	eb 12                	jmp    f0104679 <stab_binsearch+0xa4>$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	89 06                	mov    %eax,(%esi)$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	89 c3                	mov    %eax,%ebx$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	0f 8e 78 ff ff ff    	jle    f01045fa <stab_binsearch+0x25>$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	75 0f                	jne    f0104697 <stab_binsearch+0xc2>$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	8b 00                	mov    (%eax),%eax$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	89 06                	mov    %eax,(%esi)$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	eb 2c                	jmp    f01046c3 <stab_binsearch+0xee>$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	8b 00                	mov    (%eax),%eax$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	8b 0e                	mov    (%esi),%ecx$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	eb 03                	jmp    f01046af <stab_binsearch+0xda>$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	39 c8                	cmp    %ecx,%eax$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	7e 0b                	jle    f01046be <stab_binsearch+0xe9>$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	39 df                	cmp    %ebx,%edi$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	75 ee                	jne    f01046ac <stab_binsearch+0xd7>$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	89 06                	mov    %eax,(%esi)$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	83 c4 14             	add    $0x14,%esp$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	5b                   	pop    %ebx$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	5e                   	pop    %esi$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	5f                   	pop    %edi$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	5d                   	pop    %ebp$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	c3                   	ret    $/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb <debuginfo_eip>:$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	55                   	push   %ebp$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	57                   	push   %edi$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	56                   	push   %esi$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	53                   	push   %ebx$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01046d4	obj/kern/kernel.asm	/^f01046d4:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	c7 06 ec 7b 10 f0    	movl   $0xf0107bec,(%esi)$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	c7 46 08 ec 7b 10 f0 	movl   $0xf0107bec,0x8(%esi)$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f01046ff	obj/kern/kernel.asm	/^f01046ff:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	77 3c                	ja     f0104743 <debuginfo_eip+0x78>$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	e8 de 16 00 00       	call   f0105dea <cpunum>$/;"	l
f010470c	obj/kern/kernel.asm	/^f010470c:	6a 00                	push   $0x0$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	6a 01                	push   $0x1$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	57                   	push   %edi$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	ff b0 28 e0 23 f0    	pushl  -0xfdc1fd8(%eax)$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	e8 61 e6 ff ff       	call   f0102d80 <user_mem_assert>$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	8b 0d 08 00 20 00    	mov    0x200008,%ecx$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	8b 0d 0c 00 20 00    	mov    0x20000c,%ecx$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	eb 1a                	jmp    f010475d <debuginfo_eip+0x92>$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	c7 45 d0 34 7e 11 f0 	movl   $0xf0117e34,-0x30(%ebp)$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	c7 45 cc 29 45 11 f0 	movl   $0xf0114529,-0x34(%ebp)$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	b8 28 45 11 f0       	mov    $0xf0114528,%eax$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	c7 45 d4 18 9b 10 f0 	movl   $0xf0109b18,-0x2c(%ebp)$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	39 4d cc             	cmp    %ecx,-0x34(%ebp)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	0f 83 31 01 00 00    	jae    f010489a <debuginfo_eip+0x1cf>$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	80 79 ff 00          	cmpb   $0x0,-0x1(%ecx)$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	0f 85 2e 01 00 00    	jne    f01048a1 <debuginfo_eip+0x1d6>$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	29 d8                	sub    %ebx,%eax$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	57                   	push   %edi$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	6a 64                	push   $0x64$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	89 c1                	mov    %eax,%ecx$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	89 d8                	mov    %ebx,%eax$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	e8 32 fe ff ff       	call   f01045d5 <stab_binsearch>$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	85 c0                	test   %eax,%eax$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	0f 84 f7 00 00 00    	je     f01048a8 <debuginfo_eip+0x1dd>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	57                   	push   %edi$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	6a 24                	push   $0x24$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f01047c3	obj/kern/kernel.asm	/^f01047c3:	89 c1                	mov    %eax,%ecx$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	89 d8                	mov    %ebx,%eax$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	e8 03 fe ff ff       	call   f01045d5 <stab_binsearch>$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	3b 5d d8             	cmp    -0x28(%ebp),%ebx$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	7f 24                	jg     f0104801 <debuginfo_eip+0x136>$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	8b 02                	mov    (%edx),%eax$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	29 f9                	sub    %edi,%ecx$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	39 c8                	cmp    %ecx,%eax$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	73 05                	jae    f01047f9 <debuginfo_eip+0x12e>$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	01 f8                	add    %edi,%eax$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f01047ff	obj/kern/kernel.asm	/^f01047ff:	eb 06                	jmp    f0104807 <debuginfo_eip+0x13c>$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	6a 3a                	push   $0x3a$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	e8 9a 0f 00 00       	call   f01057ae <strfind>$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	eb 06                	jmp    f0104831 <debuginfo_eip+0x166>$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	7c 2d                	jl     f0104862 <debuginfo_eip+0x197>$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
f0104839	obj/kern/kernel.asm	/^f0104839:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	74 0b                	je     f0104849 <debuginfo_eip+0x17e>$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	75 e8                	jne    f010482b <debuginfo_eip+0x160>$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	83 78 08 00          	cmpl   $0x0,0x8(%eax)$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	74 e2                	je     f010482b <debuginfo_eip+0x160>$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	29 f8                	sub    %edi,%eax$/;"	l
f010485a	obj/kern/kernel.asm	/^f010485a:	39 c2                	cmp    %eax,%edx$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	73 04                	jae    f0104862 <debuginfo_eip+0x197>$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	01 fa                	add    %edi,%edx$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	89 16                	mov    %edx,(%esi)$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	39 cb                	cmp    %ecx,%ebx$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	7d 43                	jge    f01048b4 <debuginfo_eip+0x1e9>$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0104874	obj/kern/kernel.asm	/^f0104874:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	eb 07                	jmp    f0104886 <debuginfo_eip+0x1bb>$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	74 25                	je     f01048af <debuginfo_eip+0x1e4>$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	83 c0 0c             	add    $0xc,%eax$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	80 78 04 a0          	cmpb   $0xa0,0x4(%eax)$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	74 ec                	je     f010487f <debuginfo_eip+0x1b4>$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	eb 1a                	jmp    f01048b4 <debuginfo_eip+0x1e9>$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	eb 13                	jmp    f01048b4 <debuginfo_eip+0x1e9>$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	eb 0c                	jmp    f01048b4 <debuginfo_eip+0x1e9>$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01048ad	obj/kern/kernel.asm	/^f01048ad:	eb 05                	jmp    f01048b4 <debuginfo_eip+0x1e9>$/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	5b                   	pop    %ebx$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	5e                   	pop    %esi$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	5f                   	pop    %edi$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	5d                   	pop    %ebp$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	c3                   	ret    $/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc <draw_tux>:$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	55                   	push   %ebp$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	57                   	push   %edi$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	56                   	push   %esi$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	53                   	push   %ebx$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	68 f6 7b 10 f0       	push   $0xf0107bf6$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	e8 f7 ed ff ff       	call   f01036c6 <cprintf>$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	e8 b1 01 00 00       	call   f0104a85 <prepare_buffer>$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	c7 04 24 12 7c 10 f0 	movl   $0xf0107c12,(%esp)$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	e8 e6 ed ff ff       	call   f01036c6 <cprintf>$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048e3	obj/kern/kernel.asm	/^f01048e3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	e8 7f be ff ff       	call   f0100773 <getchar>$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	75 09                	jne    f0104902 <draw_tux+0x46>$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	85 db                	test   %ebx,%ebx$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	7e 05                	jle    f0104902 <draw_tux+0x46>$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	eb 36                	jmp    f0104938 <draw_tux+0x7c>$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	75 10                	jne    f0104917 <draw_tux+0x5b>$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	83 fe 26             	cmp    $0x26,%esi$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	7f 08                	jg     f0104917 <draw_tux+0x5b>$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	eb 21                	jmp    f0104938 <draw_tux+0x7c>$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	75 0a                	jne    f0104926 <draw_tux+0x6a>$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	83 fb 5d             	cmp    $0x5d,%ebx$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	7f 05                	jg     f0104926 <draw_tux+0x6a>$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	eb 12                	jmp    f0104938 <draw_tux+0x7c>$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	75 c4                	jne    f01048ef <draw_tux+0x33>$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	85 c0                	test   %eax,%eax$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	7e bd                	jle    f01048ef <draw_tux+0x33>$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	e8 48 01 00 00       	call   f0104a85 <prepare_buffer>$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	eb 69                	jmp    f01049b8 <draw_tux+0xfc>$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	f7 e9                	imul   %ecx$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	d1 fa                	sar    %edx$/;"	d
f0104958	obj/kern/kernel.asm	/^f0104958:	89 c8                	mov    %ecx,%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	29 c2                	sub    %eax,%edx$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	03 55 e0             	add    -0x20(%ebp),%edx$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	8b 3c 95 a0 7c 10 f0 	mov    -0xfef8360(,%edx,4),%edi$/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	8d 04 19             	lea    (%ecx,%ebx,1),%eax$/;"	l
f010496c	obj/kern/kernel.asm	/^f010496c:	3d 3f 01 00 00       	cmp    $0x13f,%eax$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	77 09                	ja     f010497c <draw_tux+0xc0>$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	81 7d e4 c7 00 00 00 	cmpl   $0xc7,-0x1c(%ebp)$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	76 16                	jbe    f0104992 <draw_tux+0xd6>$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	68 64 7c 10 f0       	push   $0xf0107c64$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	6a 12                	push   $0x12$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	68 27 7c 10 f0       	push   $0xf0107c27$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	e8 ae b6 ff ff       	call   f0100040 <_panic>$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	89 f8                	mov    %edi,%eax$/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994:	88 84 0e a0 de 22 f0 	mov    %al,-0xfdd2160(%esi,%ecx,1)$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	81 f9 e1 00 00 00    	cmp    $0xe1,%ecx$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	75 a9                	jne    f010494f <draw_tux+0x93>$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	3d a0 00 00 00       	cmp    $0xa0,%eax$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	74 2d                	je     f01049e5 <draw_tux+0x129>$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	f7 ee                	imul   %esi$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	d1 fa                	sar    %edx$/;"	d
f01049c4	obj/kern/kernel.asm	/^f01049c4:	89 f0                	mov    %esi,%eax$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	29 c2                	sub    %eax,%edx$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	6b c2 2d             	imul   $0x2d,%edx,%eax$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	69 75 e4 40 01 00 00 	imul   $0x140,-0x1c(%ebp),%esi$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	03 75 d8             	add    -0x28(%ebp),%esi$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	e9 6a ff ff ff       	jmp    f010494f <draw_tux+0x93>$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	68 36 7c 10 f0       	push   $0xf0107c36$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	e8 d4 ec ff ff       	call   f01036c6 <cprintf>$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	e8 aa 00 00 00       	call   f0104aa1 <display_buffer>$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	c7 04 24 52 7c 10 f0 	movl   $0xf0107c52,(%esp)$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	e8 c3 ec ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	e9 e4 fe ff ff       	jmp    f01048ef <draw_tux+0x33>$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b <draw_color>:$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	55                   	push   %ebp$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	56                   	push   %esi$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	53                   	push   %ebx$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	e8 70 00 00 00       	call   f0104a85 <prepare_buffer>$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	e8 59 bd ff ff       	call   f0100773 <getchar>$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	74 f6                	je     f0104a15 <draw_color+0xa>$/;"	l
f0104a1f	obj/kern/kernel.asm	/^f0104a1f:	eb 4b                	jmp    f0104a6c <draw_color+0x61>$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	3d c7 00 00 00       	cmp    $0xc7,%eax$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	77 08                	ja     f0104a30 <draw_color+0x25>$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	81 f9 3f 01 00 00    	cmp    $0x13f,%ecx$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	76 16                	jbe    f0104a46 <draw_color+0x3b>$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	68 64 7c 10 f0       	push   $0xf0107c64$/;"	l
f0104a35	obj/kern/kernel.asm	/^f0104a35:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	6a 12                	push   $0x12$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	68 27 7c 10 f0       	push   $0xf0107c27$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	e8 fa b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	89 c2                	mov    %eax,%edx$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	c1 e2 08             	shl    $0x8,%edx$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	89 c3                	mov    %eax,%ebx$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	c1 e3 06             	shl    $0x6,%ebx$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	01 f2                	add    %esi,%edx$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	88 0c 1a             	mov    %cl,(%edx,%ebx,1)$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	3d a0 00 00 00       	cmp    $0xa0,%eax$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	75 c2                	jne    f0104a21 <draw_color+0x16>$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	81 f9 00 01 00 00    	cmp    $0x100,%ecx$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	75 07                	jne    f0104a71 <draw_color+0x66>$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	eb 12                	jmp    f0104a7e <draw_color+0x73>$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104a71	obj/kern/kernel.asm	/^f0104a71:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	8d b1 a0 de 22 f0    	lea    -0xfdd2160(%ecx),%esi$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	eb a3                	jmp    f0104a21 <draw_color+0x16>$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	e8 1e 00 00 00       	call   f0104aa1 <display_buffer>$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	eb 90                	jmp    f0104a15 <draw_color+0xa>$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85 <prepare_buffer>:$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	55                   	push   %ebp$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	68 00 fa 00 00       	push   $0xfa00$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	6a 00                	push   $0x0$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	68 a0 de 22 f0       	push   $0xf022dea0$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	e8 2e 0d 00 00       	call   f01057ca <memset>$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	c9                   	leave  $/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	c3                   	ret    $/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1 <display_buffer>:$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	55                   	push   %ebp$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	89 e5                	mov    %esp,%ebp$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	c7 05 b8 23 12 f0 00 	movl   $0xf00a0000,0xf01223b8$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	00 0a f0 $/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	68 00 fa 00 00       	push   $0xfa00$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	68 a0 de 22 f0       	push   $0xf022dea0$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	68 00 00 0a f0       	push   $0xf00a0000$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	e8 52 0d 00 00       	call   f0105817 <memmove>$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	c9                   	leave  $/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	c3                   	ret    $/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca <draw_square>:$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	55                   	push   %ebp$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	89 e5                	mov    %esp,%ebp$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	57                   	push   %edi$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	56                   	push   %esi$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	53                   	push   %ebx$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104ad3	obj/kern/kernel.asm	/^f0104ad3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	85 c0                	test   %eax,%eax$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	78 10                	js     f0104aed <draw_square+0x23>$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	89 d6                	mov    %edx,%esi$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	8d 3c 02             	lea    (%edx,%eax,1),%edi$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	03 45 0c             	add    0xc(%ebp),%eax$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104aeb	obj/kern/kernel.asm	/^f0104aeb:	eb 5f                	jmp    f0104b4c <draw_square+0x82>$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	68 20 93 10 f0       	push   $0xf0109320$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	6a 14                	push   $0x14$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	68 29 93 10 f0       	push   $0xf0109329$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	e8 3d b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	89 c2                	mov    %eax,%edx$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	3d c7 00 00 00       	cmp    $0xc7,%eax$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	0f 97 c3             	seta   %bl$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	81 fe 3f 01 00 00    	cmp    $0x13f,%esi$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	0f 97 c1             	seta   %cl$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	08 cb                	or     %cl,%bl$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	74 16                	je     f0104b33 <draw_square+0x69>$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	68 64 7c 10 f0       	push   $0xf0107c64$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	6a 12                	push   $0x12$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	68 27 7c 10 f0       	push   $0xf0107c27$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	e8 0d b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	89 d1                	mov    %edx,%ecx$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	01 f9                	add    %edi,%ecx$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	0f b6 5d 10          	movzbl 0x10(%ebp),%ebx$/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	88 1c 11             	mov    %bl,(%ecx,%edx,1)$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	75 ba                	jne    f0104b03 <draw_square+0x39>$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	83 c6 01             	add    $0x1,%esi$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	3b 75 e0             	cmp    -0x20(%ebp),%esi$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	74 0b                	je     f0104b5c <draw_square+0x92>$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	8d be a0 de 22 f0    	lea    -0xfdd2160(%esi),%edi$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	eb e8                	jmp    f0104b44 <draw_square+0x7a>$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	5b                   	pop    %ebx$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	5e                   	pop    %esi$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	5f                   	pop    %edi$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	5d                   	pop    %ebp$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	c3                   	ret    $/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64 <protag_infrontof_box>:$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	55                   	push   %ebp$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	53                   	push   %ebx$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	03 05 b8 d8 23 f0    	add    0xf023d8b8,%eax$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	89 c1                	mov    %eax,%ecx$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	39 05 a0 d8 23 f0    	cmp    %eax,0xf023d8a0$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	75 10                	jne    f0104b88 <protag_infrontof_box+0x24>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	89 d0                	mov    %edx,%eax$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	03 05 bc d8 23 f0    	add    0xf023d8bc,%eax$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	39 05 a4 d8 23 f0    	cmp    %eax,0xf023d8a4$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	74 41                	je     f0104bc9 <protag_infrontof_box+0x65>$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	3b 0d a8 d8 23 f0    	cmp    0xf023d8a8,%ecx$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	75 15                	jne    f0104ba5 <protag_infrontof_box+0x41>$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	89 d3                	mov    %edx,%ebx$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	03 1d bc d8 23 f0    	add    0xf023d8bc,%ebx$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	39 1d ac d8 23 f0    	cmp    %ebx,0xf023d8ac$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	74 29                	je     f0104bce <protag_infrontof_box+0x6a>$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	3b 0d b0 d8 23 f0    	cmp    0xf023d8b0,%ecx$/;"	l
f0104bb0	obj/kern/kernel.asm	/^f0104bb0:	75 1c                	jne    f0104bce <protag_infrontof_box+0x6a>$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	03 15 bc d8 23 f0    	add    0xf023d8bc,%edx$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	39 15 b4 d8 23 f0    	cmp    %edx,0xf023d8b4$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	0f 94 c0             	sete   %al$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	eb 05                	jmp    f0104bce <protag_infrontof_box+0x6a>$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	5b                   	pop    %ebx$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	5d                   	pop    %ebp$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	c3                   	ret    $/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1 <protag_move>:$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	55                   	push   %ebp$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	57                   	push   %edi$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	56                   	push   %esi$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	53                   	push   %ebx$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	89 c6                	mov    %eax,%esi$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	89 d3                	mov    %edx,%ebx$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	89 d7                	mov    %edx,%edi$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	03 3d bc d8 23 f0    	add    0xf023d8bc,%edi$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	03 05 b8 d8 23 f0    	add    0xf023d8b8,%eax$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	89 c1                	mov    %eax,%ecx$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	8d 04 ff             	lea    (%edi,%edi,8),%eax$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	01 c8                	add    %ecx,%eax$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	83 3c 85 80 93 10 f0 	cmpl   $0x1,-0xfef6c80(,%eax,4)$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	01 $/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	75 15                	jne    f0104c18 <protag_move+0x47>$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	68 36 93 10 f0       	push   $0xf0109336$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	e8 b6 ea ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	e9 1c 01 00 00       	jmp    f0104d34 <protag_move+0x163>$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	89 da                	mov    %ebx,%edx$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	89 f0                	mov    %esi,%eax$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	e8 43 ff ff ff       	call   f0104b64 <protag_infrontof_box>$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	85 c0                	test   %eax,%eax$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	0f 84 e0 00 00 00    	je     f0104d0c <protag_move+0x13b>$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	89 d9                	mov    %ebx,%ecx$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	03 0c d5 a4 d8 23 f0 	add    -0xfdc275c(,%edx,8),%ecx$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	89 f0                	mov    %esi,%eax$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	03 04 d5 a0 d8 23 f0 	add    -0xfdc2760(,%edx,8),%eax$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	8d 3c c9             	lea    (%ecx,%ecx,8),%edi$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	01 c7                	add    %eax,%edi$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	83 3c bd 80 93 10 f0 	cmpl   $0x1,-0xfef6c80(,%edi,4)$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	01 $/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	75 15                	jne    f0104c65 <protag_move+0x94>$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	68 40 93 10 f0       	push   $0xf0109340$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	e8 69 ea ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	e9 cf 00 00 00       	jmp    f0104d34 <protag_move+0x163>$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	85 d2                	test   %edx,%edx$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	74 3a                	je     f0104ca3 <protag_move+0xd2>$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	3b 05 a8 d8 23 f0    	cmp    0xf023d8a8,%eax$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	75 08                	jne    f0104c79 <protag_move+0xa8>$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	3b 0d ac d8 23 f0    	cmp    0xf023d8ac,%ecx$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	74 10                	je     f0104c89 <protag_move+0xb8>$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	3b 05 b0 d8 23 f0    	cmp    0xf023d8b0,%eax$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	75 1d                	jne    f0104c9e <protag_move+0xcd>$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	3b 0d b4 d8 23 f0    	cmp    0xf023d8b4,%ecx$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	75 15                	jne    f0104c9e <protag_move+0xcd>$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104c8c	obj/kern/kernel.asm	/^f0104c8c:	68 4a 93 10 f0       	push   $0xf010934a$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	e8 30 ea ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	e9 96 00 00 00       	jmp    f0104d34 <protag_move+0x163>$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	74 37                	je     f0104cda <protag_move+0x109>$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	3b 05 a0 d8 23 f0    	cmp    0xf023d8a0,%eax$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	75 08                	jne    f0104cb3 <protag_move+0xe2>$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	3b 0d a4 d8 23 f0    	cmp    0xf023d8a4,%ecx$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	74 10                	je     f0104cc3 <protag_move+0xf2>$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	3b 05 b0 d8 23 f0    	cmp    0xf023d8b0,%eax$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	75 1a                	jne    f0104cd5 <protag_move+0x104>$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	3b 0d b4 d8 23 f0    	cmp    0xf023d8b4,%ecx$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	75 12                	jne    f0104cd5 <protag_move+0x104>$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	68 54 93 10 f0       	push   $0xf0109354$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	e8 f6 e9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	eb 5f                	jmp    f0104d34 <protag_move+0x163>$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	83 fa 02             	cmp    $0x2,%edx$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	74 44                	je     f0104d1e <protag_move+0x14d>$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	3b 05 a0 d8 23 f0    	cmp    0xf023d8a0,%eax$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	75 08                	jne    f0104cea <protag_move+0x119>$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	3b 0d a4 d8 23 f0    	cmp    0xf023d8a4,%ecx$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	74 10                	je     f0104cfa <protag_move+0x129>$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	3b 05 a8 d8 23 f0    	cmp    0xf023d8a8,%eax$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	75 2c                	jne    f0104d1e <protag_move+0x14d>$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	3b 0d ac d8 23 f0    	cmp    0xf023d8ac,%ecx$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	75 24                	jne    f0104d1e <protag_move+0x14d>$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	68 5e 93 10 f0       	push   $0xf010935e$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	e8 bf e9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	eb 28                	jmp    f0104d34 <protag_move+0x163>$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	a3 b8 d8 23 f0       	mov    %eax,0xf023d8b8$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	a3 bc d8 23 f0       	mov    %eax,0xf023d8bc$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	eb 16                	jmp    f0104d34 <protag_move+0x163>$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	01 34 c5 a0 d8 23 f0 	add    %esi,-0xfdc2760(,%eax,8)$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	01 1c c5 a4 d8 23 f0 	add    %ebx,-0xfdc275c(,%eax,8)$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	eb d8                	jmp    f0104d0c <protag_move+0x13b>$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	5b                   	pop    %ebx$/;"	l
f0104d38	obj/kern/kernel.asm	/^f0104d38:	5e                   	pop    %esi$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	5f                   	pop    %edi$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	5d                   	pop    %ebp$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	c3                   	ret    $/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c <game_loop>:$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	55                   	push   %ebp$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	c7 05 b8 d8 23 f0 03 	movl   $0x3,0xf023d8b8$/;"	l
f0104d49	obj/kern/kernel.asm	/^f0104d49:	00 00 00 $/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	c7 05 bc d8 23 f0 01 	movl   $0x1,0xf023d8bc$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	00 00 00 $/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	c7 05 a0 d8 23 f0 03 	movl   $0x3,0xf023d8a0$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	00 00 00 $/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	c7 05 a4 d8 23 f0 02 	movl   $0x2,0xf023d8a4$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	00 00 00 $/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	c7 05 a8 d8 23 f0 02 	movl   $0x2,0xf023d8a8$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	00 00 00 $/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	c7 05 ac d8 23 f0 02 	movl   $0x2,0xf023d8ac$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	00 00 00 $/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	c7 05 b0 d8 23 f0 02 	movl   $0x2,0xf023d8b0$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	00 00 00 $/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	c7 05 b4 d8 23 f0 03 	movl   $0x3,0xf023d8b4$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f:	00 00 00 $/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	e8 ca 00 00 00       	call   f0104e61 <game_display>$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	e8 d7 b9 ff ff       	call   f0100773 <getchar>$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	75 11                	jne    f0104db2 <game_loop+0x76>$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	e8 21 fe ff ff       	call   f0104bd1 <protag_move>$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	eb 4c                	jmp    f0104dfe <game_loop+0xc2>$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	75 11                	jne    f0104dc8 <game_loop+0x8c>$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	e8 0b fe ff ff       	call   f0104bd1 <protag_move>$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	eb 36                	jmp    f0104dfe <game_loop+0xc2>$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	75 11                	jne    f0104dde <game_loop+0xa2>$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	e8 f5 fd ff ff       	call   f0104bd1 <protag_move>$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	eb 20                	jmp    f0104dfe <game_loop+0xc2>$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	75 11                	jne    f0104df4 <game_loop+0xb8>$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	e8 df fd ff ff       	call   f0104bd1 <protag_move>$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	eb 0a                	jmp    f0104dfe <game_loop+0xc2>$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	83 f8 72             	cmp    $0x72,%eax$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	75 9e                	jne    f0104d97 <game_loop+0x5b>$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	e9 44 ff ff ff       	jmp    f0104d42 <game_loop+0x6>$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	e8 5e 00 00 00       	call   f0104e61 <game_display>$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	a1 a4 d8 23 f0       	mov    0xf023d8a4,%eax$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	03 05 a0 d8 23 f0    	add    0xf023d8a0,%eax$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	83 3c 85 80 93 10 f0 	cmpl   $0x2,-0xfef6c80(,%eax,4)$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	02 $/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	0f 85 78 ff ff ff    	jne    f0104d97 <game_loop+0x5b>$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	a1 ac d8 23 f0       	mov    0xf023d8ac,%eax$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	03 05 a8 d8 23 f0    	add    0xf023d8a8,%eax$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	83 3c 85 80 93 10 f0 	cmpl   $0x2,-0xfef6c80(,%eax,4)$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	02 $/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	0f 85 5c ff ff ff    	jne    f0104d97 <game_loop+0x5b>$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	a1 b4 d8 23 f0       	mov    0xf023d8b4,%eax$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	03 05 b0 d8 23 f0    	add    0xf023d8b0,%eax$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	83 3c 85 80 93 10 f0 	cmpl   $0x2,-0xfef6c80(,%eax,4)$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	02 $/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	0f 85 40 ff ff ff    	jne    f0104d97 <game_loop+0x5b>$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	e8 60 fa ff ff       	call   f01048bc <draw_tux>$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	e9 36 ff ff ff       	jmp    f0104d97 <game_loop+0x5b>$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61 <game_display>:$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	55                   	push   %ebp$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	57                   	push   %edi$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	56                   	push   %esi$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	53                   	push   %ebx$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	68 c4 94 10 f0       	push   $0xf01094c4$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	e8 52 e8 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	c7 45 e0 00 95 10 f0 	movl   $0xf0109500,-0x20(%ebp)$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	e9 8b 00 00 00       	jmp    f0104f15 <game_display+0xb4>$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	8b 06                	mov    (%esi),%eax$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	85 c0                	test   %eax,%eax$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	75 10                	jne    f0104ea0 <game_display+0x3f>$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	6a 14                	push   $0x14$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	6a 09                	push   $0x9$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	57                   	push   %edi$/;"	l
f0104e95	obj/kern/kernel.asm	/^f0104e95:	53                   	push   %ebx$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	e8 2f fc ff ff       	call   f0104aca <draw_square>$/;"	l
f0104e9b	obj/kern/kernel.asm	/^f0104e9b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	eb 55                	jmp    f0104ef5 <game_display+0x94>$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	75 10                	jne    f0104eb5 <game_display+0x54>$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	6a 14                	push   $0x14$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	6a 14                	push   $0x14$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	57                   	push   %edi$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	53                   	push   %ebx$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	e8 1a fc ff ff       	call   f0104aca <draw_square>$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	eb 40                	jmp    f0104ef5 <game_display+0x94>$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	75 10                	jne    f0104eca <game_display+0x69>$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	6a 14                	push   $0x14$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	6a 06                	push   $0x6$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	57                   	push   %edi$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	53                   	push   %ebx$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	e8 05 fc ff ff       	call   f0104aca <draw_square>$/;"	l
f0104ec5	obj/kern/kernel.asm	/^f0104ec5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	eb 2b                	jmp    f0104ef5 <game_display+0x94>$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	75 10                	jne    f0104edf <game_display+0x7e>$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	6a 14                	push   $0x14$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	6a 00                	push   $0x0$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	57                   	push   %edi$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	53                   	push   %ebx$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	e8 f0 fb ff ff       	call   f0104aca <draw_square>$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	eb 16                	jmp    f0104ef5 <game_display+0x94>$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	68 fa 69 10 f0       	push   $0xf01069fa$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	68 c2 69 10 f0       	push   $0xf01069c2$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	6a 1a                	push   $0x1a$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	68 d5 94 10 f0       	push   $0xf01094d5$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	e8 4b b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	83 c6 04             	add    $0x4,%esi$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	83 c3 14             	add    $0x14,%ebx$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	81 fb b4 00 00 00    	cmp    $0xb4,%ebx$/;"	l
f0104f01	obj/kern/kernel.asm	/^f0104f01:	75 87                	jne    f0104e8a <game_display+0x29>$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	83 45 e4 14          	addl   $0x14,-0x1c(%ebp)$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	83 45 e0 24          	addl   $0x24,-0x20(%ebp)$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	3d b4 00 00 00       	cmp    $0xb4,%eax$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	74 10                	je     f0104f25 <game_display+0xc4>$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	e9 65 ff ff ff       	jmp    f0104e8a <game_display+0x29>$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	6a 14                	push   $0x14$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	6a 0e                	push   $0xe$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	a1 bc d8 23 f0       	mov    0xf023d8bc,%eax$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	50                   	push   %eax$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	a1 b8 d8 23 f0       	mov    0xf023d8b8,%eax$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	50                   	push   %eax$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	e8 84 fb ff ff       	call   f0104aca <draw_square>$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	6a 14                	push   $0x14$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	6a 0d                	push   $0xd$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	a1 a4 d8 23 f0       	mov    0xf023d8a4,%eax$/;"	l
f0104f4f	obj/kern/kernel.asm	/^f0104f4f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	50                   	push   %eax$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	a1 a0 d8 23 f0       	mov    0xf023d8a0,%eax$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	50                   	push   %eax$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	e8 63 fb ff ff       	call   f0104aca <draw_square>$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	6a 14                	push   $0x14$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	6a 0d                	push   $0xd$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	a1 ac d8 23 f0       	mov    0xf023d8ac,%eax$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	50                   	push   %eax$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	a1 a8 d8 23 f0       	mov    0xf023d8a8,%eax$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	50                   	push   %eax$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	e8 3f fb ff ff       	call   f0104aca <draw_square>$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	6a 14                	push   $0x14$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	6a 0d                	push   $0xd$/;"	l
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	a1 b4 d8 23 f0       	mov    0xf023d8b4,%eax$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	50                   	push   %eax$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	a1 b0 d8 23 f0       	mov    0xf023d8b0,%eax$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	50                   	push   %eax$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	e8 1e fb ff ff       	call   f0104aca <draw_square>$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	e8 ed fa ff ff       	call   f0104aa1 <display_buffer>$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	5b                   	pop    %ebx$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	5e                   	pop    %esi$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	5f                   	pop    %edi$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	5d                   	pop    %ebp$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	c3                   	ret    $/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc <printnum>:$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	55                   	push   %ebp$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	89 e5                	mov    %esp,%ebp$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	57                   	push   %edi$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	56                   	push   %esi$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	53                   	push   %ebx$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	89 c7                	mov    %eax,%edi$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	89 d6                	mov    %edx,%esi$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	72 05                	jb     f0104fec <printnum+0x30>$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	77 45                	ja     f0105031 <printnum+0x75>$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	53                   	push   %ebx$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	e8 e0 11 00 00       	call   f01061f0 <__udivdi3>$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	52                   	push   %edx$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	50                   	push   %eax$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	89 f2                	mov    %esi,%edx$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	89 f8                	mov    %edi,%eax$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	e8 9e ff ff ff       	call   f0104fbc <printnum>$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	eb 18                	jmp    f010503b <printnum+0x7f>$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	56                   	push   %esi$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	ff d7                	call   *%edi$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	eb 03                	jmp    f0105034 <printnum+0x78>$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	85 db                	test   %ebx,%ebx$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	7f e8                	jg     f0105023 <printnum+0x67>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	56                   	push   %esi$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	e8 cd 12 00 00       	call   f0106320 <__umoddi3>$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	0f be 80 44 96 10 f0 	movsbl -0xfef69bc(%eax),%eax$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	50                   	push   %eax$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	ff d7                	call   *%edi$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	5b                   	pop    %ebx$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	5e                   	pop    %esi$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	5f                   	pop    %edi$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	5d                   	pop    %ebp$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	c3                   	ret    $/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b <sprintputch>:$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	55                   	push   %ebp$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	89 e5                	mov    %esp,%ebp$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	8b 10                	mov    (%eax),%edx$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	73 0a                	jae    f0105086 <sprintputch+0x1b>$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105084	obj/kern/kernel.asm	/^f0105084:	88 02                	mov    %al,(%edx)$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	5d                   	pop    %ebp$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	c3                   	ret    $/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088 <printfmt>:$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	55                   	push   %ebp$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	89 e5                	mov    %esp,%ebp$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	50                   	push   %eax$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	e8 05 00 00 00       	call   f01050a5 <vprintfmt>$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	c9                   	leave  $/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	c3                   	ret    $/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5 <vprintfmt>:$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	55                   	push   %ebp$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	89 e5                	mov    %esp,%ebp$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	57                   	push   %edi$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	56                   	push   %esi$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	53                   	push   %ebx$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	eb 12                	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	85 c0                	test   %eax,%eax$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	0f 84 42 04 00 00    	je     f0105503 <vprintfmt+0x45e>$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	53                   	push   %ebx$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	50                   	push   %eax$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	ff d6                	call   *%esi$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	83 c7 01             	add    $0x1,%edi$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	75 e2                	jne    f01050b9 <vprintfmt+0x14>$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	eb 07                	jmp    f01050fe <vprintfmt+0x59>$/;"	l
f01050f7	obj/kern/kernel.asm	/^f01050f7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	83 e8 23             	sub    $0x23,%eax$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	3c 55                	cmp    $0x55,%al$/;"	l
f010510f	obj/kern/kernel.asm	/^f010510f:	0f 87 d3 03 00 00    	ja     f01054e8 <vprintfmt+0x443>$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	ff 24 85 00 97 10 f0 	jmp    *-0xfef6900(,%eax,4)$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	eb d6                	jmp    f01050fe <vprintfmt+0x59>$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	0f be 17             	movsbl (%edi),%edx$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	77 3f                	ja     f0105184 <vprintfmt+0xdf>$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	83 c7 01             	add    $0x1,%edi$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	eb e9                	jmp    f0105133 <vprintfmt+0x8e>$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	8b 00                	mov    (%eax),%eax$/;"	l
f010514f	obj/kern/kernel.asm	/^f010514f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	eb 2a                	jmp    f010518a <vprintfmt+0xe5>$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	85 c0                	test   %eax,%eax$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	eb 89                	jmp    f01050fe <vprintfmt+0x59>$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	e9 7a ff ff ff       	jmp    f01050fe <vprintfmt+0x59>$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	0f 89 6a ff ff ff    	jns    f01050fe <vprintfmt+0x59>$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	e9 58 ff ff ff       	jmp    f01050fe <vprintfmt+0x59>$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	e9 4d ff ff ff       	jmp    f01050fe <vprintfmt+0x59>$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	53                   	push   %ebx$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	ff 30                	pushl  (%eax)$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	ff d6                	call   *%esi$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	e9 fe fe ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	8b 00                	mov    (%eax),%eax$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	99                   	cltd   $/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	31 d0                	xor    %edx,%eax$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	29 d0                	sub    %edx,%eax$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	7f 0b                	jg     f01051ea <vprintfmt+0x145>$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	8b 14 85 60 98 10 f0 	mov    -0xfef67a0(,%eax,4),%edx$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	85 d2                	test   %edx,%edx$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	75 1b                	jne    f0105205 <vprintfmt+0x160>$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	50                   	push   %eax$/;"	l
f01051eb	obj/kern/kernel.asm	/^f01051eb:	68 5c 96 10 f0       	push   $0xf010965c$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	53                   	push   %ebx$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	56                   	push   %esi$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	e8 91 fe ff ff       	call   f0105088 <printfmt>$/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	e9 c6 fe ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	52                   	push   %edx$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	68 d4 69 10 f0       	push   $0xf01069d4$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	53                   	push   %ebx$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	56                   	push   %esi$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	e8 76 fe ff ff       	call   f0105088 <printfmt>$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	e9 ab fe ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	83 c0 04             	add    $0x4,%eax$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	8b 38                	mov    (%eax),%edi$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	85 ff                	test   %edi,%edi$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	b8 55 96 10 f0       	mov    $0xf0109655,%eax$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010523c	obj/kern/kernel.asm	/^f010523c:	0f 8e 94 00 00 00    	jle    f01052d6 <vprintfmt+0x231>$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	0f 84 98 00 00 00    	je     f01052e4 <vprintfmt+0x23f>$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	57                   	push   %edi$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	e8 0c 04 00 00       	call   f0105664 <strnlen>$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	29 c1                	sub    %eax,%ecx$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	89 cf                	mov    %ecx,%edi$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	eb 0f                	jmp    f0105280 <vprintfmt+0x1db>$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	53                   	push   %ebx$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	ff d6                	call   *%esi$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	85 ff                	test   %edi,%edi$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	7f ed                	jg     f0105271 <vprintfmt+0x1cc>$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	85 c9                	test   %ecx,%ecx$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	29 c1                	sub    %eax,%ecx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	89 cb                	mov    %ecx,%ebx$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	eb 4d                	jmp    f01052f0 <vprintfmt+0x24b>$/;"	l
f01052a3	obj/kern/kernel.asm	/^f01052a3:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	74 1b                	je     f01052c4 <vprintfmt+0x21f>$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	0f be c0             	movsbl %al,%eax$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	83 e8 20             	sub    $0x20,%eax$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	76 10                	jbe    f01052c4 <vprintfmt+0x21f>$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	6a 3f                	push   $0x3f$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	eb 0d                	jmp    f01052d1 <vprintfmt+0x22c>$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	52                   	push   %edx$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	eb 1a                	jmp    f01052f0 <vprintfmt+0x24b>$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	eb 0c                	jmp    f01052f0 <vprintfmt+0x24b>$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	83 c7 01             	add    $0x1,%edi$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	0f be d0             	movsbl %al,%edx$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	85 d2                	test   %edx,%edx$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	74 23                	je     f0105321 <vprintfmt+0x27c>$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	85 f6                	test   %esi,%esi$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	78 a1                	js     f01052a3 <vprintfmt+0x1fe>$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	79 9c                	jns    f01052a3 <vprintfmt+0x1fe>$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	89 df                	mov    %ebx,%edi$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	eb 18                	jmp    f0105329 <vprintfmt+0x284>$/;"	l
f0105311	obj/kern/kernel.asm	/^f0105311:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	53                   	push   %ebx$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	6a 20                	push   $0x20$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	ff d6                	call   *%esi$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	eb 08                	jmp    f0105329 <vprintfmt+0x284>$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	89 df                	mov    %ebx,%edi$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	85 ff                	test   %edi,%edi$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	7f e4                	jg     f0105311 <vprintfmt+0x26c>$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	e9 90 fd ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	7e 19                	jle    f0105359 <vprintfmt+0x2b4>$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	8b 00                	mov    (%eax),%eax$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	eb 38                	jmp    f0105391 <vprintfmt+0x2ec>$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	85 c9                	test   %ecx,%ecx$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	74 1b                	je     f0105378 <vprintfmt+0x2d3>$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	8b 00                	mov    (%eax),%eax$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	89 c1                	mov    %eax,%ecx$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	eb 19                	jmp    f0105391 <vprintfmt+0x2ec>$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	8b 00                	mov    (%eax),%eax$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	89 c1                	mov    %eax,%ecx$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	0f 89 0e 01 00 00    	jns    f01054b4 <vprintfmt+0x40f>$/;"	l
f01053a6	obj/kern/kernel.asm	/^f01053a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	53                   	push   %ebx$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	6a 2d                	push   $0x2d$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	ff d6                	call   *%esi$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01053b4	obj/kern/kernel.asm	/^f01053b4:	f7 da                	neg    %edx$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	f7 d9                	neg    %ecx$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	e9 ec 00 00 00       	jmp    f01054b4 <vprintfmt+0x40f>$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	7e 18                	jle    f01053e5 <vprintfmt+0x340>$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	8b 10                	mov    (%eax),%edx$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	e9 cf 00 00 00       	jmp    f01054b4 <vprintfmt+0x40f>$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	85 c9                	test   %ecx,%ecx$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	74 1a                	je     f0105403 <vprintfmt+0x35e>$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	8b 10                	mov    (%eax),%edx$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	e9 b1 00 00 00       	jmp    f01054b4 <vprintfmt+0x40f>$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	8b 10                	mov    (%eax),%edx$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	e9 97 00 00 00       	jmp    f01054b4 <vprintfmt+0x40f>$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	53                   	push   %ebx$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	6a 58                	push   $0x58$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	ff d6                	call   *%esi$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	53                   	push   %ebx$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	6a 58                	push   $0x58$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	ff d6                	call   *%esi$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	53                   	push   %ebx$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	6a 58                	push   $0x58$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	ff d6                	call   *%esi$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	e9 8b fc ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	53                   	push   %ebx$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	6a 30                	push   $0x30$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	ff d6                	call   *%esi$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	83 c4 08             	add    $0x8,%esp$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	53                   	push   %ebx$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	6a 78                	push   $0x78$/;"	l
f010544e	obj/kern/kernel.asm	/^f010544e:	ff d6                	call   *%esi$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	8b 10                	mov    (%eax),%edx$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	eb 4a                	jmp    f01054b4 <vprintfmt+0x40f>$/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	7e 15                	jle    f0105484 <vprintfmt+0x3df>$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	8b 10                	mov    (%eax),%edx$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	eb 30                	jmp    f01054b4 <vprintfmt+0x40f>$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	85 c9                	test   %ecx,%ecx$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	74 17                	je     f010549f <vprintfmt+0x3fa>$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	8b 10                	mov    (%eax),%edx$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105498	obj/kern/kernel.asm	/^f0105498:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	eb 15                	jmp    f01054b4 <vprintfmt+0x40f>$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01054a2	obj/kern/kernel.asm	/^f01054a2:	8b 10                	mov    (%eax),%edx$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	57                   	push   %edi$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01054bf	obj/kern/kernel.asm	/^f01054bf:	50                   	push   %eax$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	51                   	push   %ecx$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	52                   	push   %edx$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	89 da                	mov    %ebx,%edx$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	89 f0                	mov    %esi,%eax$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	e8 f1 fa ff ff       	call   f0104fbc <printnum>$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	83 c4 20             	add    $0x20,%esp$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	e9 f5 fb ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	53                   	push   %ebx$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	52                   	push   %edx$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	ff d6                	call   *%esi$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	e9 e3 fb ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	53                   	push   %ebx$/;"	l
f01054ec	obj/kern/kernel.asm	/^f01054ec:	6a 25                	push   $0x25$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	ff d6                	call   *%esi$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	eb 03                	jmp    f01054f8 <vprintfmt+0x453>$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	75 f7                	jne    f01054f5 <vprintfmt+0x450>$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	e9 c8 fb ff ff       	jmp    f01050cb <vprintfmt+0x26>$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	5b                   	pop    %ebx$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	5e                   	pop    %esi$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	5f                   	pop    %edi$/;"	l
f0105509	obj/kern/kernel.asm	/^f0105509:	5d                   	pop    %ebp$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	c3                   	ret    $/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b <vsnprintf>:$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	55                   	push   %ebp$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	89 e5                	mov    %esp,%ebp$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	85 c0                	test   %eax,%eax$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	74 26                	je     f0105552 <vsnprintf+0x47>$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	85 d2                	test   %edx,%edx$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	7e 22                	jle    f0105552 <vsnprintf+0x47>$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	50                   	push   %eax$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a:	68 6b 50 10 f0       	push   $0xf010506b$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	e8 61 fb ff ff       	call   f01050a5 <vprintfmt>$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105550	obj/kern/kernel.asm	/^f0105550:	eb 05                	jmp    f0105557 <vsnprintf+0x4c>$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	c9                   	leave  $/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	c3                   	ret    $/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559 <snprintf>:$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	55                   	push   %ebp$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	89 e5                	mov    %esp,%ebp$/;"	l
f010555c	obj/kern/kernel.asm	/^f010555c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010555f	obj/kern/kernel.asm	/^f010555f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	50                   	push   %eax$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	e8 9a ff ff ff       	call   f010550b <vsnprintf>$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	c9                   	leave  $/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	c3                   	ret    $/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573 <readline>:$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	55                   	push   %ebp$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	89 e5                	mov    %esp,%ebp$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	57                   	push   %edi$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	56                   	push   %esi$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	53                   	push   %ebx$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	85 c0                	test   %eax,%eax$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	74 11                	je     f0105594 <readline+0x21>$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	50                   	push   %eax$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	68 d4 69 10 f0       	push   $0xf01069d4$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	e8 35 e1 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	6a 00                	push   $0x0$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	e8 e6 b1 ff ff       	call   f0100784 <iscons>$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	89 c7                	mov    %eax,%edi$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	e8 c6 b1 ff ff       	call   f0100773 <getchar>$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	89 c3                	mov    %eax,%ebx$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	85 c0                	test   %eax,%eax$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	79 18                	jns    f01055cb <readline+0x58>$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	50                   	push   %eax$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	68 88 98 10 f0       	push   $0xf0109888$/;"	l
f01055bc	obj/kern/kernel.asm	/^f01055bc:	e8 05 e1 ff ff       	call   f01036c6 <cprintf>$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	eb 79                	jmp    f0105644 <readline+0xd1>$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	0f 94 c2             	sete   %dl$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	0f 94 c0             	sete   %al$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	08 c2                	or     %al,%dl$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	74 1a                	je     f01055f5 <readline+0x82>$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	85 f6                	test   %esi,%esi$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	7e 16                	jle    f01055f5 <readline+0x82>$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	85 ff                	test   %edi,%edi$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	74 0d                	je     f01055f0 <readline+0x7d>$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	6a 08                	push   $0x8$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	e8 76 b1 ff ff       	call   f0100763 <cputchar>$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	eb b3                	jmp    f01055a8 <readline+0x35>$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	7e 23                	jle    f010561d <readline+0xaa>$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	7f 1b                	jg     f010561d <readline+0xaa>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	85 ff                	test   %edi,%edi$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	74 0c                	je     f0105612 <readline+0x9f>$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	53                   	push   %ebx$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	e8 54 b1 ff ff       	call   f0100763 <cputchar>$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	88 9e 80 da 22 f0    	mov    %bl,-0xfdd2580(%esi)$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	eb 8b                	jmp    f01055a8 <readline+0x35>$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	74 05                	je     f0105627 <readline+0xb4>$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	75 81                	jne    f01055a8 <readline+0x35>$/;"	l
f0105627	obj/kern/kernel.asm	/^f0105627:	85 ff                	test   %edi,%edi$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	74 0d                	je     f0105638 <readline+0xc5>$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	6a 0a                	push   $0xa$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	e8 2e b1 ff ff       	call   f0100763 <cputchar>$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	c6 86 80 da 22 f0 00 	movb   $0x0,-0xfdd2580(%esi)$/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	b8 80 da 22 f0       	mov    $0xf022da80,%eax$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	5b                   	pop    %ebx$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	5e                   	pop    %esi$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	5f                   	pop    %edi$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	5d                   	pop    %ebp$/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	c3                   	ret    $/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c <strlen>:$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	55                   	push   %ebp$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	89 e5                	mov    %esp,%ebp$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	eb 03                	jmp    f010565c <strlen+0x10>$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	83 c0 01             	add    $0x1,%eax$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	75 f7                	jne    f0105659 <strlen+0xd>$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	5d                   	pop    %ebp$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	c3                   	ret    $/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664 <strnlen>:$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	55                   	push   %ebp$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	89 e5                	mov    %esp,%ebp$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	eb 03                	jmp    f0105677 <strnlen+0x13>$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	39 c2                	cmp    %eax,%edx$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	74 08                	je     f0105683 <strnlen+0x1f>$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	75 f3                	jne    f0105674 <strnlen+0x10>$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	89 d0                	mov    %edx,%eax$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	5d                   	pop    %ebp$/;"	l
f0105684	obj/kern/kernel.asm	/^f0105684:	c3                   	ret    $/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685 <strcpy>:$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	55                   	push   %ebp$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	89 e5                	mov    %esp,%ebp$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	53                   	push   %ebx$/;"	l
f0105689	obj/kern/kernel.asm	/^f0105689:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	89 c2                	mov    %eax,%edx$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	84 db                	test   %bl,%bl$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	75 ef                	jne    f0105691 <strcpy+0xc>$/;"	l
f01056a2	obj/kern/kernel.asm	/^f01056a2:	5b                   	pop    %ebx$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	5d                   	pop    %ebp$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	c3                   	ret    $/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5 <strcat>:$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	55                   	push   %ebp$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	89 e5                	mov    %esp,%ebp$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	53                   	push   %ebx$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	53                   	push   %ebx$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	e8 9a ff ff ff       	call   f010564c <strlen>$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	83 c4 04             	add    $0x4,%esp$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	01 d8                	add    %ebx,%eax$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	50                   	push   %eax$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	e8 c5 ff ff ff       	call   f0105685 <strcpy>$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	89 d8                	mov    %ebx,%eax$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	c9                   	leave  $/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	c3                   	ret    $/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7 <strncpy>:$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	55                   	push   %ebp$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	56                   	push   %esi$/;"	l
f01056cb	obj/kern/kernel.asm	/^f01056cb:	53                   	push   %ebx$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	89 f3                	mov    %esi,%ebx$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01056d7	obj/kern/kernel.asm	/^f01056d7:	89 f2                	mov    %esi,%edx$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	eb 0f                	jmp    f01056ea <strncpy+0x23>$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	83 c2 01             	add    $0x1,%edx$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	39 da                	cmp    %ebx,%edx$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	75 ed                	jne    f01056db <strncpy+0x14>$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	89 f0                	mov    %esi,%eax$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	5b                   	pop    %ebx$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	5e                   	pop    %esi$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	5d                   	pop    %ebp$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	c3                   	ret    $/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4 <strlcpy>:$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	55                   	push   %ebp$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	56                   	push   %esi$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	53                   	push   %ebx$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	89 f0                	mov    %esi,%eax$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	85 d2                	test   %edx,%edx$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	74 21                	je     f0105729 <strlcpy+0x35>$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	89 f2                	mov    %esi,%edx$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	eb 09                	jmp    f0105719 <strlcpy+0x25>$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	39 c2                	cmp    %eax,%edx$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	74 09                	je     f0105726 <strlcpy+0x32>$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	84 db                	test   %bl,%bl$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	75 ec                	jne    f0105710 <strlcpy+0x1c>$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	89 d0                	mov    %edx,%eax$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	29 f0                	sub    %esi,%eax$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	5b                   	pop    %ebx$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	5e                   	pop    %esi$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	5d                   	pop    %ebp$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	c3                   	ret    $/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f <strcmp>:$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	55                   	push   %ebp$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	89 e5                	mov    %esp,%ebp$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	eb 06                	jmp    f0105740 <strcmp+0x11>$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	84 c0                	test   %al,%al$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	74 04                	je     f010574b <strcmp+0x1c>$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	3a 02                	cmp    (%edx),%al$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	74 ef                	je     f010573a <strcmp+0xb>$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	29 d0                	sub    %edx,%eax$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	5d                   	pop    %ebp$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	c3                   	ret    $/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755 <strncmp>:$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	55                   	push   %ebp$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	89 e5                	mov    %esp,%ebp$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	53                   	push   %ebx$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	89 c3                	mov    %eax,%ebx$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	eb 06                	jmp    f010576c <strncmp+0x17>$/;"	l
f0105766	obj/kern/kernel.asm	/^f0105766:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	83 c2 01             	add    $0x1,%edx$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	39 d8                	cmp    %ebx,%eax$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	74 15                	je     f0105785 <strncmp+0x30>$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	84 c9                	test   %cl,%cl$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	74 04                	je     f010577b <strncmp+0x26>$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	74 eb                	je     f0105766 <strncmp+0x11>$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	29 d0                	sub    %edx,%eax$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	eb 05                	jmp    f010578a <strncmp+0x35>$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	5b                   	pop    %ebx$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	5d                   	pop    %ebp$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	c3                   	ret    $/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d <strchr>:$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	55                   	push   %ebp$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	eb 07                	jmp    f01057a0 <strchr+0x13>$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	38 ca                	cmp    %cl,%dl$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	74 0f                	je     f01057ac <strchr+0x1f>$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	83 c0 01             	add    $0x1,%eax$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	84 d2                	test   %dl,%dl$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	75 f2                	jne    f0105799 <strchr+0xc>$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	5d                   	pop    %ebp$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	c3                   	ret    $/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae <strfind>:$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	55                   	push   %ebp$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	89 e5                	mov    %esp,%ebp$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01057b8	obj/kern/kernel.asm	/^f01057b8:	eb 03                	jmp    f01057bd <strfind+0xf>$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	83 c0 01             	add    $0x1,%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	38 ca                	cmp    %cl,%dl$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	74 04                	je     f01057c8 <strfind+0x1a>$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	84 d2                	test   %dl,%dl$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	75 f2                	jne    f01057ba <strfind+0xc>$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	5d                   	pop    %ebp$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	c3                   	ret    $/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca <memset>:$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	55                   	push   %ebp$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	57                   	push   %edi$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	56                   	push   %esi$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	53                   	push   %ebx$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	85 c9                	test   %ecx,%ecx$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	74 36                	je     f0105810 <memset+0x46>$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	75 28                	jne    f010580a <memset+0x40>$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	75 23                	jne    f010580a <memset+0x40>$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	89 d3                	mov    %edx,%ebx$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	89 d6                	mov    %edx,%esi$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	89 d0                	mov    %edx,%eax$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	09 f0                	or     %esi,%eax$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	09 c2                	or     %eax,%edx$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	89 d8                	mov    %ebx,%eax$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	09 d0                	or     %edx,%eax$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	fc                   	cld    $/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	eb 06                	jmp    f0105810 <memset+0x46>$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	fc                   	cld    $/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	89 f8                	mov    %edi,%eax$/;"	l
f0105812	obj/kern/kernel.asm	/^f0105812:	5b                   	pop    %ebx$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	5e                   	pop    %esi$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	5f                   	pop    %edi$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	5d                   	pop    %ebp$/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	c3                   	ret    $/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817 <memmove>:$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	55                   	push   %ebp$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	89 e5                	mov    %esp,%ebp$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	57                   	push   %edi$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	56                   	push   %esi$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105825	obj/kern/kernel.asm	/^f0105825:	39 c6                	cmp    %eax,%esi$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	73 35                	jae    f010585e <memmove+0x47>$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	39 d0                	cmp    %edx,%eax$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	73 2e                	jae    f010585e <memmove+0x47>$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	89 d6                	mov    %edx,%esi$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	09 fe                	or     %edi,%esi$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	75 13                	jne    f0105852 <memmove+0x3b>$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	75 0e                	jne    f0105852 <memmove+0x3b>$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	fd                   	std    $/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	eb 09                	jmp    f010585b <memmove+0x44>$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	fd                   	std    $/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	fc                   	cld    $/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	eb 1d                	jmp    f010587b <memmove+0x64>$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	89 f2                	mov    %esi,%edx$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	09 c2                	or     %eax,%edx$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	75 0f                	jne    f0105876 <memmove+0x5f>$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	75 0a                	jne    f0105876 <memmove+0x5f>$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	89 c7                	mov    %eax,%edi$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	fc                   	cld    $/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	eb 05                	jmp    f010587b <memmove+0x64>$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	89 c7                	mov    %eax,%edi$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	fc                   	cld    $/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	5e                   	pop    %esi$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	5f                   	pop    %edi$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	5d                   	pop    %ebp$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	c3                   	ret    $/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f <memcpy>:$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	55                   	push   %ebp$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	89 e5                	mov    %esp,%ebp$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010588b	obj/kern/kernel.asm	/^f010588b:	e8 87 ff ff ff       	call   f0105817 <memmove>$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	c9                   	leave  $/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	c3                   	ret    $/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892 <memcmp>:$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	55                   	push   %ebp$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	89 e5                	mov    %esp,%ebp$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	56                   	push   %esi$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	53                   	push   %ebx$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	89 c6                	mov    %eax,%esi$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	eb 1a                	jmp    f01058be <memcmp+0x2c>$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	38 d9                	cmp    %bl,%cl$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	74 0a                	je     f01058b8 <memcmp+0x26>$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	29 d8                	sub    %ebx,%eax$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	eb 0f                	jmp    f01058c7 <memcmp+0x35>$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	83 c2 01             	add    $0x1,%edx$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	39 f0                	cmp    %esi,%eax$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	75 e2                	jne    f01058a4 <memcmp+0x12>$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	5b                   	pop    %ebx$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	5e                   	pop    %esi$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	5d                   	pop    %ebp$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	c3                   	ret    $/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb <memfind>:$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	55                   	push   %ebp$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	53                   	push   %ebx$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	89 c1                	mov    %eax,%ecx$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	eb 0a                	jmp    f01058e7 <memfind+0x1c>$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01058e0	obj/kern/kernel.asm	/^f01058e0:	39 da                	cmp    %ebx,%edx$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	74 07                	je     f01058eb <memfind+0x20>$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	39 c8                	cmp    %ecx,%eax$/;"	l
f01058e9	obj/kern/kernel.asm	/^f01058e9:	72 f2                	jb     f01058dd <memfind+0x12>$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	5b                   	pop    %ebx$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	5d                   	pop    %ebp$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	c3                   	ret    $/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee <strtol>:$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	55                   	push   %ebp$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	57                   	push   %edi$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	56                   	push   %esi$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	53                   	push   %ebx$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	eb 03                	jmp    f01058ff <strtol+0x11>$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	3c 20                	cmp    $0x20,%al$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	74 f6                	je     f01058fc <strtol+0xe>$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	3c 09                	cmp    $0x9,%al$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	74 f2                	je     f01058fc <strtol+0xe>$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	3c 2b                	cmp    $0x2b,%al$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	75 0a                	jne    f0105918 <strtol+0x2a>$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	eb 11                	jmp    f0105929 <strtol+0x3b>$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	75 08                	jne    f0105929 <strtol+0x3b>$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	75 15                	jne    f0105946 <strtol+0x58>$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	75 10                	jne    f0105946 <strtol+0x58>$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f010593a	obj/kern/kernel.asm	/^f010593a:	75 7c                	jne    f01059b8 <strtol+0xca>$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	83 c1 02             	add    $0x2,%ecx$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	eb 16                	jmp    f010595c <strtol+0x6e>$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	85 db                	test   %ebx,%ebx$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	75 12                	jne    f010595c <strtol+0x6e>$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	75 08                	jne    f010595c <strtol+0x6e>$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	89 f3                	mov    %esi,%ebx$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	77 08                	ja     f0105979 <strtol+0x8b>$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	eb 22                	jmp    f010599b <strtol+0xad>$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	89 f3                	mov    %esi,%ebx$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	77 08                	ja     f010598b <strtol+0x9d>$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	eb 10                	jmp    f010599b <strtol+0xad>$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	89 f3                	mov    %esi,%ebx$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	77 16                	ja     f01059ab <strtol+0xbd>$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105998	obj/kern/kernel.asm	/^f0105998:	83 ea 37             	sub    $0x37,%edx$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	7d 0b                	jge    f01059ab <strtol+0xbd>$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	01 d0                	add    %edx,%eax$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	eb b9                	jmp    f0105964 <strtol+0x76>$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	74 0d                	je     f01059be <strtol+0xd0>$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	89 0e                	mov    %ecx,(%esi)$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	eb 06                	jmp    f01059be <strtol+0xd0>$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	85 db                	test   %ebx,%ebx$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	74 98                	je     f0105954 <strtol+0x66>$/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	eb 9e                	jmp    f010595c <strtol+0x6e>$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	89 c2                	mov    %eax,%edx$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	f7 da                	neg    %edx$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	85 ff                	test   %edi,%edi$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	5b                   	pop    %ebx$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	5e                   	pop    %esi$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	5f                   	pop    %edi$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	5d                   	pop    %ebp$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	c3                   	ret    $/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc <mpentry_start>:$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	fa                   	cli    $/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	31 c0                	xor    %eax,%eax$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	8e d8                	mov    %eax,%ds$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	8e c0                	mov    %eax,%es$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	8e d0                	mov    %eax,%ss$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	74 70                	je     f0105a4a <mpsearch1+0x3>$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	08 00                	or     %al,(%eax)$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec <start32>:$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	8e d8                	mov    %eax,%ds$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	8e c0                	mov    %eax,%es$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	8e d0                	mov    %eax,%ss$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	8e e0                	mov    %eax,%fs$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	8e e8                	mov    %eax,%gs$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	8b 25 84 de 22 f0    	mov    0xf022de84,%esp$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	b8 c0 01 10 f0       	mov    $0xf01001c0,%eax$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	ff d0                	call   *%eax$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23 <spin>:$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	eb fe                	jmp    f0105a23 <spin>$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28 <gdt>:$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	ff                   	(bad)  $/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	ff 00                	incl   (%eax)$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	00 00                	add    %al,(%eax)$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40 <gdtdesc>:$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	17                   	pop    %ss$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46 <mpentry_end>:$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	90                   	nop$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47 <mpsearch1>:$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	55                   	push   %ebp$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	57                   	push   %edi$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	56                   	push   %esi$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	53                   	push   %ebx$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	8b 0d 88 de 22 f0    	mov    0xf022de88,%ecx$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105a5d	obj/kern/kernel.asm	/^f0105a5d:	72 12                	jb     f0105a71 <mpsearch1+0x2a>$/;"	l
f0105a5f	obj/kern/kernel.asm	/^f0105a5f:	50                   	push   %eax$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	6a 57                	push   $0x57$/;"	l
f0105a67	obj/kern/kernel.asm	/^f0105a67:	68 25 9a 10 f0       	push   $0xf0109a25$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	e8 cf a5 ff ff       	call   f0100040 <_panic>$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	01 d0                	add    %edx,%eax$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	89 c2                	mov    %eax,%edx$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	72 12                	jb     f0105a94 <mpsearch1+0x4d>$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	50                   	push   %eax$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	6a 57                	push   $0x57$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	68 25 9a 10 f0       	push   $0xf0109a25$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	e8 ac a5 ff ff       	call   f0100040 <_panic>$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	eb 2f                	jmp    f0105acb <mpsearch1+0x84>$/;"	l
f0105a9c	obj/kern/kernel.asm	/^f0105a9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	6a 04                	push   $0x4$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	68 35 9a 10 f0       	push   $0xf0109a35$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	53                   	push   %ebx$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	e8 e6 fd ff ff       	call   f0105892 <memcmp>$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	85 c0                	test   %eax,%eax$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	75 15                	jne    f0105ac8 <mpsearch1+0x81>$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	89 da                	mov    %ebx,%edx$/;"	l
f0105ab5	obj/kern/kernel.asm	/^f0105ab5:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	01 c8                	add    %ecx,%eax$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	39 d7                	cmp    %edx,%edi$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	75 f4                	jne    f0105ab8 <mpsearch1+0x71>$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	84 c0                	test   %al,%al$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	74 0e                	je     f0105ad6 <mpsearch1+0x8f>$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	72 cd                	jb     f0105a9c <mpsearch1+0x55>$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	eb 02                	jmp    f0105ad8 <mpsearch1+0x91>$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	5b                   	pop    %ebx$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	5e                   	pop    %esi$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	5f                   	pop    %edi$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	5d                   	pop    %ebp$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	c3                   	ret    $/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0 <mp_init>:$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	55                   	push   %ebp$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	57                   	push   %edi$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	56                   	push   %esi$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	53                   	push   %ebx$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	c7 05 c0 e3 23 f0 20 	movl   $0xf023e020,0xf023e3c0$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	e0 23 f0 $/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	83 3d 88 de 22 f0 00 	cmpl   $0x0,0xf022de88$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	75 16                	jne    f0105b12 <mp_init+0x32>$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	68 00 04 00 00       	push   $0x400$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	6a 6f                	push   $0x6f$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	68 25 9a 10 f0       	push   $0xf0109a25$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	e8 2e a5 ff ff       	call   f0100040 <_panic>$/;"	l
f0105b12	obj/kern/kernel.asm	/^f0105b12:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	85 c0                	test   %eax,%eax$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	74 16                	je     f0105b33 <mp_init+0x53>$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	e8 1d ff ff ff       	call   f0105a47 <mpsearch1>$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	85 c0                	test   %eax,%eax$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	75 3c                	jne    f0105b6d <mp_init+0x8d>$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	eb 20                	jmp    f0105b53 <mp_init+0x73>$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105b3d	obj/kern/kernel.asm	/^f0105b3d:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	e8 fb fe ff ff       	call   f0105a47 <mpsearch1>$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	85 c0                	test   %eax,%eax$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	75 1a                	jne    f0105b6d <mp_init+0x8d>$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	e8 e5 fe ff ff       	call   f0105a47 <mpsearch1>$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	85 c0                	test   %eax,%eax$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	0f 84 5d 02 00 00    	je     f0105dca <mp_init+0x2ea>$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	85 f6                	test   %esi,%esi$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	74 06                	je     f0105b7d <mp_init+0x9d>$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	74 15                	je     f0105b92 <mp_init+0xb2>$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	68 98 98 10 f0       	push   $0xf0109898$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	e8 3c db ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	e9 38 02 00 00       	jmp    f0105dca <mp_init+0x2ea>$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	89 f0                	mov    %esi,%eax$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	3b 05 88 de 22 f0    	cmp    0xf022de88,%eax$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	72 15                	jb     f0105bb4 <mp_init+0xd4>$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	56                   	push   %esi$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	68 90 00 00 00       	push   $0x90$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	68 25 9a 10 f0       	push   $0xf0109a25$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	e8 8c a4 ff ff       	call   f0100040 <_panic>$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105bbd	obj/kern/kernel.asm	/^f0105bbd:	6a 04                	push   $0x4$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	68 3a 9a 10 f0       	push   $0xf0109a3a$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	53                   	push   %ebx$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	e8 c8 fc ff ff       	call   f0105892 <memcmp>$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	85 c0                	test   %eax,%eax$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	74 15                	je     f0105be6 <mp_init+0x106>$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	68 c8 98 10 f0       	push   $0xf01098c8$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	e8 e8 da ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	e9 e4 01 00 00       	jmp    f0105dca <mp_init+0x2ea>$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	eb 0d                	jmp    f0105c0a <mp_init+0x12a>$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0105c04	obj/kern/kernel.asm	/^f0105c04:	f0 $/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	01 ca                	add    %ecx,%edx$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	39 c7                	cmp    %eax,%edi$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	75 ef                	jne    f0105bfd <mp_init+0x11d>$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	84 d2                	test   %dl,%dl$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	74 15                	je     f0105c27 <mp_init+0x147>$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	68 fc 98 10 f0       	push   $0xf01098fc$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	e8 a7 da ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	e9 a3 01 00 00       	jmp    f0105dca <mp_init+0x2ea>$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	3c 01                	cmp    $0x1,%al$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	74 1d                	je     f0105c4c <mp_init+0x16c>$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	3c 04                	cmp    $0x4,%al$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	74 19                	je     f0105c4c <mp_init+0x16c>$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	50                   	push   %eax$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	68 20 99 10 f0       	push   $0xf0109920$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	e8 82 da ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	e9 7e 01 00 00       	jmp    f0105dca <mp_init+0x2ea>$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	01 ce                	add    %ecx,%esi$/;"	l
f0105c60	obj/kern/kernel.asm	/^f0105c60:	eb 0d                	jmp    f0105c6f <mp_init+0x18f>$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	f0 $/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	01 ca                	add    %ecx,%edx$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	39 c7                	cmp    %eax,%edi$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	75 ef                	jne    f0105c62 <mp_init+0x182>$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	89 d0                	mov    %edx,%eax$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	74 15                	je     f0105c8f <mp_init+0x1af>$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	68 40 99 10 f0       	push   $0xf0109940$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	e8 3f da ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105c87	obj/kern/kernel.asm	/^f0105c87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	e9 3b 01 00 00       	jmp    f0105dca <mp_init+0x2ea>$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	85 db                	test   %ebx,%ebx$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	0f 84 33 01 00 00    	je     f0105dca <mp_init+0x2ea>$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	c7 05 00 e0 23 f0 01 	movl   $0x1,0xf023e000$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	00 00 00 $/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	a3 00 f0 27 f0       	mov    %eax,0xf027f000$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	e9 85 00 00 00       	jmp    f0105d3b <mp_init+0x25b>$/;"	l
f0105cb6	obj/kern/kernel.asm	/^f0105cb6:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	84 c0                	test   %al,%al$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	74 06                	je     f0105cc3 <mp_init+0x1e3>$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	3c 04                	cmp    $0x4,%al$/;"	l
f0105cbf	obj/kern/kernel.asm	/^f0105cbf:	77 55                	ja     f0105d16 <mp_init+0x236>$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	eb 4e                	jmp    f0105d11 <mp_init+0x231>$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	74 11                	je     f0105cda <mp_init+0x1fa>$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	6b 05 c4 e3 23 f0 74 	imul   $0x74,0xf023e3c4,%eax$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	05 20 e0 23 f0       	add    $0xf023e020,%eax$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	a3 c0 e3 23 f0       	mov    %eax,0xf023e3c0$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	a1 c4 e3 23 f0       	mov    0xf023e3c4,%eax$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	7f 13                	jg     f0105cf7 <mp_init+0x217>$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	88 82 20 e0 23 f0    	mov    %al,-0xfdc1fe0(%edx)$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	a3 c4 e3 23 f0       	mov    %eax,0xf023e3c4$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	eb 15                	jmp    f0105d0c <mp_init+0x22c>$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	50                   	push   %eax$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	68 70 99 10 f0       	push   $0xf0109970$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	e8 bd d9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	83 c7 14             	add    $0x14,%edi$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	eb 27                	jmp    f0105d38 <mp_init+0x258>$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	83 c7 08             	add    $0x8,%edi$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	eb 22                	jmp    f0105d38 <mp_init+0x258>$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	50                   	push   %eax$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	68 98 99 10 f0       	push   $0xf0109998$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	e8 9f d9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	c7 05 00 e0 23 f0 00 	movl   $0x0,0xf023e000$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	00 00 00 $/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	39 c6                	cmp    %eax,%esi$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	0f 82 6f ff ff ff    	jb     f0105cb6 <mp_init+0x1d6>$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	a1 c0 e3 23 f0       	mov    0xf023e3c0,%eax$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	83 3d 00 e0 23 f0 00 	cmpl   $0x0,0xf023e000$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	75 26                	jne    f0105d82 <mp_init+0x2a2>$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	c7 05 c4 e3 23 f0 01 	movl   $0x1,0xf023e3c4$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	00 00 00 $/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	c7 05 00 f0 27 f0 00 	movl   $0x0,0xf027f000$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	00 00 00 $/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	68 b8 99 10 f0       	push   $0xf01099b8$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	e8 49 d9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	eb 48                	jmp    f0105dca <mp_init+0x2ea>$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	ff 35 c4 e3 23 f0    	pushl  0xf023e3c4$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105d8e	obj/kern/kernel.asm	/^f0105d8e:	50                   	push   %eax$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	68 3f 9a 10 f0       	push   $0xf0109a3f$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	e8 2d d9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	74 25                	je     f0105dca <mp_init+0x2ea>$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	68 e4 99 10 f0       	push   $0xf01099e4$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	e8 14 d9 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	ee                   	out    %al,(%dx)$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0105dc2	obj/kern/kernel.asm	/^f0105dc2:	ec                   	in     (%dx),%al$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	83 c8 01             	or     $0x1,%eax$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	ee                   	out    %al,(%dx)$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	5b                   	pop    %ebx$/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	5e                   	pop    %esi$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	5f                   	pop    %edi$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	5d                   	pop    %ebp$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	c3                   	ret    $/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2 <lapicw>:$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	55                   	push   %ebp$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	8b 0d 04 f0 27 f0    	mov    0xf027f004,%ecx$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	89 10                	mov    %edx,(%eax)$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	a1 04 f0 27 f0       	mov    0xf027f004,%eax$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	5d                   	pop    %ebp$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	c3                   	ret    $/;"	l
f0105dea	obj/kern/kernel.asm	/^f0105dea <cpunum>:$/;"	l
f0105dea	obj/kern/kernel.asm	/^f0105dea:	55                   	push   %ebp$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ded	obj/kern/kernel.asm	/^f0105ded:	a1 04 f0 27 f0       	mov    0xf027f004,%eax$/;"	l
f0105df2	obj/kern/kernel.asm	/^f0105df2:	85 c0                	test   %eax,%eax$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	74 08                	je     f0105dfe <cpunum+0x14>$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	eb 05                	jmp    f0105e03 <cpunum+0x19>$/;"	l
f0105dfe	obj/kern/kernel.asm	/^f0105dfe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	5d                   	pop    %ebp$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	c3                   	ret    $/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05 <lapic_init>:$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	a1 00 f0 27 f0       	mov    0xf027f000,%eax$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	85 c0                	test   %eax,%eax$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	0f 84 21 01 00 00    	je     f0105f33 <lapic_init+0x12e>$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	55                   	push   %ebp$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	68 00 10 00 00       	push   $0x1000$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	50                   	push   %eax$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	e8 47 b4 ff ff       	call   f010126a <mmio_map_region>$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	a3 04 f0 27 f0       	mov    %eax,0xf027f004$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	e8 9b ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	e8 8c ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	e8 7d ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	e8 6e ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	e8 81 ff ff ff       	call   f0105dea <cpunum>$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e6c	obj/kern/kernel.asm	/^f0105e6c:	05 20 e0 23 f0       	add    $0xf023e020,%eax$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	39 05 c0 e3 23 f0    	cmp    %eax,0xf023e3c0$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	74 0f                	je     f0105e8b <lapic_init+0x86>$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0105e86	obj/kern/kernel.asm	/^f0105e86:	e8 47 ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	e8 38 ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	a1 04 f0 27 f0       	mov    0xf027f004,%eax$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	3c 03                	cmp    $0x3,%al$/;"	l
f0105ea7	obj/kern/kernel.asm	/^f0105ea7:	76 0f                	jbe    f0105eb8 <lapic_init+0xb3>$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	e8 1a ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	e8 0b ff ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	e8 fc fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	e8 ed fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	e8 de fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	e8 cf fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	e8 c0 fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	8b 15 04 f0 27 f0    	mov    0xf027f004,%edx$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	75 f5                	jne    f0105f18 <lapic_init+0x113>$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	e8 a0 fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	c9                   	leave  $/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	f3 c3                	repz ret $/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35 <lapic_eoi>:$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	83 3d 04 f0 27 f0 00 	cmpl   $0x0,0xf027f004$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	74 13                	je     f0105f51 <lapic_eoi+0x1c>$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	55                   	push   %ebp$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	e8 82 fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	5d                   	pop    %ebp$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	f3 c3                	repz ret $/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53 <lapic_startap>:$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	55                   	push   %ebp$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	56                   	push   %esi$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	53                   	push   %ebx$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	ee                   	out    %al,(%dx)$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	ee                   	out    %al,(%dx)$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	83 3d 88 de 22 f0 00 	cmpl   $0x0,0xf022de88$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	75 19                	jne    f0105f96 <lapic_startap+0x43>$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	68 67 04 00 00       	push   $0x467$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	68 a4 64 10 f0       	push   $0xf01064a4$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	68 98 00 00 00       	push   $0x98$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	68 5c 9a 10 f0       	push   $0xf0109a5c$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	e8 aa a0 ff ff       	call   f0100040 <_panic>$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	00 00 $/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	89 d8                	mov    %ebx,%eax$/;"	l
f0105fa1	obj/kern/kernel.asm	/^f0105fa1:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	89 f2                	mov    %esi,%edx$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	e8 19 fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	e8 0a fe ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	e8 fb fd ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	80 cf 06             	or     $0x6,%bh$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	89 f2                	mov    %esi,%edx$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	e8 e9 fd ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	89 da                	mov    %ebx,%edx$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	e8 dd fd ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	89 f2                	mov    %esi,%edx$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	e8 d1 fd ff ff       	call   f0105dd2 <lapicw>$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	89 da                	mov    %ebx,%edx$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106008	obj/kern/kernel.asm	/^f0106008:	e8 c5 fd ff ff       	call   f0105dd2 <lapicw>$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	5b                   	pop    %ebx$/;"	l
f0106011	obj/kern/kernel.asm	/^f0106011:	5e                   	pop    %esi$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	5d                   	pop    %ebp$/;"	l
f0106013	obj/kern/kernel.asm	/^f0106013:	c3                   	ret    $/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014 <lapic_ipi>:$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	55                   	push   %ebp$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	89 e5                	mov    %esp,%ebp$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	e8 a8 fd ff ff       	call   f0105dd2 <lapicw>$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	8b 15 04 f0 27 f0    	mov    0xf027f004,%edx$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106036	obj/kern/kernel.asm	/^f0106036:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	75 f5                	jne    f0106030 <lapic_ipi+0x1c>$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	5d                   	pop    %ebp$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	c3                   	ret    $/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d <__spin_initlock>:$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	55                   	push   %ebp$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	5d                   	pop    %ebp$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	c3                   	ret    $/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058 <spin_lock>:$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	55                   	push   %ebp$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	89 e5                	mov    %esp,%ebp$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	56                   	push   %esi$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	53                   	push   %ebx$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	74 14                	je     f0106079 <spin_lock+0x21>$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	e8 7d fd ff ff       	call   f0105dea <cpunum>$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	05 20 e0 23 f0       	add    $0xf023e020,%eax$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	39 c6                	cmp    %eax,%esi$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	74 07                	je     f0106080 <spin_lock+0x28>$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010607e	obj/kern/kernel.asm	/^f010607e:	eb 20                	jmp    f01060a0 <spin_lock+0x48>$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	e8 62 fd ff ff       	call   f0105dea <cpunum>$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	53                   	push   %ebx$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	50                   	push   %eax$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	68 6c 9a 10 f0       	push   $0xf0109a6c$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	6a 41                	push   $0x41$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	68 d0 9a 10 f0       	push   $0xf0109ad0$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	e8 a2 9f ff ff       	call   f0100040 <_panic>$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	f3 90                	pause  $/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	89 d0                	mov    %edx,%eax$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	85 c0                	test   %eax,%eax$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	75 f5                	jne    f010609e <spin_lock+0x46>$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	e8 3c fd ff ff       	call   f0105dea <cpunum>$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	05 20 e0 23 f0       	add    $0xf023e020,%eax$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	89 ea                	mov    %ebp,%edx$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	eb 0b                	jmp    f01060d0 <spin_lock+0x78>$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	8b 12                	mov    (%edx),%edx$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	76 11                	jbe    f01060e9 <spin_lock+0x91>$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	7e e8                	jle    f01060c5 <spin_lock+0x6d>$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	eb 0a                	jmp    f01060e9 <spin_lock+0x91>$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	7e f1                	jle    f01060df <spin_lock+0x87>$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	5b                   	pop    %ebx$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	5e                   	pop    %esi$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	5d                   	pop    %ebp$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	c3                   	ret    $/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5 <spin_unlock>:$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	55                   	push   %ebp$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	57                   	push   %edi$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	56                   	push   %esi$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	53                   	push   %ebx$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	74 18                	je     f010611e <spin_unlock+0x29>$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0106109	obj/kern/kernel.asm	/^f0106109:	e8 dc fc ff ff       	call   f0105dea <cpunum>$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	05 20 e0 23 f0       	add    $0xf023e020,%eax$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	0f 84 a5 00 00 00    	je     f01061c3 <spin_unlock+0xce>$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	6a 28                	push   $0x28$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f0106126	obj/kern/kernel.asm	/^f0106126:	50                   	push   %eax$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	53                   	push   %ebx$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	e8 e7 f6 ff ff       	call   f0105817 <memmove>$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	e8 ac fc ff ff       	call   f0105dea <cpunum>$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	57                   	push   %edi$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	56                   	push   %esi$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	50                   	push   %eax$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	68 98 9a 10 f0       	push   $0xf0109a98$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	e8 7b d5 ff ff       	call   f01036c6 <cprintf>$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010614e	obj/kern/kernel.asm	/^f010614e:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	eb 54                	jmp    f01061a7 <spin_unlock+0xb2>$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	57                   	push   %edi$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	50                   	push   %eax$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	e8 6e e5 ff ff       	call   f01046cb <debuginfo_eip>$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	85 c0                	test   %eax,%eax$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	78 27                	js     f010618b <spin_unlock+0x96>$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	8b 06                	mov    (%esi),%eax$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	89 c2                	mov    %eax,%edx$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	52                   	push   %edx$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	50                   	push   %eax$/;"	l
f010617c	obj/kern/kernel.asm	/^f010617c:	68 e0 9a 10 f0       	push   $0xf0109ae0$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	e8 40 d5 ff ff       	call   f01036c6 <cprintf>$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	eb 12                	jmp    f010619d <spin_unlock+0xa8>$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	ff 36                	pushl  (%esi)$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	68 f7 9a 10 f0       	push   $0xf0109af7$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	e8 2c d5 ff ff       	call   f01036c6 <cprintf>$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01061a5	obj/kern/kernel.asm	/^f01061a5:	74 08                	je     f01061af <spin_unlock+0xba>$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	89 de                	mov    %ebx,%esi$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	85 c0                	test   %eax,%eax$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	75 a4                	jne    f0106153 <spin_unlock+0x5e>$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	68 ff 9a 10 f0       	push   $0xf0109aff$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	6a 67                	push   $0x67$/;"	l
f01061b9	obj/kern/kernel.asm	/^f01061b9:	68 d0 9a 10 f0       	push   $0xf0109ad0$/;"	l
f01061be	obj/kern/kernel.asm	/^f01061be:	e8 7d 9e ff ff       	call   f0100040 <_panic>$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01061dc	obj/kern/kernel.asm	/^f01061dc:	5b                   	pop    %ebx$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	5e                   	pop    %esi$/;"	l
f01061de	obj/kern/kernel.asm	/^f01061de:	5f                   	pop    %edi$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	5d                   	pop    %ebp$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	c3                   	ret    $/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	66 90                	xchg   %ax,%ax$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	66 90                	xchg   %ax,%ax$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	66 90                	xchg   %ax,%ax$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	66 90                	xchg   %ax,%ax$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	66 90                	xchg   %ax,%ax$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	66 90                	xchg   %ax,%ax$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	66 90                	xchg   %ax,%ax$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	90                   	nop$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0 <__udivdi3>:$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	55                   	push   %ebp$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	57                   	push   %edi$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	56                   	push   %esi$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	53                   	push   %ebx$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	85 f6                	test   %esi,%esi$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	89 ca                	mov    %ecx,%edx$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	89 f8                	mov    %edi,%eax$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	75 3d                	jne    f0106250 <__udivdi3+0x60>$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	39 cf                	cmp    %ecx,%edi$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	0f 87 c5 00 00 00    	ja     f01062e0 <__udivdi3+0xf0>$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	85 ff                	test   %edi,%edi$/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d:	89 fd                	mov    %edi,%ebp$/;"	l
f010621f	obj/kern/kernel.asm	/^f010621f:	75 0b                	jne    f010622c <__udivdi3+0x3c>$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106226	obj/kern/kernel.asm	/^f0106226:	31 d2                	xor    %edx,%edx$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	f7 f7                	div    %edi$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	89 c5                	mov    %eax,%ebp$/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	89 c8                	mov    %ecx,%eax$/;"	l
f010622e	obj/kern/kernel.asm	/^f010622e:	31 d2                	xor    %edx,%edx$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	f7 f5                	div    %ebp$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	89 c1                	mov    %eax,%ecx$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	89 d8                	mov    %ebx,%eax$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	89 cf                	mov    %ecx,%edi$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	f7 f5                	div    %ebp$/;"	l
f010623a	obj/kern/kernel.asm	/^f010623a:	89 c3                	mov    %eax,%ebx$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	89 d8                	mov    %ebx,%eax$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	89 fa                	mov    %edi,%edx$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	5b                   	pop    %ebx$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	5e                   	pop    %esi$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	5f                   	pop    %edi$/;"	l
f0106246	obj/kern/kernel.asm	/^f0106246:	5d                   	pop    %ebp$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	c3                   	ret    $/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	90                   	nop$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	39 ce                	cmp    %ecx,%esi$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	77 74                	ja     f01062c8 <__udivdi3+0xd8>$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	0f 84 98 00 00 00    	je     f01062f8 <__udivdi3+0x108>$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	89 f9                	mov    %edi,%ecx$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	89 c5                	mov    %eax,%ebp$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	29 fb                	sub    %edi,%ebx$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	d3 e6                	shl    %cl,%esi$/;"	d
f010626d	obj/kern/kernel.asm	/^f010626d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106271	obj/kern/kernel.asm	/^f0106271:	89 f9                	mov    %edi,%ecx$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	d3 e0                	shl    %cl,%eax$/;"	d
f0106275	obj/kern/kernel.asm	/^f0106275:	09 ee                	or     %ebp,%esi$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	89 d5                	mov    %edx,%ebp$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	d3 ed                	shr    %cl,%ebp$/;"	d
f0106285	obj/kern/kernel.asm	/^f0106285:	89 f9                	mov    %edi,%ecx$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	d3 e2                	shl    %cl,%edx$/;"	d
f0106289	obj/kern/kernel.asm	/^f0106289:	89 d9                	mov    %ebx,%ecx$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	d3 e8                	shr    %cl,%eax$/;"	d
f010628d	obj/kern/kernel.asm	/^f010628d:	09 c2                	or     %eax,%edx$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	89 d0                	mov    %edx,%eax$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	89 ea                	mov    %ebp,%edx$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	f7 f6                	div    %esi$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	89 d5                	mov    %edx,%ebp$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	89 c3                	mov    %eax,%ebx$/;"	l
f0106299	obj/kern/kernel.asm	/^f0106299:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	72 10                	jb     f01062b1 <__udivdi3+0xc1>$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	89 f9                	mov    %edi,%ecx$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	d3 e6                	shl    %cl,%esi$/;"	d
f01062a9	obj/kern/kernel.asm	/^f01062a9:	39 c6                	cmp    %eax,%esi$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	73 07                	jae    f01062b4 <__udivdi3+0xc4>$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	39 d5                	cmp    %edx,%ebp$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	75 03                	jne    f01062b4 <__udivdi3+0xc4>$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	31 ff                	xor    %edi,%edi$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	89 d8                	mov    %ebx,%eax$/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8:	89 fa                	mov    %edi,%edx$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	5b                   	pop    %ebx$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	5e                   	pop    %esi$/;"	l
f01062bf	obj/kern/kernel.asm	/^f01062bf:	5f                   	pop    %edi$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	5d                   	pop    %ebp$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	c3                   	ret    $/;"	l
f01062c2	obj/kern/kernel.asm	/^f01062c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	31 ff                	xor    %edi,%edi$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	31 db                	xor    %ebx,%ebx$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	89 fa                	mov    %edi,%edx$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	5b                   	pop    %ebx$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	5e                   	pop    %esi$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	5f                   	pop    %edi$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	5d                   	pop    %ebp$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	c3                   	ret    $/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	90                   	nop$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01062e0	obj/kern/kernel.asm	/^f01062e0:	89 d8                	mov    %ebx,%eax$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	f7 f7                	div    %edi$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	31 ff                	xor    %edi,%edi$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	89 c3                	mov    %eax,%ebx$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01062ea	obj/kern/kernel.asm	/^f01062ea:	89 fa                	mov    %edi,%edx$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	5b                   	pop    %ebx$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	5e                   	pop    %esi$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	5f                   	pop    %edi$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	5d                   	pop    %ebp$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	c3                   	ret    $/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	39 ce                	cmp    %ecx,%esi$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	72 0c                	jb     f0106308 <__udivdi3+0x118>$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	31 db                	xor    %ebx,%ebx$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	0f 87 34 ff ff ff    	ja     f010623c <__udivdi3+0x4c>$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	e9 2a ff ff ff       	jmp    f010623c <__udivdi3+0x4c>$/;"	l
f0106312	obj/kern/kernel.asm	/^f0106312:	66 90                	xchg   %ax,%ax$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	66 90                	xchg   %ax,%ax$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	66 90                	xchg   %ax,%ax$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	66 90                	xchg   %ax,%ax$/;"	l
f010631a	obj/kern/kernel.asm	/^f010631a:	66 90                	xchg   %ax,%ax$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	66 90                	xchg   %ax,%ax$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	66 90                	xchg   %ax,%ax$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320 <__umoddi3>:$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	55                   	push   %ebp$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	57                   	push   %edi$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	56                   	push   %esi$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	53                   	push   %ebx$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f010632f	obj/kern/kernel.asm	/^f010632f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	85 d2                	test   %edx,%edx$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	89 f3                	mov    %esi,%ebx$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	75 1c                	jne    f0106368 <__umoddi3+0x48>$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	39 f7                	cmp    %esi,%edi$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	76 50                	jbe    f01063a0 <__umoddi3+0x80>$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	89 c8                	mov    %ecx,%eax$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	89 f2                	mov    %esi,%edx$/;"	l
f0106354	obj/kern/kernel.asm	/^f0106354:	f7 f7                	div    %edi$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	89 d0                	mov    %edx,%eax$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	31 d2                	xor    %edx,%edx$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	5b                   	pop    %ebx$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	5e                   	pop    %esi$/;"	l
f010635f	obj/kern/kernel.asm	/^f010635f:	5f                   	pop    %edi$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	5d                   	pop    %ebp$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	c3                   	ret    $/;"	l
f0106362	obj/kern/kernel.asm	/^f0106362:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	39 f2                	cmp    %esi,%edx$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	89 d0                	mov    %edx,%eax$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	77 52                	ja     f01063c0 <__umoddi3+0xa0>$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	75 5a                	jne    f01063d0 <__umoddi3+0xb0>$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	0f 82 e0 00 00 00    	jb     f0106460 <__umoddi3+0x140>$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	0f 86 d7 00 00 00    	jbe    f0106460 <__umoddi3+0x140>$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106394	obj/kern/kernel.asm	/^f0106394:	5b                   	pop    %ebx$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	5e                   	pop    %esi$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	5f                   	pop    %edi$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	5d                   	pop    %ebp$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	c3                   	ret    $/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	85 ff                	test   %edi,%edi$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	89 fd                	mov    %edi,%ebp$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	75 0b                	jne    f01063b1 <__umoddi3+0x91>$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	31 d2                	xor    %edx,%edx$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	f7 f7                	div    %edi$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	89 c5                	mov    %eax,%ebp$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	89 f0                	mov    %esi,%eax$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	31 d2                	xor    %edx,%edx$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	f7 f5                	div    %ebp$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	89 c8                	mov    %ecx,%eax$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	f7 f5                	div    %ebp$/;"	l
f01063bb	obj/kern/kernel.asm	/^f01063bb:	89 d0                	mov    %edx,%eax$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	eb 99                	jmp    f0106358 <__umoddi3+0x38>$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	90                   	nop$/;"	l
f01063c0	obj/kern/kernel.asm	/^f01063c0:	89 c8                	mov    %ecx,%eax$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	89 f2                	mov    %esi,%edx$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	5b                   	pop    %ebx$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	5e                   	pop    %esi$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	5f                   	pop    %edi$/;"	l
f01063ca	obj/kern/kernel.asm	/^f01063ca:	5d                   	pop    %ebp$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	c3                   	ret    $/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01063d3	obj/kern/kernel.asm	/^f01063d3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	29 ef                	sub    %ebp,%edi$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	d3 e0                	shl    %cl,%eax$/;"	d
f01063de	obj/kern/kernel.asm	/^f01063de:	89 f9                	mov    %edi,%ecx$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	89 f2                	mov    %esi,%edx$/;"	l
f01063e2	obj/kern/kernel.asm	/^f01063e2:	d3 ea                	shr    %cl,%edx$/;"	d
f01063e4	obj/kern/kernel.asm	/^f01063e4:	89 e9                	mov    %ebp,%ecx$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	09 c2                	or     %eax,%edx$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	89 f2                	mov    %esi,%edx$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	d3 e2                	shl    %cl,%edx$/;"	d
f01063f1	obj/kern/kernel.asm	/^f01063f1:	89 f9                	mov    %edi,%ecx$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	d3 e8                	shr    %cl,%eax$/;"	d
f01063fd	obj/kern/kernel.asm	/^f01063fd:	89 e9                	mov    %ebp,%ecx$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	89 c6                	mov    %eax,%esi$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106403	obj/kern/kernel.asm	/^f0106403:	89 f9                	mov    %edi,%ecx$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	89 d0                	mov    %edx,%eax$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	d3 e8                	shr    %cl,%eax$/;"	d
f0106409	obj/kern/kernel.asm	/^f0106409:	89 e9                	mov    %ebp,%ecx$/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	09 d8                	or     %ebx,%eax$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	89 d3                	mov    %edx,%ebx$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	89 f2                	mov    %esi,%edx$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	f7 34 24             	divl   (%esp)$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	89 d6                	mov    %edx,%esi$/;"	l
f0106416	obj/kern/kernel.asm	/^f0106416:	d3 e3                	shl    %cl,%ebx$/;"	d
f0106418	obj/kern/kernel.asm	/^f0106418:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	39 d6                	cmp    %edx,%esi$/;"	l
f010641e	obj/kern/kernel.asm	/^f010641e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	89 d1                	mov    %edx,%ecx$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	89 c3                	mov    %eax,%ebx$/;"	l
f0106426	obj/kern/kernel.asm	/^f0106426:	72 08                	jb     f0106430 <__umoddi3+0x110>$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	75 11                	jne    f010643b <__umoddi3+0x11b>$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	73 0b                	jae    f010643b <__umoddi3+0x11b>$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	89 d1                	mov    %edx,%ecx$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	89 c3                	mov    %eax,%ebx$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	29 da                	sub    %ebx,%edx$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	19 ce                	sbb    %ecx,%esi$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	89 f9                	mov    %edi,%ecx$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	89 f0                	mov    %esi,%eax$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	d3 e0                	shl    %cl,%eax$/;"	d
f0106449	obj/kern/kernel.asm	/^f0106449:	89 e9                	mov    %ebp,%ecx$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	d3 ea                	shr    %cl,%edx$/;"	d
f010644d	obj/kern/kernel.asm	/^f010644d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106451	obj/kern/kernel.asm	/^f0106451:	09 d0                	or     %edx,%eax$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	89 f2                	mov    %esi,%edx$/;"	l
f0106455	obj/kern/kernel.asm	/^f0106455:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106458	obj/kern/kernel.asm	/^f0106458:	5b                   	pop    %ebx$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	5e                   	pop    %esi$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a:	5f                   	pop    %edi$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	5d                   	pop    %ebp$/;"	l
f010645c	obj/kern/kernel.asm	/^f010645c:	c3                   	ret    $/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	29 f9                	sub    %edi,%ecx$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	19 d6                	sbb    %edx,%esi$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106468	obj/kern/kernel.asm	/^f0106468:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	e9 18 ff ff ff       	jmp    f0106389 <__umoddi3+0x69>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
game_dest	kern/game.h	/^	game_dest,$/;"	e	enum:__anon5
game_display	kern/game_draw.c	/^game_display(){$/;"	f
game_display	kern/game_draw.h	/^void game_display();$/;"	p	signature:()
game_loop	kern/game.c	/^game_loop(void) { \/* driven by keyboard interuption *\/$/;"	f	signature:(void)
game_loop	kern/game.h	/^void game_loop();$/;"	p	signature:()
game_out	kern/game.h	/^	game_out$/;"	e	enum:__anon5
game_space	kern/game.h	/^	game_space = 0,$/;"	e	enum:__anon5
game_wall	kern/game.h	/^	game_wall,$/;"	e	enum:__anon5
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getch	obj/kern/kernel.asm	/^		getch = getchar();$/;"	d
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
grey	kern/game_draw.h	5;"	d
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
height	kern/draw.c	40;"	d	file:
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lastenvx	kern/sched.c	/^static int lastenvx = -1;$/;"	v	file:
lastenvx	obj/kern/kernel.asm	/^                lastenvx = i;$/;"	d
lastenvx	obj/kern/kernel.asm	/^        lastenvx = cpunum();$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
log2	inc/stdio.h	34;"	d
log3	inc/stdio.h	40;"	d
log4	inc/stdio.h	46;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
map	kern/game_layout.h	/^static int map[9][9] = {$/;"	v
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	signature:(physaddr_t pa, size_t size)
mmio_map_region	kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
move_area_height	kern/draw.c	43;"	d	file:
move_area_width	kern/draw.c	44;"	d	file:
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
next_box_x	kern/game.c	13;"	d	file:
next_box_x	obj/kern/kernel.asm	/^#define next_box_x(index) (box[index].x+right)$/;"	d
next_box_y	kern/game.c	14;"	d	file:
next_box_y	obj/kern/kernel.asm	/^#define next_box_y(index) (box[index].y+down)$/;"	d
next_x	kern/game.c	11;"	d	file:
next_y	kern/game.c	12;"	d	file:
nextfree	kern/pmap.c	/^static char *nextfree;	\/\/ virtual address of next byte of free memory$/;"	v	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) (n+nextfree), PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	  npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^	  npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	75;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link ;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*)boot_alloc(sizeof(struct PageInfo)*npages);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgamt	obj/kern/kernel.asm	/^		pgamt = size;$/;"	d
pgamt	obj/kern/kernel.asm	/^		pgamt = size\/PGSIZE;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) (((uint8_t *)elfhdr) + elfhdr->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pink	kern/game_draw.h	8;"	d
pos	kern/game.h	/^struct pos{$/;"	s
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pos::x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
pos::y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
position_init	kern/game.c	/^position_init() {$/;"	f	file:
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prepare_buffer	kern/video.c	/^prepare_buffer(void) {$/;"	f	signature:(void)
prepare_buffer	kern/video.h	/^void prepare_buffer(void);$/;"	p	signature:(void)
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protag	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:pos
protag_infrontof_box	kern/game.c	/^protag_infrontof_box(int right, int down) { \/\/ if false return 0,else return box index + 1$/;"	f	file:	signature:(int right, int down)
protag_movable	kern/game.c	/^protag_movable(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protag_move	kern/game.c	/^protag_move(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^			pt = &pt_base[PTX(va)];$/;"	d
pt	obj/kern/kernel.asm	/^		pt = &pt_base[PTX(va)];$/;"	d
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pt_base	obj/kern/kernel.asm	/^			pt_base = ((pte_t *) page2kva(page_as_pt));$/;"	d
pt_base	obj/kern/kernel.asm	/^		pt_base = (pte_t *)pt_base_kva;$/;"	d
pte_store	obj/kern/kernel.asm	/^		pte_store = pgdir_walk(env->env_pgdir,(void *) start, 0);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
red	kern/game_draw.h	10;"	d
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	obj/kern/kernel.asm	/^		result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	signature:(void)
sched_halt	kern/sched.c	/^void sched_halt(void);$/;"	p	file:	signature:(void)
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int lastenvx = -1;$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static void*$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f	access:public
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f	access:public
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f	access:public
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_divzero	grade-lab3	/^def test_divzero():$/;"	f	access:public
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f	access:public
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f	access:public
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f	access:public
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f	access:public
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f	access:public
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f	access:public
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f	access:public
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f	access:public
test_faultread	grade-lab3	/^def test_faultread():$/;"	f	access:public
test_faultread	grade-lab4	/^def test_faultread():$/;"	f	access:public
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f	access:public
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f	access:public
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f	access:public
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f	access:public
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f	access:public
test_forktree	grade-lab4	/^def test_forktree():$/;"	f	access:public
test_hello	grade-lab3	/^def test_hello():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f	access:public
test_primes	grade-lab4	/^def test_primes():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f	access:public
test_softint	grade-lab3	/^def test_softint():$/;"	f	access:public
test_spin	grade-lab4	/^def test_spin():$/;"	f	access:public
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f	access:public
test_testbss	grade-lab3	/^def test_testbss():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	obj/kern/kernel.asm	/^uint8_t *vmem = VMEM_ADDR;$/;"	l
uint8_t	obj/kern/kernel.asm	/^uint8_t vbuf[SCR_SIZE];$/;"	l
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = oaddr;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = start;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vbuf	kern/video.c	/^uint8_t vbuf[SCR_SIZE];$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
victory	kern/game.c	/^victory() {$/;"	f	file:
vmem	kern/video.c	/^uint8_t *vmem = VMEM_ADDR;$/;"	v
vmem	obj/kern/kernel.asm	/^	vmem = VMEM_ADDR;$/;"	d
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	kern/draw.c	39;"	d	file:
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
yellow	kern/game_draw.h	7;"	d
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
