!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
-prefix	GNUmakefile	/^	git archive --prefix=lab$(LAB)\/ --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon3
ALT	kern/console.c	218;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	285;"	d	file:
CAPSLOCK	kern/console.c	220;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	14;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	26;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
CONSBUFSIZE	kern/console.c	381;"	d	file:
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	217;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	224;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_RTC	kern/kclock.h	9;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	37;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=2$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEN	kern/game_draw.c	48;"	d	file:
LEN	kern/game_draw.c	6;"	d	file:
LEN	obj/kern/kernel.asm	/^#define LEN 20$/;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	70;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	28;"	d	file:
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	214;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	221;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 3 09:38:38 EDT 2014$/;"	m
PADDR	kern/pmap.h	25;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIC	kern/draw.c	6;"	d	file:
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SCROLLLOCK	kern/console.c	222;"	d	file:
SCR_HEIGHT	kern/video.h	9;"	d
SCR_SIZE	kern/video.h	10;"	d
SCR_WIDTH	kern/video.h	8;"	d
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	216;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
V	conf/env.mk	/^V = @$/;"	m
VMEM_ADDR	kern/video.h	11;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	69;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_CONSOLE_H_	kern/video.h	2;"	d
_DRAW_H_	kern/draw.h	2;"	d
_GAME_DRAW_H_	kern/game_draw.h	2;"	d
_GAME_H_	kern/game.h	2;"	d
_GAME_LAYOUT_H_	kern/game_layout.h	2;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon4::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:	access:public
__anon4::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:	access:public
__anon4::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:	access:public
__game_restart	obj/kern/kernel.asm	/^__game_restart:$/;"	l
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
anchor_border_bottom	kern/draw.c	49;"	d	file:
anchor_border_bottom	obj/kern/kernel.asm	/^#define anchor_border_bottom (move_area_height+anchor_border_top-1)$/;"	d
anchor_border_left	kern/draw.c	46;"	d	file:
anchor_border_right	kern/draw.c	48;"	d	file:
anchor_border_right	obj/kern/kernel.asm	/^#define anchor_border_right (move_area_width+anchor_border_left-1)$/;"	d
anchor_border_top	kern/draw.c	47;"	d	file:
anchor_border_top	obj/kern/kernel.asm	/^#define anchor_border_top 0$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
black	kern/game_draw.h	9;"	d
blue	kern/game_draw.h	6;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
box	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	kern/draw.c	/^static int c[width*height]=PIC;$/;"	v	file:
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
display_buffer	kern/video.c	/^display_buffer(void) {$/;"	f	signature:(void)
display_buffer	kern/video.h	/^void display_buffer(void);$/;"	p	signature:(void)
draw_box	kern/game_draw.c	/^draw_box() { \/*and protagonist*\/$/;"	f	file:
draw_color	kern/draw.c	/^draw_color()$/;"	f
draw_color	kern/draw.h	/^void draw_color();$/;"	p	signature:()
draw_map	kern/game_draw.c	/^draw_map() {$/;"	f	file:
draw_pixel	kern/video.h	/^draw_pixel(int x, int y, int color) {$/;"	f	signature:(int x, int y, int color)
draw_square	kern/video.c	/^draw_square(int y, int x, int color, int len) {$/;"	f	signature:(int y, int x, int color, int len)
draw_square	kern/video.h	/^void draw_square(int x, int y, int color, int len);$/;"	p	signature:(int x, int y, int color, int len)
draw_string	kern/video.h	/^void draw_string(const char*, int, int, int);$/;"	p	signature:(const char*, int, int, int)
draw_tux	kern/draw.c	/^draw_tux() $/;"	f
draw_tux	kern/draw.h	/^void draw_tux();$/;"	p	signature:()
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
extern	obj/kern/kernel.asm	/^extern uint8_t *vmem;$/;"	l
extern	obj/kern/kernel.asm	/^extern uint8_t vbuf[];$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 c0 11 00       	mov    $0x11c000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 c0 11 f0       	mov    $0xf011c000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100046	obj/kern/kernel.asm	/^f0100046:	b8 c0 e3 12 f0       	mov    $0xf012e3c0,%eax$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	2d 04 e3 11 f0       	sub    $0xf011e304,%eax$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	00 $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	c7 04 24 04 e3 11 f0 	movl   $0xf011e304,(%esp)$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 6e 21 00 00       	call   f01021d6 <memset>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	e8 7e 04 00 00       	call   f01004eb <cons_init>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	00 $/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	c7 04 24 20 26 10 f0 	movl   $0xf0102620,(%esp)$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	e8 f1 0e 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	e8 c8 0c 00 00       	call   f0100d4e <mem_init>$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	c7 04 24 3b 26 10 f0 	movl   $0xf010263b,(%esp)$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	e8 e0 0e 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	e8 8e 16 00 00       	call   f0101725 <game_loop>$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	c7 04 24 54 26 10 f0 	movl   $0xf0102654,(%esp)$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	e8 cf 0e 00 00       	call   f0100f72 <cprintf>$/;"	l
f01000a3	obj/kern/kernel.asm	/^f01000a3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	e8 5f 06 00 00       	call   f010070e <monitor>$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	eb f2                	jmp    f01000a3 <i386_init+0x63>$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1 <_panic>:$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	55                   	push   %ebp$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	56                   	push   %esi$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	53                   	push   %ebx$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	83 3d 80 e9 11 f0 00 	cmpl   $0x0,0xf011e980$/;"	l
f01000c3	obj/kern/kernel.asm	/^f01000c3:	75 3d                	jne    f0100102 <_panic+0x51>$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	89 35 80 e9 11 f0    	mov    %esi,0xf011e980$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	fa                   	cli    $/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	fc                   	cld    $/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000d0	obj/kern/kernel.asm	/^f01000d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	c7 04 24 6c 26 10 f0 	movl   $0xf010266c,(%esp)$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	e8 88 0e 00 00       	call   f0100f72 <cprintf>$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	e8 49 0e 00 00       	call   f0100f3f <vcprintf>$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	c7 04 24 a8 26 10 f0 	movl   $0xf01026a8,(%esp)$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	e8 70 0e 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	e8 00 06 00 00       	call   f010070e <monitor>$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	eb f2                	jmp    f0100102 <_panic+0x51>$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110 <_warn>:$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	55                   	push   %ebp$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	89 e5                	mov    %esp,%ebp$/;"	l
f0100113	obj/kern/kernel.asm	/^f0100113:	53                   	push   %ebx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	c7 04 24 84 26 10 f0 	movl   $0xf0102684,(%esp)$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	e8 3e 0e 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	e8 fc 0d 00 00       	call   f0100f3f <vcprintf>$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c7 04 24 a8 26 10 f0 	movl   $0xf01026a8,(%esp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	e8 23 0e 00 00       	call   f0100f72 <cprintf>$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	5b                   	pop    %ebx$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	5d                   	pop    %ebp$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	c3                   	ret    $/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	00 00                	add    %al,(%eax)$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158 <delay>:$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	55                   	push   %ebp$/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	89 e5                	mov    %esp,%ebp$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	ec                   	in     (%dx),%al$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	ec                   	in     (%dx),%al$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	ec                   	in     (%dx),%al$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	ec                   	in     (%dx),%al$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	5d                   	pop    %ebp$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	c3                   	ret    $/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166 <serial_proc_data>:$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	55                   	push   %ebp$/;"	l
f0100167	obj/kern/kernel.asm	/^f0100167:	89 e5                	mov    %esp,%ebp$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	ec                   	in     (%dx),%al$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	a8 01                	test   $0x1,%al$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	74 08                	je     f010017b <serial_proc_data+0x15>$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	ec                   	in     (%dx),%al$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	eb 05                	jmp    f0100180 <serial_proc_data+0x1a>$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	5d                   	pop    %ebp$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	c3                   	ret    $/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182 <cons_intr>:$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	55                   	push   %ebp$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	89 e5                	mov    %esp,%ebp$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	53                   	push   %ebx$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	89 c3                	mov    %eax,%ebx$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	eb 29                	jmp    f01001b6 <cons_intr+0x34>$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	85 c0                	test   %eax,%eax$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	74 25                	je     f01001b6 <cons_intr+0x34>$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	8b 15 44 e5 11 f0    	mov    0xf011e544,%edx$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	88 82 40 e3 11 f0    	mov    %al,-0xfee1cc0(%edx)$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	a3 44 e5 11 f0       	mov    %eax,0xf011e544$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	75 0a                	jne    f01001b6 <cons_intr+0x34>$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	c7 05 44 e5 11 f0 00 	movl   $0x0,0xf011e544$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	00 00 00 $/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	ff d3                	call   *%ebx$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	75 d0                	jne    f010018d <cons_intr+0xb>$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	83 c4 04             	add    $0x4,%esp$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	5b                   	pop    %ebx$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	5d                   	pop    %ebp$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	c3                   	ret    $/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3 <cons_putc>:$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	55                   	push   %ebp$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	57                   	push   %edi$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	56                   	push   %esi$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	53                   	push   %ebx$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	89 c6                	mov    %eax,%esi$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	eb 05                	jmp    f01001df <cons_putc+0x1c>$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	e8 79 ff ff ff       	call   f0100158 <delay>$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	89 fa                	mov    %edi,%edx$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	ec                   	in     (%dx),%al$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	a8 20                	test   $0x20,%al$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	75 03                	jne    f01001e9 <cons_putc+0x26>$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	4b                   	dec    %ebx$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	75 f1                	jne    f01001da <cons_putc+0x17>$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	89 f2                	mov    %esi,%edx$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	89 f0                	mov    %esi,%eax$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	ee                   	out    %al,(%dx)$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f0100200	obj/kern/kernel.asm	/^f0100200:	eb 05                	jmp    f0100207 <cons_putc+0x44>$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	e8 51 ff ff ff       	call   f0100158 <delay>$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	89 fa                	mov    %edi,%edx$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	ec                   	in     (%dx),%al$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	84 c0                	test   %al,%al$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	78 03                	js     f0100211 <cons_putc+0x4e>$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	4b                   	dec    %ebx$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	75 f1                	jne    f0100202 <cons_putc+0x3f>$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	ee                   	out    %al,(%dx)$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	b2 7a                	mov    $0x7a,%dl$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	b0 0d                	mov    $0xd,%al$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	ee                   	out    %al,(%dx)$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	b0 08                	mov    $0x8,%al$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	ee                   	out    %al,(%dx)$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f0100228	obj/kern/kernel.asm	/^f0100228:	75 06                	jne    f0100230 <cons_putc+0x6d>$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	89 f0                	mov    %esi,%eax$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	74 78                	je     f01002b4 <cons_putc+0xf1>$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	7f 0b                	jg     f010024c <cons_putc+0x89>$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	0f 85 9e 00 00 00    	jne    f01002e8 <cons_putc+0x125>$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	eb 10                	jmp    f010025c <cons_putc+0x99>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	74 39                	je     f010028a <cons_putc+0xc7>$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	0f 85 8e 00 00 00    	jne    f01002e8 <cons_putc+0x125>$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	eb 36                	jmp    f0100292 <cons_putc+0xcf>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	66 a1 54 e5 11 f0    	mov    0xf011e554,%ax$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	66 85 c0             	test   %ax,%ax$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	0f 84 e2 00 00 00    	je     f010034d <cons_putc+0x18a>$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	48                   	dec    %eax$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	66 a3 54 e5 11 f0    	mov    %ax,0xf011e554$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	83 ce 20             	or     $0x20,%esi$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	8b 15 50 e5 11 f0    	mov    0xf011e550,%edx$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	eb 78                	jmp    f0100302 <cons_putc+0x13f>$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	66 83 05 54 e5 11 f0 	addw   $0x50,0xf011e554$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	50 $/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	66 8b 0d 54 e5 11 f0 	mov    0xf011e554,%cx$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	89 c8                	mov    %ecx,%eax$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	66 f7 f3             	div    %bx$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	66 29 d1             	sub    %dx,%cx$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	66 89 0d 54 e5 11 f0 	mov    %cx,0xf011e554$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	eb 4e                	jmp    f0100302 <cons_putc+0x13f>$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	e8 05 ff ff ff       	call   f01001c3 <cons_putc>$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	e8 fb fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	e8 f1 fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	e8 e7 fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	e8 dd fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	eb 1a                	jmp    f0100302 <cons_putc+0x13f>$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	66 a1 54 e5 11 f0    	mov    0xf011e554,%ax$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	8b 15 50 e5 11 f0    	mov    0xf011e550,%edx$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	40                   	inc    %eax$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	66 a3 54 e5 11 f0    	mov    %ax,0xf011e554$/;"	l
f0100302	obj/kern/kernel.asm	/^f0100302:	66 81 3d 54 e5 11 f0 	cmpw   $0x7cf,0xf011e554$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	cf 07 $/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	76 40                	jbe    f010034d <cons_putc+0x18a>$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	a1 50 e5 11 f0       	mov    0xf011e550,%eax$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	00 $/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	e8 f4 1e 00 00       	call   f0102220 <memmove>$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	8b 15 50 e5 11 f0    	mov    0xf011e550,%edx$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	40                   	inc    %eax$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	75 f2                	jne    f0100337 <cons_putc+0x174>$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	66 83 2d 54 e5 11 f0 	subw   $0x50,0xf011e554$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	50 $/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	8b 0d 4c e5 11 f0    	mov    0xf011e54c,%ecx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	b0 0e                	mov    $0xe,%al$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	89 ca                	mov    %ecx,%edx$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	ee                   	out    %al,(%dx)$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	66 8b 35 54 e5 11 f0 	mov    0xf011e554,%si$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	89 f0                	mov    %esi,%eax$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	89 da                	mov    %ebx,%edx$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	ee                   	out    %al,(%dx)$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	b0 0f                	mov    $0xf,%al$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	89 ca                	mov    %ecx,%edx$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	ee                   	out    %al,(%dx)$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	89 f0                	mov    %esi,%eax$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	89 da                	mov    %ebx,%edx$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	ee                   	out    %al,(%dx)$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	5b                   	pop    %ebx$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	5e                   	pop    %esi$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	5f                   	pop    %edi$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	5d                   	pop    %ebp$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	c3                   	ret    $/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d <kbd_proc_data>:$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	55                   	push   %ebp$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	53                   	push   %ebx$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	ec                   	in     (%dx),%al$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	a8 01                	test   $0x1,%al$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	0f 84 d8 00 00 00    	je     f010046a <kbd_proc_data+0xed>$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	b2 60                	mov    $0x60,%dl$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	ec                   	in     (%dx),%al$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	88 c2                	mov    %al,%dl$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	75 11                	jne    f01003ac <kbd_proc_data+0x2f>$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	83 0d 48 e5 11 f0 40 	orl    $0x40,0xf011e548$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	e9 c3 00 00 00       	jmp    f010046f <kbd_proc_data+0xf2>$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	84 c0                	test   %al,%al$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	79 33                	jns    f01003e3 <kbd_proc_data+0x66>$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	8b 0d 48 e5 11 f0    	mov    0xf011e548,%ecx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	75 05                	jne    f01003c0 <kbd_proc_data+0x43>$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	88 c2                	mov    %al,%dl$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	8a 82 e0 26 10 f0    	mov    -0xfefd920(%edx),%al$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	83 c8 40             	or     $0x40,%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	f7 d0                	not    %eax$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	21 c1                	and    %eax,%ecx$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	89 0d 48 e5 11 f0    	mov    %ecx,0xf011e548$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	e9 8c 00 00 00       	jmp    f010046f <kbd_proc_data+0xf2>$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	8b 0d 48 e5 11 f0    	mov    0xf011e548,%ecx$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	74 0e                	je     f01003fc <kbd_proc_data+0x7f>$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	88 c2                	mov    %al,%dl$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	89 0d 48 e5 11 f0    	mov    %ecx,0xf011e548$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	0f b6 82 e0 26 10 f0 	movzbl -0xfefd920(%edx),%eax$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	0b 05 48 e5 11 f0    	or     0xf011e548,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	0f b6 8a e0 27 10 f0 	movzbl -0xfefd820(%edx),%ecx$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	31 c8                	xor    %ecx,%eax$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	a3 48 e5 11 f0       	mov    %eax,0xf011e548$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	89 c1                	mov    %eax,%ecx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	8b 0c 8d e0 28 10 f0 	mov    -0xfefd720(,%ecx,4),%ecx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	a8 08                	test   $0x8,%al$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	74 18                	je     f0100446 <kbd_proc_data+0xc9>$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	77 05                	ja     f010043b <kbd_proc_data+0xbe>$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	eb 0b                	jmp    f0100446 <kbd_proc_data+0xc9>$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	77 03                	ja     f0100446 <kbd_proc_data+0xc9>$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	f7 d0                	not    %eax$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	a8 06                	test   $0x6,%al$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	75 23                	jne    f010046f <kbd_proc_data+0xf2>$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	75 1b                	jne    f010046f <kbd_proc_data+0xf2>$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	c7 04 24 9e 26 10 f0 	movl   $0xf010269e,(%esp)$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	e8 12 0b 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	b0 03                	mov    $0x3,%al$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	ee                   	out    %al,(%dx)$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	eb 05                	jmp    f010046f <kbd_proc_data+0xf2>$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	5b                   	pop    %ebx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	5d                   	pop    %ebp$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	c3                   	ret    $/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477 <serial_intr>:$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	55                   	push   %ebp$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	89 e5                	mov    %esp,%ebp$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	80 3d 20 e3 11 f0 00 	cmpb   $0x0,0xf011e320$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	74 0a                	je     f0100490 <serial_intr+0x19>$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	b8 66 01 10 f0       	mov    $0xf0100166,%eax$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	e8 f2 fc ff ff       	call   f0100182 <cons_intr>$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	c9                   	leave  $/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	c3                   	ret    $/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492 <kbd_intr>:$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	55                   	push   %ebp$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	89 e5                	mov    %esp,%ebp$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	b8 7d 03 10 f0       	mov    $0xf010037d,%eax$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	e8 e0 fc ff ff       	call   f0100182 <cons_intr>$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	c9                   	leave  $/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	c3                   	ret    $/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4 <cons_getc>:$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	55                   	push   %ebp$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	e8 c8 ff ff ff       	call   f0100477 <serial_intr>$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	e8 de ff ff ff       	call   f0100492 <kbd_intr>$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	8b 15 40 e5 11 f0    	mov    0xf011e540,%edx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	3b 15 44 e5 11 f0    	cmp    0xf011e544,%edx$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	74 22                	je     f01004e4 <cons_getc+0x40>$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	0f b6 82 40 e3 11 f0 	movzbl -0xfee1cc0(%edx),%eax$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	42                   	inc    %edx$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	89 15 40 e5 11 f0    	mov    %edx,0xf011e540$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	75 11                	jne    f01004e9 <cons_getc+0x45>$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	c7 05 40 e5 11 f0 00 	movl   $0x0,0xf011e540$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	00 00 00 $/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	eb 05                	jmp    f01004e9 <cons_getc+0x45>$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	c9                   	leave  $/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	c3                   	ret    $/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb <cons_init>:$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	55                   	push   %ebp$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	57                   	push   %edi$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	56                   	push   %esi$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	53                   	push   %ebx$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	5a a5 $/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	74 11                	je     f0100521 <cons_init+0x36>$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	c7 05 4c e5 11 f0 b4 	movl   $0x3b4,0xf011e54c$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	03 00 00 $/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	eb 16                	jmp    f0100537 <cons_init+0x4c>$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	c7 05 4c e5 11 f0 d4 	movl   $0x3d4,0xf011e54c$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	03 00 00 $/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	8b 0d 4c e5 11 f0    	mov    0xf011e54c,%ecx$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	b0 0e                	mov    $0xe,%al$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	ee                   	out    %al,(%dx)$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	89 da                	mov    %ebx,%edx$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	ec                   	in     (%dx),%al$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	0f b6 f8             	movzbl %al,%edi$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	b0 0f                	mov    $0xf,%al$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	89 ca                	mov    %ecx,%edx$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	ee                   	out    %al,(%dx)$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	89 da                	mov    %ebx,%edx$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	ec                   	in     (%dx),%al$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	89 35 50 e5 11 f0    	mov    %esi,0xf011e550$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	09 df                	or     %ebx,%edi$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	66 89 3d 54 e5 11 f0 	mov    %di,0xf011e554$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	b0 00                	mov    $0x0,%al$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	89 da                	mov    %ebx,%edx$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	ee                   	out    %al,(%dx)$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	b0 80                	mov    $0x80,%al$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	ee                   	out    %al,(%dx)$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	b0 0c                	mov    $0xc,%al$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	ee                   	out    %al,(%dx)$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	b0 00                	mov    $0x0,%al$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	ee                   	out    %al,(%dx)$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	b0 03                	mov    $0x3,%al$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	ee                   	out    %al,(%dx)$/;"	l
f010058b	obj/kern/kernel.asm	/^f010058b:	b2 fc                	mov    $0xfc,%dl$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	b0 00                	mov    $0x0,%al$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	ee                   	out    %al,(%dx)$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	b0 01                	mov    $0x1,%al$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	ee                   	out    %al,(%dx)$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	ec                   	in     (%dx),%al$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	3c ff                	cmp    $0xff,%al$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	a2 20 e3 11 f0       	mov    %al,0xf011e320$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	89 da                	mov    %ebx,%edx$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	ec                   	in     (%dx),%al$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	89 ca                	mov    %ecx,%edx$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	ec                   	in     (%dx),%al$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	75 0c                	jne    f01005be <cons_init+0xd3>$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	c7 04 24 aa 26 10 f0 	movl   $0xf01026aa,(%esp)$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	e8 b4 09 00 00       	call   f0100f72 <cprintf>$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	5b                   	pop    %ebx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	5e                   	pop    %esi$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	5f                   	pop    %edi$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	5d                   	pop    %ebp$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	c3                   	ret    $/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6 <cputchar>:$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	55                   	push   %ebp$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	e8 ef fb ff ff       	call   f01001c3 <cons_putc>$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	c9                   	leave  $/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	c3                   	ret    $/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6 <getchar>:$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	55                   	push   %ebp$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	e8 c3 fe ff ff       	call   f01004a4 <cons_getc>$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	85 c0                	test   %eax,%eax$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	74 f7                	je     f01005dc <getchar+0x6>$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	c9                   	leave  $/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	c3                   	ret    $/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7 <iscons>:$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	55                   	push   %ebp$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	5d                   	pop    %ebp$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	c3                   	ret    $/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	00 00                	add    %al,(%eax)$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4 <mon_kerninfo>:$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	55                   	push   %ebp$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	c7 04 24 f0 28 10 f0 	movl   $0xf01028f0,(%esp)$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	e8 6c 09 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	00 $/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	c7 04 24 7c 29 10 f0 	movl   $0xf010297c,(%esp)$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	e8 58 09 00 00       	call   f0100f72 <cprintf>$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	00 $/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	f0 $/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	c7 04 24 a4 29 10 f0 	movl   $0xf01029a4,(%esp)$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	e8 3c 09 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	c7 44 24 08 1a 26 10 	movl   $0x10261a,0x8(%esp)$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	00 $/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	c7 44 24 04 1a 26 10 	movl   $0xf010261a,0x4(%esp)$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	f0 $/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	c7 04 24 c8 29 10 f0 	movl   $0xf01029c8,(%esp)$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	e8 20 09 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	c7 44 24 08 04 e3 11 	movl   $0x11e304,0x8(%esp)$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	00 $/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	c7 44 24 04 04 e3 11 	movl   $0xf011e304,0x4(%esp)$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	f0 $/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	c7 04 24 ec 29 10 f0 	movl   $0xf01029ec,(%esp)$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	e8 04 09 00 00       	call   f0100f72 <cprintf>$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	c7 44 24 08 c0 e3 12 	movl   $0x12e3c0,0x8(%esp)$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	00 $/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	c7 44 24 04 c0 e3 12 	movl   $0xf012e3c0,0x4(%esp)$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	f0 $/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	c7 04 24 10 2a 10 f0 	movl   $0xf0102a10,(%esp)$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	e8 e8 08 00 00       	call   f0100f72 <cprintf>$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	b8 bf e7 12 f0       	mov    $0xf012e7bf,%eax$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	89 c2                	mov    %eax,%edx$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	85 c0                	test   %eax,%eax$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	79 06                	jns    f01006a5 <mon_kerninfo+0xb1>$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	c7 04 24 34 2a 10 f0 	movl   $0xf0102a34,(%esp)$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	e8 ba 08 00 00       	call   f0100f72 <cprintf>$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	c9                   	leave  $/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	c3                   	ret    $/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf <mon_help>:$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	55                   	push   %ebp$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	c7 44 24 08 09 29 10 	movl   $0xf0102909,0x8(%esp)$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	f0 $/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	c7 44 24 04 27 29 10 	movl   $0xf0102927,0x4(%esp)$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	f0 $/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	c7 04 24 2c 29 10 f0 	movl   $0xf010292c,(%esp)$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	e8 91 08 00 00       	call   f0100f72 <cprintf>$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	c7 44 24 08 60 2a 10 	movl   $0xf0102a60,0x8(%esp)$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	f0 $/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	c7 44 24 04 35 29 10 	movl   $0xf0102935,0x4(%esp)$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	f0 $/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	c7 04 24 2c 29 10 f0 	movl   $0xf010292c,(%esp)$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	e8 75 08 00 00       	call   f0100f72 <cprintf>$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	c9                   	leave  $/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	c3                   	ret    $/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704 <mon_backtrace>:$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	55                   	push   %ebp$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	89 e5                	mov    %esp,%ebp$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	5d                   	pop    %ebp$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	c3                   	ret    $/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e <monitor>:$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	55                   	push   %ebp$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	57                   	push   %edi$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	56                   	push   %esi$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	53                   	push   %ebx$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	c7 04 24 88 2a 10 f0 	movl   $0xf0102a88,(%esp)$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	e8 4f 08 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	c7 04 24 ac 2a 10 f0 	movl   $0xf0102aac,(%esp)$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	e8 43 08 00 00       	call   f0100f72 <cprintf>$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	c7 04 24 3e 29 10 f0 	movl   $0xf010293e,(%esp)$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	e8 6e 18 00 00       	call   f0101fac <readline>$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	85 c0                	test   %eax,%eax$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	74 ee                	je     f0100732 <monitor+0x24>$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	eb 04                	jmp    f0100756 <monitor+0x48>$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	43                   	inc    %ebx$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	8a 03                	mov    (%ebx),%al$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	84 c0                	test   %al,%al$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	74 5e                	je     f01007ba <monitor+0xac>$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	0f be c0             	movsbl %al,%eax$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	c7 04 24 42 29 10 f0 	movl   $0xf0102942,(%esp)$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	e8 32 1a 00 00       	call   f01021a1 <strchr>$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	85 c0                	test   %eax,%eax$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	75 df                	jne    f0100752 <monitor+0x44>$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	74 42                	je     f01007ba <monitor+0xac>$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	75 16                	jne    f0100793 <monitor+0x85>$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	00 $/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	c7 04 24 47 29 10 f0 	movl   $0xf0102947,(%esp)$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	e8 e1 07 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	eb 9f                	jmp    f0100732 <monitor+0x24>$/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	46                   	inc    %esi$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	eb 01                	jmp    f010079b <monitor+0x8d>$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	43                   	inc    %ebx$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	8a 03                	mov    (%ebx),%al$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	84 c0                	test   %al,%al$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	74 b5                	je     f0100756 <monitor+0x48>$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	0f be c0             	movsbl %al,%eax$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	c7 04 24 42 29 10 f0 	movl   $0xf0102942,(%esp)$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	e8 ed 19 00 00       	call   f01021a1 <strchr>$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	85 c0                	test   %eax,%eax$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	74 e2                	je     f010079a <monitor+0x8c>$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	eb 9c                	jmp    f0100756 <monitor+0x48>$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	00 $/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	85 f6                	test   %esi,%esi$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	0f 84 68 ff ff ff    	je     f0100732 <monitor+0x24>$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	c7 44 24 04 27 29 10 	movl   $0xf0102927,0x4(%esp)$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	f0 $/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	e8 71 19 00 00       	call   f010214e <strcmp>$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	85 c0                	test   %eax,%eax$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	74 1b                	je     f01007fc <monitor+0xee>$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	c7 44 24 04 35 29 10 	movl   $0xf0102935,0x4(%esp)$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	f0 $/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	e8 5a 19 00 00       	call   f010214e <strcmp>$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	85 c0                	test   %eax,%eax$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	75 2c                	jne    f0100824 <monitor+0x116>$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	b0 01                	mov    $0x1,%al$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	eb 05                	jmp    f0100801 <monitor+0xf3>$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	01 d0                	add    %edx,%eax$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	ff 14 85 dc 2a 10 f0 	call   *-0xfefd524(,%eax,4)$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	85 c0                	test   %eax,%eax$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	78 1d                	js     f010083c <monitor+0x12e>$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	e9 0e ff ff ff       	jmp    f0100732 <monitor+0x24>$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	c7 04 24 64 29 10 f0 	movl   $0xf0102964,(%esp)$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	e8 3b 07 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	e9 f6 fe ff ff       	jmp    f0100732 <monitor+0x24>$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	5b                   	pop    %ebx$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	5e                   	pop    %esi$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	5f                   	pop    %edi$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	5d                   	pop    %ebp$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	c3                   	ret    $/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844 <boot_alloc>:$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	55                   	push   %ebp$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	89 e5                	mov    %esp,%ebp$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	83 3d 5c e5 11 f0 00 	cmpl   $0x0,0xf011e55c$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	75 11                	jne    f0100861 <boot_alloc+0x1d>$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	ba bf f3 12 f0       	mov    $0xf012f3bf,%edx$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	89 15 5c e5 11 f0    	mov    %edx,0xf011e55c$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	85 c0                	test   %eax,%eax$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	75 08                	jne    f010086d <boot_alloc+0x29>$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	8b 15 5c e5 11 f0    	mov    0xf011e55c,%edx$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	eb 17                	jmp    f0100884 <boot_alloc+0x40>$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	8b 15 5c e5 11 f0    	mov    0xf011e55c,%edx$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	a3 5c e5 11 f0       	mov    %eax,0xf011e55c$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	89 d0                	mov    %edx,%eax$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	5d                   	pop    %ebp$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	c3                   	ret    $/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888 <check_va2pa>:$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	55                   	push   %ebp$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	89 e5                	mov    %esp,%ebp$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	89 d1                	mov    %edx,%ecx$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	a8 01                	test   $0x1,%al$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	74 4d                	je     f01008e7 <check_va2pa+0x5f>$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	89 c1                	mov    %eax,%ecx$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	3b 0d 84 e9 11 f0    	cmp    0xf011e984,%ecx$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	72 20                	jb     f01008cc <check_va2pa+0x44>$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	c7 44 24 08 ec 2a 10 	movl   $0xf0102aec,0x8(%esp)$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	f0 $/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	c7 44 24 04 93 02 00 	movl   $0x293,0x4(%esp)$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	00 $/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	e8 e5 f7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	a8 01                	test   $0x1,%al$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	74 0e                	je     f01008ee <check_va2pa+0x66>$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	eb 0c                	jmp    f01008f3 <check_va2pa+0x6b>$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	eb 05                	jmp    f01008f3 <check_va2pa+0x6b>$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	c9                   	leave  $/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	c3                   	ret    $/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5 <nvram_read>:$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	55                   	push   %ebp$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	56                   	push   %esi$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	53                   	push   %ebx$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	89 c3                	mov    %eax,%ebx$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	e8 fd 05 00 00       	call   f0100f04 <mc146818_read>$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	89 c6                	mov    %eax,%esi$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	43                   	inc    %ebx$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	e8 f2 05 00 00       	call   f0100f04 <mc146818_read>$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	09 f0                	or     %esi,%eax$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	83 c4 10             	add    $0x10,%esp$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	5b                   	pop    %ebx$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	5e                   	pop    %esi$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	5d                   	pop    %ebp$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	c3                   	ret    $/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e <check_page_free_list>:$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	55                   	push   %ebp$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	57                   	push   %edi$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	56                   	push   %esi$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	53                   	push   %ebx$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	3c 01                	cmp    $0x1,%al$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	19 f6                	sbb    %esi,%esi$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	46                   	inc    %esi$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	8b 15 60 e5 11 f0    	mov    0xf011e560,%edx$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	85 d2                	test   %edx,%edx$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	75 1c                	jne    f0100958 <check_page_free_list+0x3a>$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	c7 44 24 08 10 2b 10 	movl   $0xf0102b10,0x8(%esp)$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	f0 $/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	c7 44 24 04 d6 01 00 	movl   $0x1d6,0x4(%esp)$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	00 $/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	e8 59 f7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	84 c0                	test   %al,%al$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	74 4b                	je     f01009a7 <check_page_free_list+0x89>$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	89 d0                	mov    %edx,%eax$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	2b 05 8c e9 11 f0    	sub    0xf011e98c,%eax$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	39 c6                	cmp    %eax,%esi$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	0f 96 c0             	setbe  %al$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	8b 4c 85 d8          	mov    -0x28(%ebp,%eax,4),%ecx$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	89 11                	mov    %edx,(%ecx)$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	89 54 85 d8          	mov    %edx,-0x28(%ebp,%eax,4)$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	8b 12                	mov    (%edx),%edx$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	85 d2                	test   %edx,%edx$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	75 da                	jne    f0100968 <check_page_free_list+0x4a>$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	89 10                	mov    %edx,(%eax)$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	a3 60 e5 11 f0       	mov    %eax,0xf011e560$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	8b 1d 60 e5 11 f0    	mov    0xf011e560,%ebx$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	eb 63                	jmp    f0100a12 <check_page_free_list+0xf4>$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	89 d8                	mov    %ebx,%eax$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	2b 05 8c e9 11 f0    	sub    0xf011e98c,%eax$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	89 c2                	mov    %eax,%edx$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	39 d6                	cmp    %edx,%esi$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	76 4a                	jbe    f0100a10 <check_page_free_list+0xf2>$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	89 c2                	mov    %eax,%edx$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	3b 15 84 e9 11 f0    	cmp    0xf011e984,%edx$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	72 20                	jb     f01009f3 <check_page_free_list+0xd5>$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	c7 44 24 08 ec 2a 10 	movl   $0xf0102aec,0x8(%esp)$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	f0 $/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	c7 44 24 04 52 00 00 	movl   $0x52,0x4(%esp)$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	00 $/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	c7 04 24 40 2c 10 f0 	movl   $0xf0102c40,(%esp)$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	e8 be f6 ff ff       	call   f01000b1 <_panic>$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	00 $/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	00 $/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	e8 c6 17 00 00       	call   f01021d6 <memset>$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	85 db                	test   %ebx,%ebx$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	75 99                	jne    f01009af <check_page_free_list+0x91>$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	e8 24 fe ff ff       	call   f0100844 <boot_alloc>$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	8b 15 60 e5 11 f0    	mov    0xf011e560,%edx$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	8b 0d 8c e9 11 f0    	mov    0xf011e98c,%ecx$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	a1 84 e9 11 f0       	mov    0xf011e984,%eax$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	e9 91 01 00 00       	jmp    f0100bde <check_page_free_list+0x2c0>$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	73 24                	jae    f0100a76 <check_page_free_list+0x158>$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	c7 44 24 0c 4e 2c 10 	movl   $0xf0102c4e,0xc(%esp)$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	f0 $/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	f0 $/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	c7 44 24 04 f0 01 00 	movl   $0x1f0,0x4(%esp)$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	00 $/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	e8 3b f6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	72 24                	jb     f0100a9f <check_page_free_list+0x181>$/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	c7 44 24 0c 6f 2c 10 	movl   $0xf0102c6f,0xc(%esp)$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	f0 $/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	f0 $/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	c7 44 24 04 f1 01 00 	movl   $0x1f1,0x4(%esp)$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	00 $/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	e8 12 f6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	89 d0                	mov    %edx,%eax$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	a8 07                	test   $0x7,%al$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	74 24                	je     f0100acc <check_page_free_list+0x1ae>$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	c7 44 24 0c 34 2b 10 	movl   $0xf0102b34,0xc(%esp)$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	f0 $/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	f0 $/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	c7 44 24 04 f2 01 00 	movl   $0x1f2,0x4(%esp)$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	00 $/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	e8 e5 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	75 24                	jne    f0100af8 <check_page_free_list+0x1da>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	c7 44 24 0c 83 2c 10 	movl   $0xf0102c83,0xc(%esp)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	f0 $/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	f0 $/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	c7 44 24 04 f5 01 00 	movl   $0x1f5,0x4(%esp)$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	00 $/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	e8 b9 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	75 24                	jne    f0100b23 <check_page_free_list+0x205>$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	c7 44 24 0c 94 2c 10 	movl   $0xf0102c94,0xc(%esp)$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	f0 $/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	f0 $/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	c7 44 24 04 f6 01 00 	movl   $0x1f6,0x4(%esp)$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	00 $/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	e8 8e f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	75 24                	jne    f0100b4e <check_page_free_list+0x230>$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	c7 44 24 0c 68 2b 10 	movl   $0xf0102b68,0xc(%esp)$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	f0 $/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	f0 $/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	c7 44 24 04 f7 01 00 	movl   $0x1f7,0x4(%esp)$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	00 $/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	e8 63 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	75 24                	jne    f0100b79 <check_page_free_list+0x25b>$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	c7 44 24 0c ad 2c 10 	movl   $0xf0102cad,0xc(%esp)$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	f0 $/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	f0 $/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	c7 44 24 04 f8 01 00 	movl   $0x1f8,0x4(%esp)$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	00 $/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	e8 38 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	76 58                	jbe    f0100bd8 <check_page_free_list+0x2ba>$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	77 20                	ja     f0100baa <check_page_free_list+0x28c>$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	c7 44 24 08 ec 2a 10 	movl   $0xf0102aec,0x8(%esp)$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	f0 $/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	c7 44 24 04 52 00 00 	movl   $0x52,0x4(%esp)$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	00 $/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	c7 04 24 40 2c 10 f0 	movl   $0xf0102c40,(%esp)$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	e8 07 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	39 45 c4             	cmp    %eax,-0x3c(%ebp)$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	76 27                	jbe    f0100bdb <check_page_free_list+0x2bd>$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	c7 44 24 0c 8c 2b 10 	movl   $0xf0102b8c,0xc(%esp)$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	f0 $/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	f0 $/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	c7 44 24 04 f9 01 00 	movl   $0x1f9,0x4(%esp)$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	00 $/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	e8 d9 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	46                   	inc    %esi$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	eb 01                	jmp    f0100bdc <check_page_free_list+0x2be>$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	43                   	inc    %ebx$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	8b 12                	mov    (%edx),%edx$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	85 d2                	test   %edx,%edx$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	0f 85 67 fe ff ff    	jne    f0100a4d <check_page_free_list+0x12f>$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	85 f6                	test   %esi,%esi$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	7f 24                	jg     f0100c0e <check_page_free_list+0x2f0>$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	c7 44 24 0c c7 2c 10 	movl   $0xf0102cc7,0xc(%esp)$/;"	l
f0100bf1	obj/kern/kernel.asm	/^f0100bf1:	f0 $/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	f0 $/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	c7 44 24 04 01 02 00 	movl   $0x201,0x4(%esp)$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	00 $/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	e8 a3 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	85 db                	test   %ebx,%ebx$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	7f 24                	jg     f0100c36 <check_page_free_list+0x318>$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	c7 44 24 0c d9 2c 10 	movl   $0xf0102cd9,0xc(%esp)$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	f0 $/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	f0 $/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	c7 44 24 04 02 02 00 	movl   $0x202,0x4(%esp)$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	00 $/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	e8 7b f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	5b                   	pop    %ebx$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	5e                   	pop    %esi$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	5f                   	pop    %edi$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	5d                   	pop    %ebp$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	c3                   	ret    $/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e <page_init>:$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	55                   	push   %ebp$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	57                   	push   %edi$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	56                   	push   %esi$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	53                   	push   %ebx$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	8b 35 58 e5 11 f0    	mov    0xf011e558,%esi$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	a1 5c e5 11 f0       	mov    0xf011e55c,%eax$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	89 c7                	mov    %eax,%edi$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	8b 0d 60 e5 11 f0    	mov    0xf011e560,%ecx$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	e9 83 00 00 00       	jmp    f0100cfb <page_init+0xbd>$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	85 c0                	test   %eax,%eax$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	74 1e                	je     f0100c9a <page_init+0x5c>$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	39 f0                	cmp    %esi,%eax$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	73 1a                	jae    f0100c9a <page_init+0x5c>$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	89 d3                	mov    %edx,%ebx$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	03 1d 8c e9 11 f0    	add    0xf011e98c,%ebx$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	89 0b                	mov    %ecx,(%ebx)$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	89 d1                	mov    %edx,%ecx$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	03 0d 8c e9 11 f0    	add    0xf011e98c,%ecx$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	eb 5d                	jmp    f0100cf7 <page_init+0xb9>$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	77 29                	ja     f0100ccb <page_init+0x8d>$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	89 0d 60 e5 11 f0    	mov    %ecx,0xf011e560$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	c7 44 24 08 d4 2b 10 	movl   $0xf0102bd4,0x8(%esp)$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	f0 $/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	c7 44 24 04 0f 01 00 	movl   $0x10f,0x4(%esp)$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	00 $/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	e8 e6 f3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	72 1a                	jb     f0100cea <page_init+0xac>$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	89 d3                	mov    %edx,%ebx$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	03 1d 8c e9 11 f0    	add    0xf011e98c,%ebx$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	89 0b                	mov    %ecx,(%ebx)$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	89 d1                	mov    %edx,%ecx$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	03 0d 8c e9 11 f0    	add    0xf011e98c,%ecx$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	eb 0d                	jmp    f0100cf7 <page_init+0xb9>$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	8b 1d 8c e9 11 f0    	mov    0xf011e98c,%ebx$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	66 c7 44 13 04 01 00 	movw   $0x1,0x4(%ebx,%edx,1)$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	40                   	inc    %eax$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	83 c2 08             	add    $0x8,%edx$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	3b 05 84 e9 11 f0    	cmp    0xf011e984,%eax$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	0f 82 71 ff ff ff    	jb     f0100c78 <page_init+0x3a>$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	89 0d 60 e5 11 f0    	mov    %ecx,0xf011e560$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	5b                   	pop    %ebx$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	5e                   	pop    %esi$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	5f                   	pop    %edi$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	5d                   	pop    %ebp$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	c3                   	ret    $/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15 <page_alloc>:$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	55                   	push   %ebp$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	5d                   	pop    %ebp$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	c3                   	ret    $/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f <page_free>:$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	55                   	push   %ebp$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	5d                   	pop    %ebp$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	c3                   	ret    $/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24 <page_decref>:$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	55                   	push   %ebp$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	66 ff 48 04          	decw   0x4(%eax)$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	5d                   	pop    %ebp$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	c3                   	ret    $/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30 <pgdir_walk>:$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	55                   	push   %ebp$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	5d                   	pop    %ebp$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	c3                   	ret    $/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a <page_insert>:$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	55                   	push   %ebp$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	5d                   	pop    %ebp$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	c3                   	ret    $/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44 <page_lookup>:$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	55                   	push   %ebp$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	5d                   	pop    %ebp$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	c3                   	ret    $/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e <mem_init>:$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	55                   	push   %ebp$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	e8 97 fb ff ff       	call   f01008f5 <nvram_read>$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	89 c2                	mov    %eax,%edx$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	85 c0                	test   %eax,%eax$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	79 06                	jns    f0100d6d <mem_init+0x1f>$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	89 15 58 e5 11 f0    	mov    %edx,0xf011e558$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	e8 75 fb ff ff       	call   f01008f5 <nvram_read>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	89 c2                	mov    %eax,%edx$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	89 d0                	mov    %edx,%eax$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	85 d2                	test   %edx,%edx$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	79 06                	jns    f0100d91 <mem_init+0x43>$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	74 0e                	je     f0100da4 <mem_init+0x56>$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	89 15 84 e9 11 f0    	mov    %edx,0xf011e984$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	eb 0c                	jmp    f0100db0 <mem_init+0x62>$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	8b 15 58 e5 11 f0    	mov    0xf011e558,%edx$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	89 15 84 e9 11 f0    	mov    %edx,0xf011e984$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	a1 58 e5 11 f0       	mov    0xf011e558,%eax$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	a1 84 e9 11 f0       	mov    0xf011e984,%eax$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	c7 04 24 f8 2b 10 f0 	movl   $0xf0102bf8,(%esp)$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	e8 8e 01 00 00       	call   f0100f72 <cprintf>$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	e8 56 fa ff ff       	call   f0100844 <boot_alloc>$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	a3 88 e9 11 f0       	mov    %eax,0xf011e988$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	00 $/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	00 $/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	e8 cb 13 00 00       	call   f01021d6 <memset>$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	a1 88 e9 11 f0       	mov    0xf011e988,%eax$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	77 20                	ja     f0100e37 <mem_init+0xe9>$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	c7 44 24 08 d4 2b 10 	movl   $0xf0102bd4,0x8(%esp)$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	f0 $/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	00 $/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	e8 7a f2 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	83 ca 05             	or     $0x5,%edx$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	a1 84 e9 11 f0       	mov    0xf011e984,%eax$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	e8 f1 f9 ff ff       	call   f0100844 <boot_alloc>$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	a3 8c e9 11 f0       	mov    %eax,0xf011e98c$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	e8 e1 fd ff ff       	call   f0100c3e <page_init>$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	e8 b7 fa ff ff       	call   f010091e <check_page_free_list>$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	83 3d 8c e9 11 f0 00 	cmpl   $0x0,0xf011e98c$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	75 1c                	jne    f0100e8c <mem_init+0x13e>$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	c7 44 24 08 ea 2c 10 	movl   $0xf0102cea,0x8(%esp)$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	f0 $/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	c7 44 24 04 13 02 00 	movl   $0x213,0x4(%esp)$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	00 $/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	e8 25 f2 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	a1 60 e5 11 f0       	mov    0xf011e560,%eax$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	eb 02                	jmp    f0100e95 <mem_init+0x147>$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	85 c0                	test   %eax,%eax$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	75 fa                	jne    f0100e93 <mem_init+0x145>$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	e8 70 fe ff ff       	call   f0100d15 <page_alloc>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	85 c0                	test   %eax,%eax$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	75 24                	jne    f0100ecd <mem_init+0x17f>$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	c7 44 24 0c 05 2d 10 	movl   $0xf0102d05,0xc(%esp)$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	f0 $/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	f0 $/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	c7 44 24 04 1b 02 00 	movl   $0x21b,0x4(%esp)$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	00 $/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	e8 e4 f1 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	c7 44 24 0c 1b 2d 10 	movl   $0xf0102d1b,0xc(%esp)$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	f0 $/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	f0 $/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	c7 44 24 04 20 02 00 	movl   $0x220,0x4(%esp)$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	00 $/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	c7 04 24 34 2c 10 f0 	movl   $0xf0102c34,(%esp)$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	e8 c0 f1 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1 <page_remove>:$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	55                   	push   %ebp$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	5d                   	pop    %ebp$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	c3                   	ret    $/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6 <tlb_invalidate>:$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	55                   	push   %ebp$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	0f 01 38             	invlpg (%eax)$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	5d                   	pop    %ebp$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	c3                   	ret    $/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	00 00                	add    %al,(%eax)$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04 <mc146818_read>:$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	55                   	push   %ebp$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	ee                   	out    %al,(%dx)$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	b2 71                	mov    $0x71,%dl$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	ec                   	in     (%dx),%al$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	5d                   	pop    %ebp$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	c3                   	ret    $/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18 <mc146818_write>:$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	55                   	push   %ebp$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	ee                   	out    %al,(%dx)$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	b2 71                	mov    $0x71,%dl$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	ee                   	out    %al,(%dx)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	5d                   	pop    %ebp$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	c3                   	ret    $/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c <putch>:$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	55                   	push   %ebp$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	e8 89 f6 ff ff       	call   f01005c6 <cputchar>$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	c9                   	leave  $/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	c3                   	ret    $/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f <vcprintf>:$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	55                   	push   %ebp$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	c7 04 24 2c 0f 10 f0 	movl   $0xf0100f2c,(%esp)$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	e8 09 0c 00 00       	call   f0101b76 <vprintfmt>$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	c9                   	leave  $/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	c3                   	ret    $/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72 <cprintf>:$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	55                   	push   %ebp$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	e8 b5 ff ff ff       	call   f0100f3f <vcprintf>$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	c9                   	leave  $/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	c3                   	ret    $/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c <stab_binsearch>:$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	55                   	push   %ebp$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	57                   	push   %edi$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	56                   	push   %esi$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	53                   	push   %ebx$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	8b 00                	mov    (%eax),%eax$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	eb 77                	jmp    f010102a <stab_binsearch+0x9e>$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	01 c8                	add    %ecx,%eax$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	99                   	cltd   $/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	f7 ff                	idiv   %edi$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	89 c2                	mov    %eax,%edx$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	eb 01                	jmp    f0100fc5 <stab_binsearch+0x39>$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	4a                   	dec    %edx$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	7c 1d                	jl     f0100fe6 <stab_binsearch+0x5a>$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	6b fa 0c             	imul   $0xc,%edx,%edi$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	0f b6 7c 3b 04       	movzbl 0x4(%ebx,%edi,1),%edi$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	39 f7                	cmp    %esi,%edi$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	75 ef                	jne    f0100fc4 <stab_binsearch+0x38>$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	6b fa 0c             	imul   $0xc,%edx,%edi$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	8b 7c 3b 08          	mov    0x8(%ebx,%edi,1),%edi$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	3b 7d 0c             	cmp    0xc(%ebp),%edi$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	73 18                	jae    f0100ffc <stab_binsearch+0x70>$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	eb 05                	jmp    f0100feb <stab_binsearch+0x5f>$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	eb 3f                	jmp    f010102a <stab_binsearch+0x9e>$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	89 11                	mov    %edx,(%ecx)$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	eb 2e                	jmp    f010102a <stab_binsearch+0x9e>$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	3b 7d 0c             	cmp    0xc(%ebp),%edi$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	76 15                	jbe    f0101016 <stab_binsearch+0x8a>$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	4f                   	dec    %edi$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	89 7d f0             	mov    %edi,-0x10(%ebp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	89 38                	mov    %edi,(%eax)$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	eb 14                	jmp    f010102a <stab_binsearch+0x9e>$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	89 39                	mov    %edi,(%ecx)$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	89 d1                	mov    %edx,%ecx$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	3b 4d f0             	cmp    -0x10(%ebp),%ecx$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	7e 84                	jle    f0100fb3 <stab_binsearch+0x27>$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	75 0d                	jne    f0101042 <stab_binsearch+0xb6>$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	8b 02                	mov    (%edx),%eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	48                   	dec    %eax$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	eb 22                	jmp    f0101064 <stab_binsearch+0xd8>$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	8b 01                	mov    (%ecx),%eax$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	8b 0a                	mov    (%edx),%ecx$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	eb 01                	jmp    f010104f <stab_binsearch+0xc3>$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	48                   	dec    %eax$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	7d 0c                	jge    f010105f <stab_binsearch+0xd3>$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	6b d0 0c             	imul   $0xc,%eax,%edx$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	0f b6 54 13 04       	movzbl 0x4(%ebx,%edx,1),%edx$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	39 f2                	cmp    %esi,%edx$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	75 ef                	jne    f010104e <stab_binsearch+0xc2>$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	89 02                	mov    %eax,(%edx)$/;"	l
f0101064	obj/kern/kernel.asm	/^f0101064:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	5b                   	pop    %ebx$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	5e                   	pop    %esi$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	5f                   	pop    %edi$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	5d                   	pop    %ebp$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	c3                   	ret    $/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c <debuginfo_eip>:$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	55                   	push   %ebp$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	89 e5                	mov    %esp,%ebp$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	57                   	push   %edi$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	56                   	push   %esi$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	53                   	push   %ebx$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	c7 03 2d 2d 10 f0    	movl   $0xf0102d2d,(%ebx)$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	c7 43 08 2d 2d 10 f0 	movl   $0xf0102d2d,0x8(%ebx)$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	76 12                	jbe    f01010ba <debuginfo_eip+0x4e>$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	b8 ae 3e 11 f0       	mov    $0xf0113eae,%eax$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	3d d1 ac 10 f0       	cmp    $0xf010acd1,%eax$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	0f 86 50 01 00 00    	jbe    f0101208 <debuginfo_eip+0x19c>$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	eb 1c                	jmp    f01010d6 <debuginfo_eip+0x6a>$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	c7 44 24 08 37 2d 10 	movl   $0xf0102d37,0x8(%esp)$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	f0 $/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	c7 44 24 04 7f 00 00 	movl   $0x7f,0x4(%esp)$/;"	l
f01010c9	obj/kern/kernel.asm	/^f01010c9:	00 $/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	c7 04 24 44 2d 10 f0 	movl   $0xf0102d44,(%esp)$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	e8 db ef ff ff       	call   f01000b1 <_panic>$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	80 3d ad 3e 11 f0 00 	cmpb   $0x0,0xf0113ead$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	0f 85 2c 01 00 00    	jne    f0101214 <debuginfo_eip+0x1a8>$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	b8 d0 ac 10 f0       	mov    $0xf010acd0,%eax$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	2d d0 49 10 f0       	sub    $0xf01049d0,%eax$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	48                   	dec    %eax$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	b8 d0 49 10 f0       	mov    $0xf01049d0,%eax$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	e8 6b fe ff ff       	call   f0100f8c <stab_binsearch>$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	85 d2                	test   %edx,%edx$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	0f 84 e3 00 00 00    	je     f0101214 <debuginfo_eip+0x1a8>$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	b8 d0 49 10 f0       	mov    $0xf01049d0,%eax$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	e8 37 fe ff ff       	call   f0100f8c <stab_binsearch>$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	3b 7d d8             	cmp    -0x28(%ebp),%edi$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	7f 2e                	jg     f010118b <debuginfo_eip+0x11f>$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	6b c7 0c             	imul   $0xc,%edi,%eax$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	8d 90 d0 49 10 f0    	lea    -0xfefb630(%eax),%edx$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	8b 80 d0 49 10 f0    	mov    -0xfefb630(%eax),%eax$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	b9 ae 3e 11 f0       	mov    $0xf0113eae,%ecx$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	81 e9 d1 ac 10 f0    	sub    $0xf010acd1,%ecx$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	73 08                	jae    f0101183 <debuginfo_eip+0x117>$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	05 d1 ac 10 f0       	add    $0xf010acd1,%eax$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	eb 06                	jmp    f0101191 <debuginfo_eip+0x125>$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	00 $/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	e8 1a 10 00 00       	call   f01021be <strfind>$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	eb 01                	jmp    f01011b0 <debuginfo_eip+0x144>$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	4f                   	dec    %edi$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	39 cf                	cmp    %ecx,%edi$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	7c 24                	jl     f01011d8 <debuginfo_eip+0x16c>$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	8d 14 85 d0 49 10 f0 	lea    -0xfefb630(,%eax,4),%edx$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	8a 42 04             	mov    0x4(%edx),%al$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	3c 84                	cmp    $0x84,%al$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	74 57                	je     f010121c <debuginfo_eip+0x1b0>$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	3c 64                	cmp    $0x64,%al$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	75 e6                	jne    f01011af <debuginfo_eip+0x143>$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	74 e0                	je     f01011af <debuginfo_eip+0x143>$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	eb 4b                	jmp    f010121c <debuginfo_eip+0x1b0>$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	05 d1 ac 10 f0       	add    $0xf010acd1,%eax$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	39 d1                	cmp    %edx,%ecx$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	7d 2d                	jge    f0101214 <debuginfo_eip+0x1a8>$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8d 41 01             	lea    0x1(%ecx),%eax$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	eb 04                	jmp    f01011f0 <debuginfo_eip+0x184>$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	ff 43 14             	incl   0x14(%ebx)$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	40                   	inc    %eax$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	39 d0                	cmp    %edx,%eax$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	74 1b                	je     f010120f <debuginfo_eip+0x1a3>$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	80 3c 8d d4 49 10 f0 	cmpb   $0xa0,-0xfefb62c(,%ecx,4)$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	a0 $/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	74 eb                	je     f01011ec <debuginfo_eip+0x180>$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	eb 0c                	jmp    f0101214 <debuginfo_eip+0x1a8>$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	eb 05                	jmp    f0101214 <debuginfo_eip+0x1a8>$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	5b                   	pop    %ebx$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	5e                   	pop    %esi$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	5f                   	pop    %edi$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	5d                   	pop    %ebp$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	c3                   	ret    $/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	6b ff 0c             	imul   $0xc,%edi,%edi$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8b 87 d0 49 10 f0    	mov    -0xfefb630(%edi),%eax$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	ba ae 3e 11 f0       	mov    $0xf0113eae,%edx$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	81 ea d1 ac 10 f0    	sub    $0xf010acd1,%edx$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	39 d0                	cmp    %edx,%eax$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	72 9d                	jb     f01011d1 <debuginfo_eip+0x165>$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	eb a2                	jmp    f01011d8 <debuginfo_eip+0x16c>$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238 <draw_tux>:$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	55                   	push   %ebp$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	89 e5                	mov    %esp,%ebp$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	57                   	push   %edi$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	56                   	push   %esi$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	53                   	push   %ebx$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	c7 04 24 52 2d 10 f0 	movl   $0xf0102d52,(%esp)$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	e8 25 fd ff ff       	call   f0100f72 <cprintf>$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	e8 ea 01 00 00       	call   f010143c <prepare_buffer>$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	c7 04 24 6e 2d 10 f0 	movl   $0xf0102d6e,(%esp)$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	e8 14 fd ff ff       	call   f0100f72 <cprintf>$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	e8 65 f3 ff ff       	call   f01005d6 <getchar>$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	75 0b                	jne    f0101281 <draw_tux+0x49>$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	7e 25                	jle    f01012a1 <draw_tux+0x69>$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	ff 4d d4             	decl   -0x2c(%ebp)$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	eb 2e                	jmp    f01012af <draw_tux+0x77>$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	75 0b                	jne    f0101291 <draw_tux+0x59>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	83 7d d0 26          	cmpl   $0x26,-0x30(%ebp)$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	7f e0                	jg     f010126c <draw_tux+0x34>$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	ff 45 d0             	incl   -0x30(%ebp)$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	eb 1e                	jmp    f01012af <draw_tux+0x77>$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	75 0b                	jne    f01012a1 <draw_tux+0x69>$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	83 7d d4 5d          	cmpl   $0x5d,-0x2c(%ebp)$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	7f d0                	jg     f010126c <draw_tux+0x34>$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	ff 45 d4             	incl   -0x2c(%ebp)$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	eb 0e                	jmp    f01012af <draw_tux+0x77>$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	75 c6                	jne    f010126c <draw_tux+0x34>$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	7e c0                	jle    f010126c <draw_tux+0x34>$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	ff 4d d0             	decl   -0x30(%ebp)$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	e8 88 01 00 00       	call   f010143c <prepare_buffer>$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	eb 7a                	jmp    f0101343 <draw_tux+0x10b>$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	85 db                	test   %ebx,%ebx$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	78 10                	js     f01012dd <draw_tux+0xa5>$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	81 ff c7 00 00 00    	cmp    $0xc7,%edi$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	7f 08                	jg     f01012dd <draw_tux+0xa5>$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	81 fb 3f 01 00 00    	cmp    $0x13f,%ebx$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	7e 24                	jle    f0101301 <draw_tux+0xc9>$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	c7 44 24 0c c0 2d 10 	movl   $0xf0102dc0,0xc(%esp)$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	f0 $/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	f0 $/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	00 $/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	c7 04 24 83 2d 10 f0 	movl   $0xf0102d83,(%esp)$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	e8 b0 ed ff ff       	call   f01000b1 <_panic>$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	88 84 0e a0 e9 11 f0 	mov    %al,-0xfee1660(%esi,%ecx,1)$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	41                   	inc    %ecx$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	43                   	inc    %ebx$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	81 f9 e1 00 00 00    	cmp    $0xe1,%ecx$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	75 7e                	jne    f0101390 <draw_tux+0x158>$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	ff 45 dc             	incl   -0x24(%ebp)$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	81 7d dc a0 00 00 00 	cmpl   $0xa0,-0x24(%ebp)$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	75 22                	jne    f0101343 <draw_tux+0x10b>$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	c7 04 24 92 2d 10 f0 	movl   $0xf0102d92,(%esp)$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	e8 45 fc ff ff       	call   f0100f72 <cprintf>$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	e8 2e 01 00 00       	call   f0101460 <display_buffer>$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	c7 04 24 ae 2d 10 f0 	movl   $0xf0102dae,(%esp)$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	e8 34 fc ff ff       	call   f0100f72 <cprintf>$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	e9 29 ff ff ff       	jmp    f010126c <draw_tux+0x34>$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	f7 6d dc             	imull  -0x24(%ebp)$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	d1 fa                	sar    %edx$/;"	d
f010134d	obj/kern/kernel.asm	/^f010134d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	29 c2                	sub    %eax,%edx$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	8d 04 92             	lea    (%edx,%edx,4),%eax$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	8d 04 42             	lea    (%edx,%eax,2),%eax$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	8d 04 82             	lea    (%edx,%eax,4),%eax$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	89 f9                	mov    %edi,%ecx$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	89 fa                	mov    %edi,%edx$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	01 ca                	add    %ecx,%edx$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	8b 04 85 00 2e 10 f0 	mov    -0xfefd200(,%eax,4),%eax$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	85 ff                	test   %edi,%edi$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	0f 88 5e ff ff ff    	js     f01012dd <draw_tux+0xa5>$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	89 de                	mov    %ebx,%esi$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	01 d6                	add    %edx,%esi$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	e9 39 ff ff ff       	jmp    f01012c9 <draw_tux+0x91>$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	f7 e9                	imul   %ecx$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	d1 fa                	sar    %edx$/;"	d
f0101399	obj/kern/kernel.asm	/^f0101399:	89 c8                	mov    %ecx,%eax$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	29 c2                	sub    %eax,%edx$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	03 55 e4             	add    -0x1c(%ebp),%edx$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	8b 04 95 00 2e 10 f0 	mov    -0xfefd200(,%edx,4),%eax$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	e9 1a ff ff ff       	jmp    f01012c9 <draw_tux+0x91>$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af <draw_color>:$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	55                   	push   %ebp$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	56                   	push   %esi$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	53                   	push   %ebx$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	e8 80 00 00 00       	call   f010143c <prepare_buffer>$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	e8 15 f2 ff ff       	call   f01005d6 <getchar>$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	74 f6                	je     f01013bc <draw_color+0xd>$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	eb 62                	jmp    f010142a <draw_color+0x7b>$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	85 c0                	test   %eax,%eax$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	78 13                	js     f01013df <draw_color+0x30>$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	85 d2                	test   %edx,%edx$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	78 0f                	js     f01013df <draw_color+0x30>$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	3d c8 00 00 00       	cmp    $0xc8,%eax$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	74 08                	je     f01013df <draw_color+0x30>$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	81 fa 40 01 00 00    	cmp    $0x140,%edx$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	75 24                	jne    f0101403 <draw_color+0x54>$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	c7 44 24 0c c0 2d 10 	movl   $0xf0102dc0,0xc(%esp)$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	f0 $/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	f0 $/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	00 $/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	c7 04 24 83 2d 10 f0 	movl   $0xf0102d83,(%esp)$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	e8 ae ec ff ff       	call   f01000b1 <_panic>$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	89 c3                	mov    %eax,%ebx$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	89 c1                	mov    %eax,%ecx$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	c1 e1 06             	shl    $0x6,%ecx$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	01 f3                	add    %esi,%ebx$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	40                   	inc    %eax$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	3d a0 00 00 00       	cmp    $0xa0,%eax$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	75 ae                	jne    f01013c8 <draw_color+0x19>$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	42                   	inc    %edx$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	81 fa 00 01 00 00    	cmp    $0x100,%edx$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	75 0c                	jne    f010142f <draw_color+0x80>$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	e8 38 00 00 00       	call   f0101460 <display_buffer>$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	eb 92                	jmp    f01013bc <draw_color+0xd>$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	8d b2 a0 e9 11 f0    	lea    -0xfee1660(%edx),%esi$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	eb 90                	jmp    f01013cc <draw_color+0x1d>$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c <prepare_buffer>:$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	55                   	push   %ebp$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	89 e5                	mov    %esp,%ebp$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	c7 44 24 08 00 fa 00 	movl   $0xfa00,0x8(%esp)$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	00 $/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	00 $/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	c7 04 24 a0 e9 11 f0 	movl   $0xf011e9a0,(%esp)$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	e8 78 0d 00 00       	call   f01021d6 <memset>$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	c9                   	leave  $/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	c3                   	ret    $/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460 <display_buffer>:$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	55                   	push   %ebp$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	89 e5                	mov    %esp,%ebp$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	c7 05 00 e3 11 f0 00 	movl   $0xf00a0000,0xf011e300$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	00 0a f0 $/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	c7 44 24 08 00 fa 00 	movl   $0xfa00,0x8(%esp)$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	00 $/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	c7 44 24 04 a0 e9 11 	movl   $0xf011e9a0,0x4(%esp)$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	f0 $/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	c7 04 24 00 00 0a f0 	movl   $0xf00a0000,(%esp)$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	e8 94 0d 00 00       	call   f0102220 <memmove>$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	c9                   	leave  $/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	c3                   	ret    $/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e <draw_square>:$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	55                   	push   %ebp$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	57                   	push   %edi$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	56                   	push   %esi$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	53                   	push   %ebx$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	78 0f                	js     f01014ac <draw_square+0x1e>$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	e9 84 00 00 00       	jmp    f0101530 <draw_square+0xa2>$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	c7 44 24 0c 80 44 10 	movl   $0xf0104480,0xc(%esp)$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	f0 $/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	f0 $/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	00 $/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	c7 04 24 89 44 10 f0 	movl   $0xf0104489,(%esp)$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	e8 e1 eb ff ff       	call   f01000b1 <_panic>$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	89 c2                	mov    %eax,%edx$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	85 c0                	test   %eax,%eax$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	78 15                	js     f01014eb <draw_square+0x5d>$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	85 f6                	test   %esi,%esi$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	78 11                	js     f01014eb <draw_square+0x5d>$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	3d c7 00 00 00       	cmp    $0xc7,%eax$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	7f 0a                	jg     f01014eb <draw_square+0x5d>$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	40                   	inc    %eax$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	81 7d d8 3f 01 00 00 	cmpl   $0x13f,-0x28(%ebp)$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	7e 24                	jle    f010150f <draw_square+0x81>$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	c7 44 24 0c c0 2d 10 	movl   $0xf0102dc0,0xc(%esp)$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	f0 $/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	f0 $/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	00 $/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	c7 04 24 83 2d 10 f0 	movl   $0xf0102d83,(%esp)$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	e8 a2 eb ff ff       	call   f01000b1 <_panic>$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	89 d3                	mov    %edx,%ebx$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	03 5d e4             	add    -0x1c(%ebp),%ebx$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	8a 55 10             	mov    0x10(%ebp),%dl$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	88 14 3b             	mov    %dl,(%ebx,%edi,1)$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	41                   	inc    %ecx$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	3b 4d 14             	cmp    0x14(%ebp),%ecx$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	75 a4                	jne    f01014d0 <draw_square+0x42>$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	46                   	inc    %esi$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	74 16                	je     f010154e <draw_square+0xc0>$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	8d 96 a0 e9 11 f0    	lea    -0xfee1660(%esi),%edx$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	eb d9                	jmp    f0101527 <draw_square+0x99>$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	5b                   	pop    %ebx$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	5e                   	pop    %esi$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	5f                   	pop    %edi$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	5d                   	pop    %ebp$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	c3                   	ret    $/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558 <protag_infrontof_box>:$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	55                   	push   %ebp$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	89 e5                	mov    %esp,%ebp$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	03 05 b8 e3 12 f0    	add    0xf012e3b8,%eax$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	39 05 a0 e3 12 f0    	cmp    %eax,0xf012e3a0$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	75 10                	jne    f0101579 <protag_infrontof_box+0x21>$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	89 d1                	mov    %edx,%ecx$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	03 0d bc e3 12 f0    	add    0xf012e3bc,%ecx$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	39 0d a4 e3 12 f0    	cmp    %ecx,0xf012e3a4$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	74 37                	je     f01015b0 <protag_infrontof_box+0x58>$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	3b 05 a8 e3 12 f0    	cmp    0xf012e3a8,%eax$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	75 10                	jne    f0101591 <protag_infrontof_box+0x39>$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	89 d1                	mov    %edx,%ecx$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	03 0d bc e3 12 f0    	add    0xf012e3bc,%ecx$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	39 0d ac e3 12 f0    	cmp    %ecx,0xf012e3ac$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	74 26                	je     f01015b7 <protag_infrontof_box+0x5f>$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	3b 05 b0 e3 12 f0    	cmp    0xf012e3b0,%eax$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	75 25                	jne    f01015be <protag_infrontof_box+0x66>$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	03 15 bc e3 12 f0    	add    0xf012e3bc,%edx$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	39 15 b4 e3 12 f0    	cmp    %edx,0xf012e3b4$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	0f 94 c0             	sete   %al$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	eb 13                	jmp    f01015c3 <protag_infrontof_box+0x6b>$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	eb 0c                	jmp    f01015c3 <protag_infrontof_box+0x6b>$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	eb 05                	jmp    f01015c3 <protag_infrontof_box+0x6b>$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	5d                   	pop    %ebp$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	c3                   	ret    $/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5 <protag_move>:$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	55                   	push   %ebp$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	57                   	push   %edi$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	56                   	push   %esi$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	53                   	push   %ebx$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	89 c3                	mov    %eax,%ebx$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	89 d6                	mov    %edx,%esi$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	89 d0                	mov    %edx,%eax$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	03 05 bc e3 12 f0    	add    0xf012e3bc,%eax$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	8d 14 c0             	lea    (%eax,%eax,8),%edx$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	89 d8                	mov    %ebx,%eax$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	03 05 b8 e3 12 f0    	add    0xf012e3b8,%eax$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	01 d0                	add    %edx,%eax$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	83 3c 85 e0 44 10 f0 	cmpl   $0x1,-0xfefbb20(,%eax,4)$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	01 $/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	75 11                	jne    f0101602 <protag_move+0x3d>$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	c7 04 24 96 44 10 f0 	movl   $0xf0104496,(%esp)$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	e8 75 f9 ff ff       	call   f0100f72 <cprintf>$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	e9 1b 01 00 00       	jmp    f010171d <protag_move+0x158>$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	89 f2                	mov    %esi,%edx$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	89 d8                	mov    %ebx,%eax$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	e8 4d ff ff ff       	call   f0101558 <protag_infrontof_box>$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	85 c0                	test   %eax,%eax$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	0f 84 eb 00 00 00    	je     f01016fe <protag_move+0x139>$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	8b 14 cd a4 e3 12 f0 	mov    -0xfed1c5c(,%ecx,8),%edx$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	01 f2                	add    %esi,%edx$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	89 da                	mov    %ebx,%edx$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	03 14 cd a0 e3 12 f0 	add    -0xfed1c60(,%ecx,8),%edx$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	8d 3c ff             	lea    (%edi,%edi,8),%edi$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	01 d7                	add    %edx,%edi$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	83 3c bd e0 44 10 f0 	cmpl   $0x1,-0xfefbb20(,%edi,4)$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	01 $/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	75 11                	jne    f0101651 <protag_move+0x8c>$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	c7 04 24 a0 44 10 f0 	movl   $0xf01044a0,(%esp)$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	e8 26 f9 ff ff       	call   f0100f72 <cprintf>$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	e9 cc 00 00 00       	jmp    f010171d <protag_move+0x158>$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	85 c9                	test   %ecx,%ecx$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	74 3c                	je     f0101691 <protag_move+0xcc>$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	3b 15 a8 e3 12 f0    	cmp    0xf012e3a8,%edx$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	75 0b                	jne    f0101668 <protag_move+0xa3>$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	3b 3d ac e3 12 f0    	cmp    0xf012e3ac,%edi$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	74 13                	je     f010167b <protag_move+0xb6>$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	3b 15 b0 e3 12 f0    	cmp    0xf012e3b0,%edx$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	75 1c                	jne    f010168c <protag_move+0xc7>$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	3b 3d b4 e3 12 f0    	cmp    0xf012e3b4,%edi$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	75 11                	jne    f010168c <protag_move+0xc7>$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	c7 04 24 aa 44 10 f0 	movl   $0xf01044aa,(%esp)$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	e8 eb f8 ff ff       	call   f0100f72 <cprintf>$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	e9 91 00 00 00       	jmp    f010171d <protag_move+0x158>$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	74 39                	je     f01016ca <protag_move+0x105>$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	3b 15 a0 e3 12 f0    	cmp    0xf012e3a0,%edx$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	75 0b                	jne    f01016a4 <protag_move+0xdf>$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	3b 3d a4 e3 12 f0    	cmp    0xf012e3a4,%edi$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	74 13                	je     f01016b7 <protag_move+0xf2>$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	3b 15 b0 e3 12 f0    	cmp    0xf012e3b0,%edx$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	75 19                	jne    f01016c5 <protag_move+0x100>$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	3b 3d b4 e3 12 f0    	cmp    0xf012e3b4,%edi$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	75 0e                	jne    f01016c5 <protag_move+0x100>$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	c7 04 24 b4 44 10 f0 	movl   $0xf01044b4,(%esp)$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	e8 af f8 ff ff       	call   f0100f72 <cprintf>$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	eb 58                	jmp    f010171d <protag_move+0x158>$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	74 42                	je     f010170c <protag_move+0x147>$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	3b 15 a0 e3 12 f0    	cmp    0xf012e3a0,%edx$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	75 0b                	jne    f01016dd <protag_move+0x118>$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	3b 0d a4 e3 12 f0    	cmp    0xf012e3a4,%ecx$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	74 13                	je     f01016f0 <protag_move+0x12b>$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	3b 15 a8 e3 12 f0    	cmp    0xf012e3a8,%edx$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	75 27                	jne    f010170c <protag_move+0x147>$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	3b 3d ac e3 12 f0    	cmp    0xf012e3ac,%edi$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	75 1c                	jne    f010170c <protag_move+0x147>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	c7 04 24 be 44 10 f0 	movl   $0xf01044be,(%esp)$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	e8 76 f8 ff ff       	call   f0100f72 <cprintf>$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	eb 1f                	jmp    f010171d <protag_move+0x158>$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	01 1d b8 e3 12 f0    	add    %ebx,0xf012e3b8$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	01 35 bc e3 12 f0    	add    %esi,0xf012e3bc$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	eb 11                	jmp    f010171d <protag_move+0x158>$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	48                   	dec    %eax$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	01 1c c5 a0 e3 12 f0 	add    %ebx,-0xfed1c60(,%eax,8)$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	01 34 c5 a4 e3 12 f0 	add    %esi,-0xfed1c5c(,%eax,8)$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	eb e1                	jmp    f01016fe <protag_move+0x139>$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	5b                   	pop    %ebx$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	5e                   	pop    %esi$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	5f                   	pop    %edi$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	5d                   	pop    %ebp$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	c3                   	ret    $/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725 <game_loop>:$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	55                   	push   %ebp$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	89 e5                	mov    %esp,%ebp$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	c7 05 b8 e3 12 f0 03 	movl   $0x3,0xf012e3b8$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	00 00 00 $/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	c7 05 bc e3 12 f0 01 	movl   $0x1,0xf012e3bc$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	00 00 00 $/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	c7 05 a0 e3 12 f0 03 	movl   $0x3,0xf012e3a0$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	00 00 00 $/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	c7 05 a4 e3 12 f0 02 	movl   $0x2,0xf012e3a4$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	00 00 00 $/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	c7 05 a8 e3 12 f0 02 	movl   $0x2,0xf012e3a8$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	00 00 00 $/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	c7 05 ac e3 12 f0 02 	movl   $0x2,0xf012e3ac$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	00 00 00 $/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	c7 05 b0 e3 12 f0 02 	movl   $0x2,0xf012e3b0$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	00 00 00 $/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	c7 05 b4 e3 12 f0 03 	movl   $0x3,0xf012e3b4$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	00 00 00 $/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	e8 c0 00 00 00       	call   f0101840 <game_display>$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	e8 51 ee ff ff       	call   f01005d6 <getchar>$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	75 11                	jne    f010179b <game_loop+0x76>$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	e8 2c fe ff ff       	call   f01015c5 <protag_move>$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	eb 43                	jmp    f01017de <game_loop+0xb9>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	75 0e                	jne    f01017ae <game_loop+0x89>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01017a5	obj/kern/kernel.asm	/^f01017a5:	b0 00                	mov    $0x0,%al$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	e8 19 fe ff ff       	call   f01015c5 <protag_move>$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	eb 30                	jmp    f01017de <game_loop+0xb9>$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	75 0e                	jne    f01017c1 <game_loop+0x9c>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	b0 01                	mov    $0x1,%al$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	e8 06 fe ff ff       	call   f01015c5 <protag_move>$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	eb 1d                	jmp    f01017de <game_loop+0xb9>$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	75 0e                	jne    f01017d4 <game_loop+0xaf>$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	b0 00                	mov    $0x0,%al$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	e8 f3 fd ff ff       	call   f01015c5 <protag_move>$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	eb 0a                	jmp    f01017de <game_loop+0xb9>$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	83 f8 72             	cmp    $0x72,%eax$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	75 a7                	jne    f0101780 <game_loop+0x5b>$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	e9 4d ff ff ff       	jmp    f010172b <game_loop+0x6>$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	e8 5d 00 00 00       	call   f0101840 <game_display>$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	a1 a4 e3 12 f0       	mov    0xf012e3a4,%eax$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	03 05 a0 e3 12 f0    	add    0xf012e3a0,%eax$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	83 3c 85 e0 44 10 f0 	cmpl   $0x2,-0xfefbb20(,%eax,4)$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	02 $/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	75 85                	jne    f0101780 <game_loop+0x5b>$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	a1 ac e3 12 f0       	mov    0xf012e3ac,%eax$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	03 05 a8 e3 12 f0    	add    0xf012e3a8,%eax$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	83 3c 85 e0 44 10 f0 	cmpl   $0x2,-0xfefbb20(,%eax,4)$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	02 $/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	0f 85 69 ff ff ff    	jne    f0101780 <game_loop+0x5b>$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	a1 b4 e3 12 f0       	mov    0xf012e3b4,%eax$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	03 05 b0 e3 12 f0    	add    0xf012e3b0,%eax$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	83 3c 85 e0 44 10 f0 	cmpl   $0x2,-0xfefbb20(,%eax,4)$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	02 $/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	0f 85 4d ff ff ff    	jne    f0101780 <game_loop+0x5b>$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	e8 00 fa ff ff       	call   f0101238 <draw_tux>$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	e9 43 ff ff ff       	jmp    f0101780 <game_loop+0x5b>$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	00 00                	add    %al,(%eax)$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840 <game_display>:$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	55                   	push   %ebp$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	89 e5                	mov    %esp,%ebp$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	57                   	push   %edi$/;"	l
f0101844	obj/kern/kernel.asm	/^f0101844:	56                   	push   %esi$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	53                   	push   %ebx$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	c7 04 24 24 46 10 f0 	movl   $0xf0104624,(%esp)$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	e8 1d f7 ff ff       	call   f0100f72 <cprintf>$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	e9 ac 01 00 00       	jmp    f0101a14 <game_display+0x1d4>$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	8b 06                	mov    (%esi),%eax$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	85 c0                	test   %eax,%eax$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	75 21                	jne    f010188f <game_display+0x4f>$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	00 $/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	c7 44 24 08 09 00 00 	movl   $0x9,0x8(%esp)$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	00 $/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	e8 04 fc ff ff       	call   f010148e <draw_square>$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	e9 8d 00 00 00       	jmp    f010191c <game_display+0xdc>$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	75 1e                	jne    f01018b2 <game_display+0x72>$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	00 $/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	c7 44 24 08 14 00 00 	movl   $0x14,0x8(%esp)$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	00 $/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	e8 de fb ff ff       	call   f010148e <draw_square>$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	eb 6a                	jmp    f010191c <game_display+0xdc>$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	75 1e                	jne    f01018d5 <game_display+0x95>$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	00 $/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	c7 44 24 08 06 00 00 	movl   $0x6,0x8(%esp)$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	00 $/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	e8 bb fb ff ff       	call   f010148e <draw_square>$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	eb 47                	jmp    f010191c <game_display+0xdc>$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	75 1e                	jne    f01018f8 <game_display+0xb8>$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	00 $/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	00 $/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	e8 98 fb ff ff       	call   f010148e <draw_square>$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	eb 24                	jmp    f010191c <game_display+0xdc>$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	c7 44 24 0c 92 2c 10 	movl   $0xf0102c92,0xc(%esp)$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	f0 $/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	c7 44 24 08 5a 2c 10 	movl   $0xf0102c5a,0x8(%esp)$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	f0 $/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	00 $/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	c7 04 24 35 46 10 f0 	movl   $0xf0104635,(%esp)$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	e8 95 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	83 c6 04             	add    $0x4,%esi$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	83 c3 14             	add    $0x14,%ebx$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	81 fb b4 00 00 00    	cmp    $0xb4,%ebx$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	0f 85 3a ff ff ff    	jne    f0101868 <game_display+0x28>$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	ff 45 e4             	incl   -0x1c(%ebp)$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	83 45 e0 14          	addl   $0x14,-0x20(%ebp)$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	83 7d e4 09          	cmpl   $0x9,-0x1c(%ebp)$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	0f 85 d5 00 00 00    	jne    f0101a14 <game_display+0x1d4>$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	00 $/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	c7 44 24 08 0e 00 00 	movl   $0xe,0x8(%esp)$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	00 $/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	a1 bc e3 12 f0       	mov    0xf012e3bc,%eax$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	a1 b8 e3 12 f0       	mov    0xf012e3b8,%eax$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	e8 1d fb ff ff       	call   f010148e <draw_square>$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	00 $/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	00 $/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	a1 a4 e3 12 f0       	mov    0xf012e3a4,%eax$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	a1 a0 e3 12 f0       	mov    0xf012e3a0,%eax$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	e8 eb fa ff ff       	call   f010148e <draw_square>$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	00 $/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	00 $/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	a1 ac e3 12 f0       	mov    0xf012e3ac,%eax$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	a1 a8 e3 12 f0       	mov    0xf012e3a8,%eax$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	e8 b9 fa ff ff       	call   f010148e <draw_square>$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	c7 44 24 0c 14 00 00 	movl   $0x14,0xc(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	00 $/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	00 $/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	a1 b4 e3 12 f0       	mov    0xf012e3b4,%eax$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	a1 b0 e3 12 f0       	mov    0xf012e3b0,%eax$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	e8 87 fa ff ff       	call   f010148e <draw_square>$/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	e8 54 fa ff ff       	call   f0101460 <display_buffer>$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	5b                   	pop    %ebx$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	5e                   	pop    %esi$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	5f                   	pop    %edi$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	5d                   	pop    %ebp$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	c3                   	ret    $/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	8d 04 d2             	lea    (%edx,%edx,8),%eax$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	8d 34 85 60 46 10 f0 	lea    -0xfefb9a0(,%eax,4),%esi$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101a29	obj/kern/kernel.asm	/^f0101a29:	e9 3a fe ff ff       	jmp    f0101868 <game_display+0x28>$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30 <printnum>:$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	55                   	push   %ebp$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	57                   	push   %edi$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	56                   	push   %esi$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	53                   	push   %ebx$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	89 d7                	mov    %edx,%edi$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	85 c0                	test   %eax,%eax$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	75 08                	jne    f0101a5c <printnum+0x2c>$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	77 57                	ja     f0101ab3 <printnum+0x83>$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	4b                   	dec    %ebx$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	00 $/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	e8 3e 09 00 00       	call   f01023cc <__udivdi3>$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	89 fa                	mov    %edi,%edx$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	e8 89 ff ff ff       	call   f0101a30 <printnum>$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	eb 0f                	jmp    f0101ab8 <printnum+0x88>$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	4b                   	dec    %ebx$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	85 db                	test   %ebx,%ebx$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	7f f1                	jg     f0101aa9 <printnum+0x79>$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	00 $/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	e8 0b 0a 00 00       	call   f01024ec <__umoddi3>$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	0f be 80 a4 47 10 f0 	movsbl -0xfefb85c(%eax),%eax$/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	5b                   	pop    %ebx$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	5e                   	pop    %esi$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	5f                   	pop    %edi$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	5d                   	pop    %ebp$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	c3                   	ret    $/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa <getuint>:$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	55                   	push   %ebp$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	89 e5                	mov    %esp,%ebp$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	7e 0e                	jle    f0101b10 <getuint+0x16>$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	8b 10                	mov    (%eax),%edx$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	89 08                	mov    %ecx,(%eax)$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	8b 02                	mov    (%edx),%eax$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	eb 22                	jmp    f0101b32 <getuint+0x38>$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	85 d2                	test   %edx,%edx$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	74 10                	je     f0101b24 <getuint+0x2a>$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	8b 10                	mov    (%eax),%edx$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	89 08                	mov    %ecx,(%eax)$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	8b 02                	mov    (%edx),%eax$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	eb 0e                	jmp    f0101b32 <getuint+0x38>$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	8b 10                	mov    (%eax),%edx$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	89 08                	mov    %ecx,(%eax)$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	8b 02                	mov    (%edx),%eax$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	5d                   	pop    %ebp$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	c3                   	ret    $/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34 <sprintputch>:$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	55                   	push   %ebp$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	ff 40 08             	incl   0x8(%eax)$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	8b 10                	mov    (%eax),%edx$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	73 08                	jae    f0101b4c <sprintputch+0x18>$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	88 0a                	mov    %cl,(%edx)$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	42                   	inc    %edx$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	89 10                	mov    %edx,(%eax)$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	5d                   	pop    %ebp$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	c3                   	ret    $/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e <printfmt>:$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	55                   	push   %ebp$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	e8 02 00 00 00       	call   f0101b76 <vprintfmt>$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	c9                   	leave  $/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	c3                   	ret    $/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76 <vprintfmt>:$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	55                   	push   %ebp$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b79	obj/kern/kernel.asm	/^f0101b79:	57                   	push   %edi$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	56                   	push   %esi$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	53                   	push   %ebx$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	eb 12                	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	85 c0                	test   %eax,%eax$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	0f 84 8b 03 00 00    	je     f0101f1a <vprintfmt+0x3a4>$/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b96	obj/kern/kernel.asm	/^f0101b96:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	46                   	inc    %esi$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	75 e5                	jne    f0101b87 <vprintfmt+0x11>$/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	eb 26                	jmp    f0101be6 <vprintfmt+0x70>$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101bc3	obj/kern/kernel.asm	/^f0101bc3:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	eb 1d                	jmp    f0101be6 <vprintfmt+0x70>$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	eb 14                	jmp    f0101be6 <vprintfmt+0x70>$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101bd5	obj/kern/kernel.asm	/^f0101bd5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	eb 08                	jmp    f0101be6 <vprintfmt+0x70>$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0101be6	obj/kern/kernel.asm	/^f0101be6:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	8d 56 01             	lea    0x1(%esi),%edx$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	8a 16                	mov    (%esi),%dl$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	83 ea 23             	sub    $0x23,%edx$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	0f 87 01 03 00 00    	ja     f0101efe <vprintfmt+0x388>$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	ff 24 95 40 48 10 f0 	jmp    *-0xfefb7c0(,%edx,4)$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	77 2a                	ja     f0101c4b <vprintfmt+0xd5>$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	46                   	inc    %esi$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	eb eb                	jmp    f0101c0f <vprintfmt+0x99>$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	8b 38                	mov    (%eax),%edi$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	eb 17                	jmp    f0101c4b <vprintfmt+0xd5>$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	78 98                	js     f0101bd2 <vprintfmt+0x5c>$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	eb a7                	jmp    f0101be6 <vprintfmt+0x70>$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	eb 9b                	jmp    f0101be6 <vprintfmt+0x70>$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	79 95                	jns    f0101be6 <vprintfmt+0x70>$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	eb 8b                	jmp    f0101bde <vprintfmt+0x68>$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	41                   	inc    %ecx$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	eb 8d                	jmp    f0101be6 <vprintfmt+0x70>$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	e9 23 ff ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101c76	obj/kern/kernel.asm	/^f0101c76:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	85 c0                	test   %eax,%eax$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	79 02                	jns    f0101c87 <vprintfmt+0x111>$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	f7 d8                	neg    %eax$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	89 c2                	mov    %eax,%edx$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	7f 0b                	jg     f0101c99 <vprintfmt+0x123>$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	8b 04 85 a0 49 10 f0 	mov    -0xfefb660(,%eax,4),%eax$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	85 c0                	test   %eax,%eax$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	75 23                	jne    f0101cbc <vprintfmt+0x146>$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	c7 44 24 08 bc 47 10 	movl   $0xf01047bc,0x8(%esp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	f0 $/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	e8 9a fe ff ff       	call   f0101b4e <printfmt>$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	e9 dd fe ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	c7 44 24 08 6c 2c 10 	movl   $0xf0102c6c,0x8(%esp)$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	f0 $/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101ccf	obj/kern/kernel.asm	/^f0101ccf:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	e8 77 fe ff ff       	call   f0101b4e <printfmt>$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	e9 ba fe ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	89 f9                	mov    %edi,%ecx$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	8b 30                	mov    (%eax),%esi$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	85 f6                	test   %esi,%esi$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	75 05                	jne    f0101cfb <vprintfmt+0x185>$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	be b5 47 10 f0       	mov    $0xf01047b5,%esi$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	0f 8e 84 00 00 00    	jle    f0101d89 <vprintfmt+0x213>$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	74 7e                	je     f0101d89 <vprintfmt+0x213>$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	e8 73 03 00 00       	call   f010208a <strnlen>$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	29 c2                	sub    %eax,%edx$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	89 de                	mov    %ebx,%esi$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	89 d3                	mov    %edx,%ebx$/;"	l
f0101d2d	obj/kern/kernel.asm	/^f0101d2d:	89 c7                	mov    %eax,%edi$/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	eb 0b                	jmp    f0101d3c <vprintfmt+0x1c6>$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	4b                   	dec    %ebx$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	85 db                	test   %ebx,%ebx$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	7f f1                	jg     f0101d31 <vprintfmt+0x1bb>$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	89 f3                	mov    %esi,%ebx$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	85 c0                	test   %eax,%eax$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	79 05                	jns    f0101d54 <vprintfmt+0x1de>$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	29 c2                	sub    %eax,%edx$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	eb 2b                	jmp    f0101d89 <vprintfmt+0x213>$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	74 18                	je     f0101d7c <vprintfmt+0x206>$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	76 10                	jbe    f0101d7c <vprintfmt+0x206>$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101d7a	obj/kern/kernel.asm	/^f0101d7a:	eb 0a                	jmp    f0101d86 <vprintfmt+0x210>$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	46                   	inc    %esi$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	85 c0                	test   %eax,%eax$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	74 21                	je     f0101db2 <vprintfmt+0x23c>$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	85 ff                	test   %edi,%edi$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	78 c9                	js     f0101d5e <vprintfmt+0x1e8>$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	4f                   	dec    %edi$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	79 c6                	jns    f0101d5e <vprintfmt+0x1e8>$/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	89 de                	mov    %ebx,%esi$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	eb 18                	jmp    f0101dba <vprintfmt+0x244>$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	ff d7                	call   *%edi$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	4b                   	dec    %ebx$/;"	l
f0101db0	obj/kern/kernel.asm	/^f0101db0:	eb 08                	jmp    f0101dba <vprintfmt+0x244>$/;"	l
f0101db2	obj/kern/kernel.asm	/^f0101db2:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	89 de                	mov    %ebx,%esi$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	85 db                	test   %ebx,%ebx$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	7f e4                	jg     f0101da2 <vprintfmt+0x22c>$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	89 f3                	mov    %esi,%ebx$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	e9 ce fd ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	7e 10                	jle    f0101de0 <vprintfmt+0x26a>$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	8b 30                	mov    (%eax),%esi$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	eb 26                	jmp    f0101e06 <vprintfmt+0x290>$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	85 c9                	test   %ecx,%ecx$/;"	l
f0101de2	obj/kern/kernel.asm	/^f0101de2:	74 12                	je     f0101df6 <vprintfmt+0x280>$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	8b 30                	mov    (%eax),%esi$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	89 f7                	mov    %esi,%edi$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	eb 10                	jmp    f0101e06 <vprintfmt+0x290>$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	8b 30                	mov    (%eax),%esi$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	89 f7                	mov    %esi,%edi$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	85 ff                	test   %edi,%edi$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	78 0a                	js     f0101e14 <vprintfmt+0x29e>$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	e9 ac 00 00 00       	jmp    f0101ec0 <vprintfmt+0x34a>$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	f7 de                	neg    %esi$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	83 d7 00             	adc    $0x0,%edi$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	f7 df                	neg    %edi$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	e9 8d 00 00 00       	jmp    f0101ec0 <vprintfmt+0x34a>$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	89 ca                	mov    %ecx,%edx$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	e8 bd fc ff ff       	call   f0101afa <getuint>$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	89 c6                	mov    %eax,%esi$/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	89 d7                	mov    %edx,%edi$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	eb 78                	jmp    f0101ec0 <vprintfmt+0x34a>$/;"	l
f0101e48	obj/kern/kernel.asm	/^f0101e48:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	e9 1f fd ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	8b 30                	mov    (%eax),%esi$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	eb 13                	jmp    f0101ec0 <vprintfmt+0x34a>$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	89 ca                	mov    %ecx,%edx$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	e8 43 fc ff ff       	call   f0101afa <getuint>$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	89 c6                	mov    %eax,%esi$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	89 d7                	mov    %edx,%edi$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101ecb	obj/kern/kernel.asm	/^f0101ecb:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	89 da                	mov    %ebx,%edx$/;"	l
f0101edc	obj/kern/kernel.asm	/^f0101edc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	e8 4c fb ff ff       	call   f0101a30 <printnum>$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	e9 ad fc ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	e9 9b fc ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101f02	obj/kern/kernel.asm	/^f0101f02:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	eb 01                	jmp    f0101f0f <vprintfmt+0x399>$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	4e                   	dec    %esi$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	75 f9                	jne    f0101f0e <vprintfmt+0x398>$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	e9 7f fc ff ff       	jmp    f0101b99 <vprintfmt+0x23>$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	5b                   	pop    %ebx$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	5e                   	pop    %esi$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	5f                   	pop    %edi$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	5d                   	pop    %ebp$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c3                   	ret    $/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22 <vsnprintf>:$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	55                   	push   %ebp$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	89 e5                	mov    %esp,%ebp$/;"	l
f0101f25	obj/kern/kernel.asm	/^f0101f25:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101f2e	obj/kern/kernel.asm	/^f0101f2e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	85 c0                	test   %eax,%eax$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	74 30                	je     f0101f73 <vsnprintf+0x51>$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	85 d2                	test   %edx,%edx$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	7e 33                	jle    f0101f7a <vsnprintf+0x58>$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	c7 04 24 34 1b 10 f0 	movl   $0xf0101b34,(%esp)$/;"	l
f0101f63	obj/kern/kernel.asm	/^f0101f63:	e8 0e fc ff ff       	call   f0101b76 <vprintfmt>$/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101f6b	obj/kern/kernel.asm	/^f0101f6b:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101f71	obj/kern/kernel.asm	/^f0101f71:	eb 0c                	jmp    f0101f7f <vsnprintf+0x5d>$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	eb 05                	jmp    f0101f7f <vsnprintf+0x5d>$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	c9                   	leave  $/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	c3                   	ret    $/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81 <snprintf>:$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	55                   	push   %ebp$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	89 e5                	mov    %esp,%ebp$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101f87	obj/kern/kernel.asm	/^f0101f87:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101f8e	obj/kern/kernel.asm	/^f0101f8e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fa2	obj/kern/kernel.asm	/^f0101fa2:	e8 7b ff ff ff       	call   f0101f22 <vsnprintf>$/;"	l
f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	c9                   	leave  $/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	c3                   	ret    $/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	00 00                	add    %al,(%eax)$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac <readline>:$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	55                   	push   %ebp$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	89 e5                	mov    %esp,%ebp$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	57                   	push   %edi$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	56                   	push   %esi$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	53                   	push   %ebx$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	85 c0                	test   %eax,%eax$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	74 10                	je     f0101fcc <readline+0x20>$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	c7 04 24 6c 2c 10 f0 	movl   $0xf0102c6c,(%esp)$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	e8 a6 ef ff ff       	call   f0100f72 <cprintf>$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	e8 0f e6 ff ff       	call   f01005e7 <iscons>$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	89 c7                	mov    %eax,%edi$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	e8 f2 e5 ff ff       	call   f01005d6 <getchar>$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	89 c3                	mov    %eax,%ebx$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	85 c0                	test   %eax,%eax$/;"	l
f0101fe8	obj/kern/kernel.asm	/^f0101fe8:	79 17                	jns    f0102001 <readline+0x55>$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	c7 04 24 c0 49 10 f0 	movl   $0xf01049c0,(%esp)$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	e8 78 ef ff ff       	call   f0100f72 <cprintf>$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	eb 69                	jmp    f010206a <readline+0xbe>$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	74 05                	je     f010200b <readline+0x5f>$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	75 17                	jne    f0102022 <readline+0x76>$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	85 f6                	test   %esi,%esi$/;"	l
f010200d	obj/kern/kernel.asm	/^f010200d:	7e 13                	jle    f0102022 <readline+0x76>$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	85 ff                	test   %edi,%edi$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	74 0c                	je     f010201f <readline+0x73>$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	e8 a7 e5 ff ff       	call   f01005c6 <cputchar>$/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	4e                   	dec    %esi$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	eb bd                	jmp    f0101fdf <readline+0x33>$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	7e 1d                	jle    f0102044 <readline+0x98>$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	7f 15                	jg     f0102044 <readline+0x98>$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	85 ff                	test   %edi,%edi$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	74 08                	je     f010203b <readline+0x8f>$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	e8 8b e5 ff ff       	call   f01005c6 <cputchar>$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	88 9e 80 e5 11 f0    	mov    %bl,-0xfee1a80(%esi)$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	46                   	inc    %esi$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	eb 9b                	jmp    f0101fdf <readline+0x33>$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0102047	obj/kern/kernel.asm	/^f0102047:	74 05                	je     f010204e <readline+0xa2>$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	75 91                	jne    f0101fdf <readline+0x33>$/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	85 ff                	test   %edi,%edi$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	74 0c                	je     f010205e <readline+0xb2>$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	e8 68 e5 ff ff       	call   f01005c6 <cputchar>$/;"	l
f010205e	obj/kern/kernel.asm	/^f010205e:	c6 86 80 e5 11 f0 00 	movb   $0x0,-0xfee1a80(%esi)$/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	b8 80 e5 11 f0       	mov    $0xf011e580,%eax$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	5b                   	pop    %ebx$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	5e                   	pop    %esi$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	5f                   	pop    %edi$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	5d                   	pop    %ebp$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	c3                   	ret    $/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074 <strlen>:$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	55                   	push   %ebp$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	89 e5                	mov    %esp,%ebp$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	eb 01                	jmp    f0102082 <strlen+0xe>$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	40                   	inc    %eax$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	75 f9                	jne    f0102081 <strlen+0xd>$/;"	l
f0102088	obj/kern/kernel.asm	/^f0102088:	5d                   	pop    %ebp$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	c3                   	ret    $/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a <strnlen>:$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	55                   	push   %ebp$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	89 e5                	mov    %esp,%ebp$/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	eb 01                	jmp    f010209b <strnlen+0x11>$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	40                   	inc    %eax$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	39 d0                	cmp    %edx,%eax$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	74 06                	je     f01020a5 <strnlen+0x1b>$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	75 f5                	jne    f010209a <strnlen+0x10>$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	5d                   	pop    %ebp$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	c3                   	ret    $/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7 <strcpy>:$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	55                   	push   %ebp$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	53                   	push   %ebx$/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	42                   	inc    %edx$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	84 c9                	test   %cl,%cl$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	75 f5                	jne    f01020b6 <strcpy+0xf>$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	5b                   	pop    %ebx$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	5d                   	pop    %ebp$/;"	l
f01020c3	obj/kern/kernel.asm	/^f01020c3:	c3                   	ret    $/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4 <strcat>:$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	55                   	push   %ebp$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	53                   	push   %ebx$/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01020cb	obj/kern/kernel.asm	/^f01020cb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	e8 9e ff ff ff       	call   f0102074 <strlen>$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	01 d8                	add    %ebx,%eax$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	e8 c0 ff ff ff       	call   f01020a7 <strcpy>$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	89 d8                	mov    %ebx,%eax$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	5b                   	pop    %ebx$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	5d                   	pop    %ebp$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	c3                   	ret    $/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef <strncpy>:$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	55                   	push   %ebp$/;"	l
f01020f0	obj/kern/kernel.asm	/^f01020f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	56                   	push   %esi$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	53                   	push   %ebx$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01020fd	obj/kern/kernel.asm	/^f01020fd:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	eb 0c                	jmp    f0102110 <strncpy+0x21>$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	8a 1a                	mov    (%edx),%bl$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	41                   	inc    %ecx$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	39 f1                	cmp    %esi,%ecx$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	75 f0                	jne    f0102104 <strncpy+0x15>$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	5b                   	pop    %ebx$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	5e                   	pop    %esi$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	5d                   	pop    %ebp$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	c3                   	ret    $/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118 <strlcpy>:$/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	55                   	push   %ebp$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	89 e5                	mov    %esp,%ebp$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	56                   	push   %esi$/;"	l
f010211c	obj/kern/kernel.asm	/^f010211c:	53                   	push   %ebx$/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	85 d2                	test   %edx,%edx$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	75 0a                	jne    f0102134 <strlcpy+0x1c>$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	89 f0                	mov    %esi,%eax$/;"	l
f010212c	obj/kern/kernel.asm	/^f010212c:	eb 1a                	jmp    f0102148 <strlcpy+0x30>$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	88 18                	mov    %bl,(%eax)$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	40                   	inc    %eax$/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	41                   	inc    %ecx$/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	eb 02                	jmp    f0102136 <strlcpy+0x1e>$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	89 f0                	mov    %esi,%eax$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	4a                   	dec    %edx$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	74 0a                	je     f0102143 <strlcpy+0x2b>$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	8a 19                	mov    (%ecx),%bl$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	84 db                	test   %bl,%bl$/;"	l
f010213d	obj/kern/kernel.asm	/^f010213d:	75 ef                	jne    f010212e <strlcpy+0x16>$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	89 c2                	mov    %eax,%edx$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	eb 02                	jmp    f0102145 <strlcpy+0x2d>$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	89 c2                	mov    %eax,%edx$/;"	l
f0102145	obj/kern/kernel.asm	/^f0102145:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	29 f0                	sub    %esi,%eax$/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	5b                   	pop    %ebx$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	5e                   	pop    %esi$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	5d                   	pop    %ebp$/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	c3                   	ret    $/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e <strcmp>:$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	55                   	push   %ebp$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	89 e5                	mov    %esp,%ebp$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	eb 02                	jmp    f010215b <strcmp+0xd>$/;"	l
f0102159	obj/kern/kernel.asm	/^f0102159:	41                   	inc    %ecx$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	42                   	inc    %edx$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	8a 01                	mov    (%ecx),%al$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	84 c0                	test   %al,%al$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	74 04                	je     f0102165 <strcmp+0x17>$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	3a 02                	cmp    (%edx),%al$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	74 f4                	je     f0102159 <strcmp+0xb>$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	29 d0                	sub    %edx,%eax$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	5d                   	pop    %ebp$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	c3                   	ret    $/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f <strncmp>:$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	55                   	push   %ebp$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	89 e5                	mov    %esp,%ebp$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	53                   	push   %ebx$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	eb 03                	jmp    f0102181 <strncmp+0x12>$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	4a                   	dec    %edx$/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	40                   	inc    %eax$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	41                   	inc    %ecx$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	85 d2                	test   %edx,%edx$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	74 14                	je     f0102199 <strncmp+0x2a>$/;"	l
f0102185	obj/kern/kernel.asm	/^f0102185:	8a 18                	mov    (%eax),%bl$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	84 db                	test   %bl,%bl$/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	74 04                	je     f010218f <strncmp+0x20>$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	3a 19                	cmp    (%ecx),%bl$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	74 ef                	je     f010217e <strncmp+0xf>$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	29 d0                	sub    %edx,%eax$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	eb 05                	jmp    f010219e <strncmp+0x2f>$/;"	l
f0102199	obj/kern/kernel.asm	/^f0102199:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	5b                   	pop    %ebx$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	5d                   	pop    %ebp$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	c3                   	ret    $/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1 <strchr>:$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	55                   	push   %ebp$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	eb 05                	jmp    f01021b1 <strchr+0x10>$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	38 ca                	cmp    %cl,%dl$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	74 0c                	je     f01021bc <strchr+0x1b>$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	40                   	inc    %eax$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	8a 10                	mov    (%eax),%dl$/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	84 d2                	test   %dl,%dl$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	75 f5                	jne    f01021ac <strchr+0xb>$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	5d                   	pop    %ebp$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	c3                   	ret    $/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be <strfind>:$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	55                   	push   %ebp$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	eb 05                	jmp    f01021ce <strfind+0x10>$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	38 ca                	cmp    %cl,%dl$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	74 07                	je     f01021d4 <strfind+0x16>$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	40                   	inc    %eax$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	8a 10                	mov    (%eax),%dl$/;"	l
f01021d0	obj/kern/kernel.asm	/^f01021d0:	84 d2                	test   %dl,%dl$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	75 f5                	jne    f01021c9 <strfind+0xb>$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	5d                   	pop    %ebp$/;"	l
f01021d5	obj/kern/kernel.asm	/^f01021d5:	c3                   	ret    $/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6 <memset>:$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	55                   	push   %ebp$/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	57                   	push   %edi$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	56                   	push   %esi$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	53                   	push   %ebx$/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01021e5	obj/kern/kernel.asm	/^f01021e5:	85 c9                	test   %ecx,%ecx$/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	74 30                	je     f0102219 <memset+0x43>$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	75 25                	jne    f0102216 <memset+0x40>$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	75 20                	jne    f0102216 <memset+0x40>$/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01021f9	obj/kern/kernel.asm	/^f01021f9:	89 d3                	mov    %edx,%ebx$/;"	l
f01021fb	obj/kern/kernel.asm	/^f01021fb:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	89 d6                	mov    %edx,%esi$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	89 d0                	mov    %edx,%eax$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	09 f0                	or     %esi,%eax$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	09 d0                	or     %edx,%eax$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	09 d8                	or     %ebx,%eax$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	fc                   	cld    $/;"	l
f0102212	obj/kern/kernel.asm	/^f0102212:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	eb 03                	jmp    f0102219 <memset+0x43>$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	fc                   	cld    $/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0102219	obj/kern/kernel.asm	/^f0102219:	89 f8                	mov    %edi,%eax$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	5b                   	pop    %ebx$/;"	l
f010221c	obj/kern/kernel.asm	/^f010221c:	5e                   	pop    %esi$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	5f                   	pop    %edi$/;"	l
f010221e	obj/kern/kernel.asm	/^f010221e:	5d                   	pop    %ebp$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	c3                   	ret    $/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220 <memmove>:$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	55                   	push   %ebp$/;"	l
f0102221	obj/kern/kernel.asm	/^f0102221:	89 e5                	mov    %esp,%ebp$/;"	l
f0102223	obj/kern/kernel.asm	/^f0102223:	57                   	push   %edi$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	56                   	push   %esi$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010222b	obj/kern/kernel.asm	/^f010222b:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	39 c6                	cmp    %eax,%esi$/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	73 34                	jae    f0102266 <memmove+0x46>$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	39 d0                	cmp    %edx,%eax$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	73 2d                	jae    f0102266 <memmove+0x46>$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	75 1b                	jne    f010225c <memmove+0x3c>$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	75 13                	jne    f010225c <memmove+0x3c>$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	75 0e                	jne    f010225c <memmove+0x3c>$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	fd                   	std    $/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	eb 07                	jmp    f0102263 <memmove+0x43>$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	4f                   	dec    %edi$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	fd                   	std    $/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	fc                   	cld    $/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	eb 20                	jmp    f0102286 <memmove+0x66>$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	75 13                	jne    f0102281 <memmove+0x61>$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	a8 03                	test   $0x3,%al$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	75 0f                	jne    f0102281 <memmove+0x61>$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	75 0a                	jne    f0102281 <memmove+0x61>$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	89 c7                	mov    %eax,%edi$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	fc                   	cld    $/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	eb 05                	jmp    f0102286 <memmove+0x66>$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	89 c7                	mov    %eax,%edi$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	fc                   	cld    $/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	5e                   	pop    %esi$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	5f                   	pop    %edi$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	5d                   	pop    %ebp$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	c3                   	ret    $/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a <memcpy>:$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	55                   	push   %ebp$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	89 e5                	mov    %esp,%ebp$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	e8 77 ff ff ff       	call   f0102220 <memmove>$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	c9                   	leave  $/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	c3                   	ret    $/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab <memcmp>:$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	55                   	push   %ebp$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	57                   	push   %edi$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	56                   	push   %esi$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	53                   	push   %ebx$/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	eb 16                	jmp    f01022d7 <memcmp+0x2c>$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	8a 04 17             	mov    (%edi,%edx,1),%al$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	42                   	inc    %edx$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	8a 4c 16 ff          	mov    -0x1(%esi,%edx,1),%cl$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	38 c8                	cmp    %cl,%al$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	74 0a                	je     f01022d7 <memcmp+0x2c>$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	29 c8                	sub    %ecx,%eax$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	eb 09                	jmp    f01022e0 <memcmp+0x35>$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	39 da                	cmp    %ebx,%edx$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	75 e6                	jne    f01022c1 <memcmp+0x16>$/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	5b                   	pop    %ebx$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	5e                   	pop    %esi$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	5f                   	pop    %edi$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	5d                   	pop    %ebp$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	c3                   	ret    $/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5 <memfind>:$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	55                   	push   %ebp$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	89 c2                	mov    %eax,%edx$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	eb 05                	jmp    f01022fa <memfind+0x15>$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	38 08                	cmp    %cl,(%eax)$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	74 05                	je     f01022fe <memfind+0x19>$/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	40                   	inc    %eax$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	39 d0                	cmp    %edx,%eax$/;"	l
f01022fc	obj/kern/kernel.asm	/^f01022fc:	72 f7                	jb     f01022f5 <memfind+0x10>$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	5d                   	pop    %ebp$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	c3                   	ret    $/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300 <strtol>:$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	55                   	push   %ebp$/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	89 e5                	mov    %esp,%ebp$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	57                   	push   %edi$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	56                   	push   %esi$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	53                   	push   %ebx$/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010230c	obj/kern/kernel.asm	/^f010230c:	eb 01                	jmp    f010230f <strtol+0xf>$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	42                   	inc    %edx$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	8a 02                	mov    (%edx),%al$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	3c 20                	cmp    $0x20,%al$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	74 f9                	je     f010230e <strtol+0xe>$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	3c 09                	cmp    $0x9,%al$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	74 f5                	je     f010230e <strtol+0xe>$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	3c 2b                	cmp    $0x2b,%al$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	75 08                	jne    f0102325 <strtol+0x25>$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	42                   	inc    %edx$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	eb 13                	jmp    f0102338 <strtol+0x38>$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	75 0a                	jne    f0102333 <strtol+0x33>$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	eb 05                	jmp    f0102338 <strtol+0x38>$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	85 db                	test   %ebx,%ebx$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	74 05                	je     f0102341 <strtol+0x41>$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	75 28                	jne    f0102369 <strtol+0x69>$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	8a 02                	mov    (%edx),%al$/;"	l
f0102343	obj/kern/kernel.asm	/^f0102343:	3c 30                	cmp    $0x30,%al$/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	75 10                	jne    f0102357 <strtol+0x57>$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	75 0a                	jne    f0102357 <strtol+0x57>$/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	83 c2 02             	add    $0x2,%edx$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	eb 12                	jmp    f0102369 <strtol+0x69>$/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	85 db                	test   %ebx,%ebx$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	75 0e                	jne    f0102369 <strtol+0x69>$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	3c 30                	cmp    $0x30,%al$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	75 05                	jne    f0102364 <strtol+0x64>$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	42                   	inc    %edx$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	b3 08                	mov    $0x8,%bl$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	eb 05                	jmp    f0102369 <strtol+0x69>$/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	89 de                	mov    %ebx,%esi$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	8a 0a                	mov    (%edx),%cl$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	77 08                	ja     f0102382 <strtol+0x82>$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	eb 1e                	jmp    f01023a0 <strtol+0xa0>$/;"	l
f0102382	obj/kern/kernel.asm	/^f0102382:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f0102385	obj/kern/kernel.asm	/^f0102385:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	77 08                	ja     f0102392 <strtol+0x92>$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	eb 0e                	jmp    f01023a0 <strtol+0xa0>$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	77 12                	ja     f01023ac <strtol+0xac>$/;"	l
f010239a	obj/kern/kernel.asm	/^f010239a:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	39 f1                	cmp    %esi,%ecx$/;"	l
f01023a2	obj/kern/kernel.asm	/^f01023a2:	7d 0c                	jge    f01023b0 <strtol+0xb0>$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	42                   	inc    %edx$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	0f af c6             	imul   %esi,%eax$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	01 c8                	add    %ecx,%eax$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	eb c4                	jmp    f0102370 <strtol+0x70>$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	89 c1                	mov    %eax,%ecx$/;"	l
f01023ae	obj/kern/kernel.asm	/^f01023ae:	eb 02                	jmp    f01023b2 <strtol+0xb2>$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	89 c1                	mov    %eax,%ecx$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	74 05                	je     f01023bd <strtol+0xbd>$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	89 13                	mov    %edx,(%ebx)$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	85 ff                	test   %edi,%edi$/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	74 04                	je     f01023c5 <strtol+0xc5>$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	89 c8                	mov    %ecx,%eax$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	f7 d8                	neg    %eax$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	5b                   	pop    %ebx$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	5e                   	pop    %esi$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	5f                   	pop    %edi$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	5d                   	pop    %ebp$/;"	l
f01023c9	obj/kern/kernel.asm	/^f01023c9:	c3                   	ret    $/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc <__udivdi3>:$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	55                   	push   %ebp$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	57                   	push   %edi$/;"	l
f01023ce	obj/kern/kernel.asm	/^f01023ce:	56                   	push   %esi$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	89 cd                	mov    %ecx,%ebp$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	85 c0                	test   %eax,%eax$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	75 2c                	jne    f0102418 <__udivdi3+0x4c>$/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	39 f9                	cmp    %edi,%ecx$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	77 68                	ja     f0102458 <__udivdi3+0x8c>$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	85 c9                	test   %ecx,%ecx$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	75 0b                	jne    f01023ff <__udivdi3+0x33>$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	31 d2                	xor    %edx,%edx$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	f7 f1                	div    %ecx$/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	89 c1                	mov    %eax,%ecx$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	31 d2                	xor    %edx,%edx$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	89 f8                	mov    %edi,%eax$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	f7 f1                	div    %ecx$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	89 c7                	mov    %eax,%edi$/;"	l
f0102407	obj/kern/kernel.asm	/^f0102407:	89 f0                	mov    %esi,%eax$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	f7 f1                	div    %ecx$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	89 c6                	mov    %eax,%esi$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	89 f0                	mov    %esi,%eax$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	89 fa                	mov    %edi,%edx$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	5e                   	pop    %esi$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	5f                   	pop    %edi$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	5d                   	pop    %ebp$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	c3                   	ret    $/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	39 f8                	cmp    %edi,%eax$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	77 2c                	ja     f0102448 <__udivdi3+0x7c>$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	0f bd f0             	bsr    %eax,%esi$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	75 4c                	jne    f0102470 <__udivdi3+0xa4>$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	39 f8                	cmp    %edi,%eax$/;"	l
f0102426	obj/kern/kernel.asm	/^f0102426:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010242b	obj/kern/kernel.asm	/^f010242b:	72 0a                	jb     f0102437 <__udivdi3+0x6b>$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	0f 87 ad 00 00 00    	ja     f01024e4 <__udivdi3+0x118>$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	89 f0                	mov    %esi,%eax$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	89 fa                	mov    %edi,%edx$/;"	l
f0102440	obj/kern/kernel.asm	/^f0102440:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	5e                   	pop    %esi$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	5f                   	pop    %edi$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	5d                   	pop    %ebp$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	c3                   	ret    $/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	90                   	nop$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	31 ff                	xor    %edi,%edi$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	31 f6                	xor    %esi,%esi$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	89 f0                	mov    %esi,%eax$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	89 fa                	mov    %edi,%edx$/;"	l
f0102450	obj/kern/kernel.asm	/^f0102450:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	5e                   	pop    %esi$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	5f                   	pop    %edi$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	5d                   	pop    %ebp$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	c3                   	ret    $/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	90                   	nop$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	89 fa                	mov    %edi,%edx$/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	89 f0                	mov    %esi,%eax$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	f7 f1                	div    %ecx$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	89 c6                	mov    %eax,%esi$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	31 ff                	xor    %edi,%edi$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	89 f0                	mov    %esi,%eax$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	89 fa                	mov    %edi,%edx$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	5e                   	pop    %esi$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	5f                   	pop    %edi$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	5d                   	pop    %ebp$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	c3                   	ret    $/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	89 f1                	mov    %esi,%ecx$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	d3 e0                	shl    %cl,%eax$/;"	d
f0102474	obj/kern/kernel.asm	/^f0102474:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	29 f0                	sub    %esi,%eax$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	89 ea                	mov    %ebp,%edx$/;"	l
f0102481	obj/kern/kernel.asm	/^f0102481:	88 c1                	mov    %al,%cl$/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	d3 ea                	shr    %cl,%edx$/;"	d
f0102485	obj/kern/kernel.asm	/^f0102485:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	09 ca                	or     %ecx,%edx$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	89 f1                	mov    %esi,%ecx$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	d3 e5                	shl    %cl,%ebp$/;"	d
f0102493	obj/kern/kernel.asm	/^f0102493:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
f0102497	obj/kern/kernel.asm	/^f0102497:	89 fd                	mov    %edi,%ebp$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	88 c1                	mov    %al,%cl$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	d3 ed                	shr    %cl,%ebp$/;"	d
f010249d	obj/kern/kernel.asm	/^f010249d:	89 fa                	mov    %edi,%edx$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	89 f1                	mov    %esi,%ecx$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	d3 e2                	shl    %cl,%edx$/;"	d
f01024a3	obj/kern/kernel.asm	/^f01024a3:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	88 c1                	mov    %al,%cl$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	d3 ef                	shr    %cl,%edi$/;"	d
f01024ab	obj/kern/kernel.asm	/^f01024ab:	09 d7                	or     %edx,%edi$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	89 f8                	mov    %edi,%eax$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	89 ea                	mov    %ebp,%edx$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	89 d1                	mov    %edx,%ecx$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	89 c7                	mov    %eax,%edi$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	39 d1                	cmp    %edx,%ecx$/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	72 17                	jb     f01024d8 <__udivdi3+0x10c>$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	74 09                	je     f01024cc <__udivdi3+0x100>$/;"	l
f01024c3	obj/kern/kernel.asm	/^f01024c3:	89 fe                	mov    %edi,%esi$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	31 ff                	xor    %edi,%edi$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	e9 41 ff ff ff       	jmp    f010240d <__udivdi3+0x41>$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	89 f1                	mov    %esi,%ecx$/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	d3 e2                	shl    %cl,%edx$/;"	d
f01024d4	obj/kern/kernel.asm	/^f01024d4:	39 c2                	cmp    %eax,%edx$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	73 eb                	jae    f01024c3 <__udivdi3+0xf7>$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	31 ff                	xor    %edi,%edi$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	e9 2b ff ff ff       	jmp    f010240d <__udivdi3+0x41>$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	66 90                	xchg   %ax,%ax$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	31 f6                	xor    %esi,%esi$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	e9 22 ff ff ff       	jmp    f010240d <__udivdi3+0x41>$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec <__umoddi3>:$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	55                   	push   %ebp$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	57                   	push   %edi$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	56                   	push   %esi$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01024f2	obj/kern/kernel.asm	/^f01024f2:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f01024f6	obj/kern/kernel.asm	/^f01024f6:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0102502	obj/kern/kernel.asm	/^f0102502:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	89 c7                	mov    %eax,%edi$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	89 f2                	mov    %esi,%edx$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	85 ed                	test   %ebp,%ebp$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	75 16                	jne    f0102528 <__umoddi3+0x3c>$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	39 f1                	cmp    %esi,%ecx$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	0f 86 a6 00 00 00    	jbe    f01025c0 <__umoddi3+0xd4>$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	f7 f1                	div    %ecx$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	89 d0                	mov    %edx,%eax$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	31 d2                	xor    %edx,%edx$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102523	obj/kern/kernel.asm	/^f0102523:	5e                   	pop    %esi$/;"	l
f0102524	obj/kern/kernel.asm	/^f0102524:	5f                   	pop    %edi$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	5d                   	pop    %ebp$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	c3                   	ret    $/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	90                   	nop$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	39 f5                	cmp    %esi,%ebp$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	0f 87 ac 00 00 00    	ja     f01025dc <__umoddi3+0xf0>$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	0f 84 a8 00 00 00    	je     f01025e8 <__umoddi3+0xfc>$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	d3 e5                	shl    %cl,%ebp$/;"	d
f0102546	obj/kern/kernel.asm	/^f0102546:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
f010254f	obj/kern/kernel.asm	/^f010254f:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	89 f9                	mov    %edi,%ecx$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	d3 e8                	shr    %cl,%eax$/;"	d
f0102557	obj/kern/kernel.asm	/^f0102557:	09 e8                	or     %ebp,%eax$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	d3 e0                	shl    %cl,%eax$/;"	d
f0102567	obj/kern/kernel.asm	/^f0102567:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	89 f2                	mov    %esi,%edx$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	d3 e2                	shl    %cl,%edx$/;"	d
f010256f	obj/kern/kernel.asm	/^f010256f:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0102573	obj/kern/kernel.asm	/^f0102573:	d3 e0                	shl    %cl,%eax$/;"	d
f0102575	obj/kern/kernel.asm	/^f0102575:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	89 f9                	mov    %edi,%ecx$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	d3 e8                	shr    %cl,%eax$/;"	d
f0102581	obj/kern/kernel.asm	/^f0102581:	09 d0                	or     %edx,%eax$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	d3 ee                	shr    %cl,%esi$/;"	d
f0102585	obj/kern/kernel.asm	/^f0102585:	89 f2                	mov    %esi,%edx$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	89 d6                	mov    %edx,%esi$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	89 c5                	mov    %eax,%ebp$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	89 d1                	mov    %edx,%ecx$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	39 d6                	cmp    %edx,%esi$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	72 67                	jb     f0102600 <__umoddi3+0x114>$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	74 75                	je     f0102610 <__umoddi3+0x124>$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	29 e8                	sub    %ebp,%eax$/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	19 ce                	sbb    %ecx,%esi$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	d3 e8                	shr    %cl,%eax$/;"	d
f01025a9	obj/kern/kernel.asm	/^f01025a9:	89 f2                	mov    %esi,%edx$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	89 f9                	mov    %edi,%ecx$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	d3 e2                	shl    %cl,%edx$/;"	d
f01025af	obj/kern/kernel.asm	/^f01025af:	09 d0                	or     %edx,%eax$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	89 f2                	mov    %esi,%edx$/;"	l
f01025b3	obj/kern/kernel.asm	/^f01025b3:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	d3 ea                	shr    %cl,%edx$/;"	d
f01025b9	obj/kern/kernel.asm	/^f01025b9:	83 c4 20             	add    $0x20,%esp$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	5e                   	pop    %esi$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	5f                   	pop    %edi$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	5d                   	pop    %ebp$/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	c3                   	ret    $/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	85 c9                	test   %ecx,%ecx$/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	75 0b                	jne    f01025cf <__umoddi3+0xe3>$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	31 d2                	xor    %edx,%edx$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	f7 f1                	div    %ecx$/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	89 f0                	mov    %esi,%eax$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	31 d2                	xor    %edx,%edx$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	f7 f1                	div    %ecx$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	89 f8                	mov    %edi,%eax$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	e9 3e ff ff ff       	jmp    f010251a <__umoddi3+0x2e>$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	89 f2                	mov    %esi,%edx$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	83 c4 20             	add    $0x20,%esp$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	5e                   	pop    %esi$/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	5f                   	pop    %edi$/;"	l
f01025e3	obj/kern/kernel.asm	/^f01025e3:	5d                   	pop    %ebp$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	c3                   	ret    $/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	39 f5                	cmp    %esi,%ebp$/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	72 04                	jb     f01025f0 <__umoddi3+0x104>$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	39 f9                	cmp    %edi,%ecx$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	77 06                	ja     f01025f6 <__umoddi3+0x10a>$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	89 f2                	mov    %esi,%edx$/;"	l
f01025f2	obj/kern/kernel.asm	/^f01025f2:	29 cf                	sub    %ecx,%edi$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	19 ea                	sbb    %ebp,%edx$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	89 f8                	mov    %edi,%eax$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	83 c4 20             	add    $0x20,%esp$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	5e                   	pop    %esi$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	5f                   	pop    %edi$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	5d                   	pop    %ebp$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	c3                   	ret    $/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	90                   	nop$/;"	l
f0102600	obj/kern/kernel.asm	/^f0102600:	89 d1                	mov    %edx,%ecx$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	89 c5                	mov    %eax,%ebp$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	eb 8d                	jmp    f010259b <__umoddi3+0xaf>$/;"	l
f010260e	obj/kern/kernel.asm	/^f010260e:	66 90                	xchg   %ax,%ax$/;"	l
f0102610	obj/kern/kernel.asm	/^f0102610:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	72 ea                	jb     f0102600 <__umoddi3+0x114>$/;"	l
f0102616	obj/kern/kernel.asm	/^f0102616:	89 f1                	mov    %esi,%ecx$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	eb 81                	jmp    f010259b <__umoddi3+0xaf>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
game_dest	kern/game.h	/^	game_dest,$/;"	e	enum:__anon5
game_display	kern/game_draw.c	/^game_display(){$/;"	f
game_display	kern/game_draw.h	/^void game_display();$/;"	p	signature:()
game_loop	kern/game.c	/^game_loop(void) { \/* driven by keyboard interuption *\/$/;"	f	signature:(void)
game_loop	kern/game.h	/^void game_loop();$/;"	p	signature:()
game_out	kern/game.h	/^	game_out$/;"	e	enum:__anon5
game_space	kern/game.h	/^	game_space = 0,$/;"	e	enum:__anon5
game_wall	kern/game.h	/^	game_wall,$/;"	e	enum:__anon5
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getch	obj/kern/kernel.asm	/^		getch = getchar();$/;"	d
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
grey	kern/game_draw.h	5;"	d
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
height	kern/draw.c	40;"	d	file:
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
map	kern/game_layout.h	/^static int map[9][9] = {$/;"	v
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
move_area_height	kern/draw.c	43;"	d	file:
move_area_width	kern/draw.c	44;"	d	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
next_box_x	kern/game.c	13;"	d	file:
next_box_x	obj/kern/kernel.asm	/^#define next_box_x(index) (box[index].x+right)$/;"	d
next_box_y	kern/game.c	14;"	d	file:
next_box_y	obj/kern/kernel.asm	/^#define next_box_y(index) (box[index].y+down)$/;"	d
next_x	kern/game.c	11;"	d	file:
next_y	kern/game.c	12;"	d	file:
nextfree	kern/pmap.c	/^static char *nextfree;	\/\/ virtual address of next byte of free memory$/;"	v	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) (n+nextfree), PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	75;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*)boot_alloc(sizeof(struct PageInfo)*npages);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pink	kern/game_draw.h	8;"	d
pos	kern/game.h	/^struct pos{$/;"	s
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pos::x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
pos::y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
position_init	kern/game.c	/^position_init() {$/;"	f	file:
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
prepare_buffer	kern/video.c	/^prepare_buffer(void) {$/;"	f	signature:(void)
prepare_buffer	kern/video.h	/^void prepare_buffer(void);$/;"	p	signature:(void)
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
protag	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:pos
protag_infrontof_box	kern/game.c	/^protag_infrontof_box(int right, int down) { \/\/ if false return 0,else return box index + 1$/;"	f	file:	signature:(int right, int down)
protag_movable	kern/game.c	/^protag_movable(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protag_move	kern/game.c	/^protag_move(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
red	kern/game_draw.h	10;"	d
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	obj/kern/kernel.asm	/^		result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static void*$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	obj/kern/kernel.asm	/^uint8_t *vmem = VMEM_ADDR;$/;"	l
uint8_t	obj/kern/kernel.asm	/^uint8_t vbuf[SCR_SIZE];$/;"	l
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vbuf	kern/video.c	/^uint8_t vbuf[SCR_SIZE];$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
victory	kern/game.c	/^victory() {$/;"	f	file:
vmem	kern/video.c	/^uint8_t *vmem = VMEM_ADDR;$/;"	v
vmem	obj/kern/kernel.asm	/^	vmem = VMEM_ADDR;$/;"	d
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	kern/draw.c	39;"	d	file:
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
yellow	kern/game_draw.h	7;"	d
