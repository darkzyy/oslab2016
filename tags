!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon3
ALT	kern/console.c	219;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon2
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon2
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon2
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f	access:public
E0ESC	kern/console.c	225;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon5
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon5
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon5
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon5
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon5
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon6
E_EOF	inc/error.h	/^	E_EOF		= 9,	\/\/ Unexpected end of file$/;"	e	enum:__anon6
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon6
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon6
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 8,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon6
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon6
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon6
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon6
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon6
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEN	kern/game_draw.c	48;"	d	file:
LEN	kern/game_draw.c	6;"	d	file:
LEN	obj/kern/kernel.asm	/^#define LEN 20$/;"	d
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	71;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon6
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	29;"	d	file:
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	215;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon8
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	86;"	d
O_CREAT	inc/lib.h	88;"	d
O_EXCL	inc/lib.h	90;"	d
O_MKDIR	inc/lib.h	91;"	d
O_RDONLY	inc/lib.h	83;"	d
O_RDWR	inc/lib.h	85;"	d
O_TRUNC	inc/lib.h	89;"	d
O_WRONLY	inc/lib.h	84;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 8 09:40:26 EDT 2014$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIC	kern/draw.c	6;"	d	file:
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	76;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SCR_HEIGHT	kern/video.h	9;"	d
SCR_SIZE	kern/video.h	10;"	d
SCR_WIDTH	kern/video.h	8;"	d
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon8
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon8
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon8
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon8
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon8
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon8
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon8
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon8
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon8
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon8
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon8
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon8
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon8
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
VMEM_ADDR	kern/video.h	11;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	70;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_CONSOLE_H_	kern/video.h	2;"	d
_DRAW_H_	kern/draw.h	2;"	d
_GAME_DRAW_H_	kern/game_draw.h	2;"	d
_GAME_H_	kern/game.h	2;"	d
_GAME_LAYOUT_H_	kern/game_layout.h	2;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon4::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:	access:public
__anon4::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:	access:public
__anon4::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:	access:public
__game_restart	obj/kern/kernel.asm	/^__game_restart:$/;"	l
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
anchor_border_bottom	kern/draw.c	49;"	d	file:
anchor_border_bottom	obj/kern/kernel.asm	/^#define anchor_border_bottom (move_area_height+anchor_border_top-1)$/;"	d
anchor_border_left	kern/draw.c	46;"	d	file:
anchor_border_right	kern/draw.c	48;"	d	file:
anchor_border_right	obj/kern/kernel.asm	/^#define anchor_border_right (move_area_width+anchor_border_left-1)$/;"	d
anchor_border_top	kern/draw.c	47;"	d	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
bad	obj/boot/boot.asm	/^bad:$/;"	l
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = limit;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
black	kern/game_draw.h	9;"	d
blue	kern/game_draw.h	6;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
box	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	kern/draw.c	/^static int c[width*height]=PIC;$/;"	v	file:
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	inc/stdio.h	57;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^			default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
display_buffer	kern/video.c	/^display_buffer(void) {$/;"	f	signature:(void)
display_buffer	kern/video.h	/^void display_buffer(void);$/;"	p	signature:(void)
draw_box	kern/game_draw.c	/^draw_box() { \/*and protagonist*\/$/;"	f	file:
draw_color	kern/draw.c	/^draw_color()$/;"	f
draw_color	kern/draw.h	/^void draw_color();$/;"	p	signature:()
draw_map	kern/game_draw.c	/^draw_map() {$/;"	f	file:
draw_pixel	kern/video.h	/^draw_pixel(int x, int y, int color) {$/;"	f	signature:(int x, int y, int color)
draw_square	kern/video.c	/^draw_square(int y, int x, int color, int len) {$/;"	f	signature:(int y, int x, int color, int len)
draw_square	kern/video.h	/^void draw_square(int x, int y, int color, int len);$/;"	p	signature:(int x, int y, int color, int len)
draw_string	kern/video.h	/^void draw_string(const char*, int, int, int);$/;"	p	signature:(const char*, int, int, int)
draw_tux	kern/draw.c	/^draw_tux() $/;"	f
draw_tux	kern/draw.h	/^void draw_tux();$/;"	p	signature:()
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	signature:(uint8_t *binary, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, enum EnvType type);$/;"	p	signature:(uint8_t *binary, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof(struct Env)*NENV);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/kern/kernel.asm	/^    err = envid2env(dstenvid, &dst_env_store, 1);$/;"	d
err	obj/kern/kernel.asm	/^    err = page_insert(dst_env_store->env_pgdir, pp, dstva, perm);$/;"	d
err	obj/kern/kernel.asm	/^    err = page_insert(env_store->env_pgdir, pp, va, perm);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/kern/kernel.asm	/^extern uint8_t *vmem;$/;"	l
extern	obj/kern/kernel.asm	/^extern uint8_t vbuf[];$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 5c 00 00 00       	call   f010009a <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d c0 ee 22 f0 00 	cmpl   $0x0,0xf022eec0$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 c0 ee 22 f0    	mov    %esi,0xf022eec0$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 4a 60 00 00       	call   f01060ab <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 80 67 10 f0       	push   $0xf0106780$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 d5 35 00 00       	call   f0103647 <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 a5 35 00 00       	call   f0103621 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 d1 6f 10 f0 	movl   $0xf0106fd1,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 bf 35 00 00       	call   f0103647 <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 b1 07 00 00       	call   f0100846 <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <i386_init>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	53                   	push   %ebx$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	b8 08 00 28 f0       	mov    $0xf0280008,%eax$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	2d e0 d7 22 f0       	sub    $0xf022d7e0,%eax$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	50                   	push   %eax$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	6a 00                	push   $0x0$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	68 e0 d7 22 f0       	push   $0xf022d7e0$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	e8 ce 59 00 00       	call   f0105a86 <memset>$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	e8 66 05 00 00       	call   f0100623 <cons_init>$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000c0	obj/kern/kernel.asm	/^f01000c0:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	68 ec 67 10 f0       	push   $0xf01067ec$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	e8 78 35 00 00       	call   f0103647 <cprintf>$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	e8 a9 11 00 00       	call   f010127d <mem_init>$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	e8 dd 2d 00 00       	call   f0102eb6 <env_init>$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	e8 11 36 00 00       	call   f01036ef <trap_init>$/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	e8 c1 5c 00 00       	call   f0105da4 <mp_init>$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	e8 de 5f 00 00       	call   f01060c6 <lapic_init>$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	e8 96 34 00 00       	call   f0103583 <pic_init>$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed:	c7 04 24 00 34 12 f0 	movl   $0xf0123400,(%esp)$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 1d 62 00 00       	call   f0106316 <spin_lock>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	83 3d c8 ee 22 f0 07 	cmpl   $0x7,0xf022eec8$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	77 16                	ja     f010011b <i386_init+0x81>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	68 00 70 00 00       	push   $0x7000$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	6a 56                	push   $0x56$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	68 07 68 10 f0       	push   $0xf0106807$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	e8 25 ff ff ff       	call   f0100040 <_panic>$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	b8 0a 5d 10 f0       	mov    $0xf0105d0a,%eax$/;"	l
f0100123	obj/kern/kernel.asm	/^f0100123:	2d 90 5c 10 f0       	sub    $0xf0105c90,%eax$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	50                   	push   %eax$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	68 90 5c 10 f0       	push   $0xf0105c90$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	e8 9b 59 00 00       	call   f0105ad3 <memmove>$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	83 c4 10             	add    $0x10,%esp$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	bb 40 f0 23 f0       	mov    $0xf023f040,%ebx$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	eb 4e                	jmp    f0100190 <i386_init+0xf6>$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	e8 64 5f 00 00       	call   f01060ab <cpunum>$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	05 40 f0 23 f0       	add    $0xf023f040,%eax$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	74 3a                	je     f010018d <i386_init+0xf3>$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	89 d8                	mov    %ebx,%eax$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	2d 40 f0 23 f0       	sub    $0xf023f040,%eax$/;"	l
f010015a	obj/kern/kernel.asm	/^f010015a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	8d 80 00 80 24 f0    	lea    -0xfdb8000(%eax),%eax$/;"	l
f010016c	obj/kern/kernel.asm	/^f010016c:	a3 c4 ee 22 f0       	mov    %eax,0xf022eec4$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	50                   	push   %eax$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	e8 92 60 00 00       	call   f0106214 <lapic_startap>$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	75 f8                	jne    f0100185 <i386_init+0xeb>$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	6b 05 e4 f3 23 f0 74 	imul   $0x74,0xf023f3e4,%eax$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	05 40 f0 23 f0       	add    $0xf023f040,%eax$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010019e	obj/kern/kernel.asm	/^f010019e:	72 a2                	jb     f0100142 <i386_init+0xa8>$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	6a 00                	push   $0x0$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	68 b4 b4 19 f0       	push   $0xf019b4b4$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	e8 de 2e 00 00       	call   f010308d <env_create>$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	e8 06 42 00 00       	call   f01043ba <sched_yield>$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4 <mp_main>:$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	55                   	push   %ebp$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	77 12                	ja     f01001d8 <mp_main+0x24>$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	50                   	push   %eax$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	6a 6d                	push   $0x6d$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	68 07 68 10 f0       	push   $0xf0106807$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	e8 68 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	e8 c6 5e 00 00       	call   f01060ab <cpunum>$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	50                   	push   %eax$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	68 13 68 10 f0       	push   $0xf0106813$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	e8 54 34 00 00       	call   f0103647 <cprintf>$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	e8 ce 5e 00 00       	call   f01060c6 <lapic_init>$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	e8 8f 2c 00 00       	call   f0102e8c <env_init_percpu>$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	e8 59 34 00 00       	call   f010365b <trap_init_percpu>$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	e8 a4 5e 00 00       	call   f01060ab <cpunum>$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	81 c2 40 f0 23 f0    	add    $0xf023f040,%edx$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	c7 04 24 00 34 12 f0 	movl   $0xf0123400,(%esp)$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	e8 f1 60 00 00       	call   f0106316 <spin_lock>$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	e8 90 41 00 00       	call   f01043ba <sched_yield>$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a <_warn>:$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	55                   	push   %ebp$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	89 e5                	mov    %esp,%ebp$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	53                   	push   %ebx$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	68 29 68 10 f0       	push   $0xf0106829$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	e8 03 34 00 00       	call   f0103647 <cprintf>$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	53                   	push   %ebx$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	e8 d1 33 00 00       	call   f0103621 <vcprintf>$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	c7 04 24 d1 6f 10 f0 	movl   $0xf0106fd1,(%esp)$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	e8 eb 33 00 00       	call   f0103647 <cprintf>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	c9                   	leave  $/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	c3                   	ret    $/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264 <serial_proc_data>:$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	55                   	push   %ebp$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	89 e5                	mov    %esp,%ebp$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	ec                   	in     (%dx),%al$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	a8 01                	test   $0x1,%al$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	74 08                	je     f0100279 <serial_proc_data+0x15>$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	ec                   	in     (%dx),%al$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	eb 05                	jmp    f010027e <serial_proc_data+0x1a>$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	5d                   	pop    %ebp$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	c3                   	ret    $/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280 <cons_intr>:$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	55                   	push   %ebp$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	89 e5                	mov    %esp,%ebp$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	53                   	push   %ebx$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	89 c3                	mov    %eax,%ebx$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	eb 2a                	jmp    f01002b5 <cons_intr+0x35>$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	85 d2                	test   %edx,%edx$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	74 26                	je     f01002b5 <cons_intr+0x35>$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	a1 44 e2 22 f0       	mov    0xf022e244,%eax$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	89 0d 44 e2 22 f0    	mov    %ecx,0xf022e244$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	88 90 40 e0 22 f0    	mov    %dl,-0xfdd1fc0(%eax)$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	75 0a                	jne    f01002b5 <cons_intr+0x35>$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	c7 05 44 e2 22 f0 00 	movl   $0x0,0xf022e244$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	00 00 00 $/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	ff d3                	call   *%ebx$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	89 c2                	mov    %eax,%edx$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	75 cd                	jne    f010028b <cons_intr+0xb>$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	83 c4 04             	add    $0x4,%esp$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	5b                   	pop    %ebx$/;"	l
f01002c2	obj/kern/kernel.asm	/^f01002c2:	5d                   	pop    %ebp$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	c3                   	ret    $/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4 <kbd_proc_data>:$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	ec                   	in     (%dx),%al$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	a8 01                	test   $0x1,%al$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	0f 84 e8 00 00 00    	je     f01003ba <kbd_proc_data+0xf6>$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	b2 60                	mov    $0x60,%dl$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	ec                   	in     (%dx),%al$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	89 c2                	mov    %eax,%edx$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	3c e0                	cmp    $0xe0,%al$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	75 0d                	jne    f01002e8 <kbd_proc_data+0x24>$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	83 0d 00 e0 22 f0 40 	orl    $0x40,0xf022e000$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	c3                   	ret    $/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	84 c0                	test   %al,%al$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	79 2f                	jns    f010031b <kbd_proc_data+0x57>$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	8b 0d 00 e0 22 f0    	mov    0xf022e000,%ecx$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	75 05                	jne    f01002fc <kbd_proc_data+0x38>$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	89 c2                	mov    %eax,%edx$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	0f b6 80 c0 69 10 f0 	movzbl -0xfef9640(%eax),%eax$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	f7 d0                	not    %eax$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	21 c8                	and    %ecx,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	a3 00 e0 22 f0       	mov    %eax,0xf022e000$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	c3                   	ret    $/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	55                   	push   %ebp$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	89 e5                	mov    %esp,%ebp$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	53                   	push   %ebx$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	8b 0d 00 e0 22 f0    	mov    0xf022e000,%ecx$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	74 0e                	je     f010033b <kbd_proc_data+0x77>$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	89 c2                	mov    %eax,%edx$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	89 0d 00 e0 22 f0    	mov    %ecx,0xf022e000$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	0f b6 90 c0 69 10 f0 	movzbl -0xfef9640(%eax),%edx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	0b 15 00 e0 22 f0    	or     0xf022e000,%edx$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	0f b6 88 c0 68 10 f0 	movzbl -0xfef9740(%eax),%ecx$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	31 ca                	xor    %ecx,%edx$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	89 15 00 e0 22 f0    	mov    %edx,0xf022e000$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	89 d1                	mov    %edx,%ecx$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	8b 0c 8d 80 68 10 f0 	mov    -0xfef9780(,%ecx,4),%ecx$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	0f b6 04 01          	movzbl (%ecx,%eax,1),%eax$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	f6 c2 08             	test   $0x8,%dl$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	74 1a                	je     f010038c <kbd_proc_data+0xc8>$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	89 d8                	mov    %ebx,%eax$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	77 05                	ja     f0100381 <kbd_proc_data+0xbd>$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	eb 0b                	jmp    f010038c <kbd_proc_data+0xc8>$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	83 e8 41             	sub    $0x41,%eax$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	77 03                	ja     f010038c <kbd_proc_data+0xc8>$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	83 c3 20             	add    $0x20,%ebx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	75 2c                	jne    f01003c0 <kbd_proc_data+0xfc>$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	f7 d2                	not    %edx$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	75 25                	jne    f01003c0 <kbd_proc_data+0xfc>$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	68 43 68 10 f0       	push   $0xf0106843$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	e8 9f 32 00 00       	call   f0103647 <cprintf>$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	ee                   	out    %al,(%dx)$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	89 d8                	mov    %ebx,%eax$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	eb 08                	jmp    f01003c2 <kbd_proc_data+0xfe>$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	c3                   	ret    $/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	89 d8                	mov    %ebx,%eax$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	c9                   	leave  $/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	c3                   	ret    $/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7 <cons_putc>:$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	55                   	push   %ebp$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	57                   	push   %edi$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	56                   	push   %esi$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	53                   	push   %ebx$/;"	l
f01003cd	obj/kern/kernel.asm	/^f01003cd:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	89 c7                	mov    %eax,%edi$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	eb 09                	jmp    f01003ec <cons_putc+0x25>$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	89 ca                	mov    %ecx,%edx$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	ec                   	in     (%dx),%al$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	ec                   	in     (%dx),%al$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	ec                   	in     (%dx),%al$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	ec                   	in     (%dx),%al$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	89 f2                	mov    %esi,%edx$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	ec                   	in     (%dx),%al$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	a8 20                	test   $0x20,%al$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	75 08                	jne    f01003fb <cons_putc+0x34>$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	7e e8                	jle    f01003e3 <cons_putc+0x1c>$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	89 f8                	mov    %edi,%eax$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	89 f8                	mov    %edi,%eax$/;"	l
f0100407	obj/kern/kernel.asm	/^f0100407:	ee                   	out    %al,(%dx)$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	eb 09                	jmp    f0100422 <cons_putc+0x5b>$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	89 ca                	mov    %ecx,%edx$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	ec                   	in     (%dx),%al$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	ec                   	in     (%dx),%al$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	ec                   	in     (%dx),%al$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	ec                   	in     (%dx),%al$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	89 f2                	mov    %esi,%edx$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	ec                   	in     (%dx),%al$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	84 c0                	test   %al,%al$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	78 08                	js     f0100431 <cons_putc+0x6a>$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	7e e8                	jle    f0100419 <cons_putc+0x52>$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	ee                   	out    %al,(%dx)$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	b2 7a                	mov    $0x7a,%dl$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	ee                   	out    %al,(%dx)$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	ee                   	out    %al,(%dx)$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	f7 c7 00 ff ff ff    	test   $0xffffff00,%edi$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	75 06                	jne    f0100457 <cons_putc+0x90>$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	81 cf 00 07 00 00    	or     $0x700,%edi$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	89 f8                	mov    %edi,%eax$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	74 74                	je     f01004d5 <cons_putc+0x10e>$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	7f 0a                	jg     f0100470 <cons_putc+0xa9>$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	74 14                	je     f010047f <cons_putc+0xb8>$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	e9 99 00 00 00       	jmp    f0100509 <cons_putc+0x142>$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	74 3a                	je     f01004af <cons_putc+0xe8>$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	74 3d                	je     f01004b7 <cons_putc+0xf0>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	e9 8a 00 00 00       	jmp    f0100509 <cons_putc+0x142>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	0f b7 05 48 e2 22 f0 	movzwl 0xf022e248,%eax$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	66 85 c0             	test   %ax,%ax$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	0f 84 e6 00 00 00    	je     f0100575 <cons_putc+0x1ae>$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	66 a3 48 e2 22 f0    	mov    %ax,0xf022e248$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	83 cf 20             	or     $0x20,%edi$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	8b 15 4c e2 22 f0    	mov    0xf022e24c,%edx$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	eb 78                	jmp    f0100527 <cons_putc+0x160>$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	66 83 05 48 e2 22 f0 	addw   $0x50,0xf022e248$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	50 $/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	0f b7 05 48 e2 22 f0 	movzwl 0xf022e248,%eax$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	66 a3 48 e2 22 f0    	mov    %ax,0xf022e248$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	eb 52                	jmp    f0100527 <cons_putc+0x160>$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	e8 e8 fe ff ff       	call   f01003c7 <cons_putc>$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	e8 de fe ff ff       	call   f01003c7 <cons_putc>$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	e8 d4 fe ff ff       	call   f01003c7 <cons_putc>$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	e8 ca fe ff ff       	call   f01003c7 <cons_putc>$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	e8 c0 fe ff ff       	call   f01003c7 <cons_putc>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	eb 1e                	jmp    f0100527 <cons_putc+0x160>$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	0f b7 05 48 e2 22 f0 	movzwl 0xf022e248,%eax$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	66 89 15 48 e2 22 f0 	mov    %dx,0xf022e248$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	8b 15 4c e2 22 f0    	mov    0xf022e24c,%edx$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	66 81 3d 48 e2 22 f0 	cmpw   $0x7cf,0xf022e248$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	cf 07 $/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	76 43                	jbe    f0100575 <cons_putc+0x1ae>$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	a1 4c e2 22 f0       	mov    0xf022e24c,%eax$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	68 00 0f 00 00       	push   $0xf00$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	52                   	push   %edx$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	50                   	push   %eax$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	e8 87 55 00 00       	call   f0105ad3 <memmove>$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	8b 15 4c e2 22 f0    	mov    0xf022e24c,%edx$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	83 c0 02             	add    $0x2,%eax$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	39 d0                	cmp    %edx,%eax$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	75 f4                	jne    f0100561 <cons_putc+0x19a>$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	66 83 2d 48 e2 22 f0 	subw   $0x50,0xf022e248$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	50 $/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	8b 0d 50 e2 22 f0    	mov    0xf022e250,%ecx$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	89 ca                	mov    %ecx,%edx$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	ee                   	out    %al,(%dx)$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	0f b7 1d 48 e2 22 f0 	movzwl 0xf022e248,%ebx$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	89 d8                	mov    %ebx,%eax$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	89 f2                	mov    %esi,%edx$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	ee                   	out    %al,(%dx)$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	89 ca                	mov    %ecx,%edx$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	ee                   	out    %al,(%dx)$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	89 d8                	mov    %ebx,%eax$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	89 f2                	mov    %esi,%edx$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	ee                   	out    %al,(%dx)$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	5b                   	pop    %ebx$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	5e                   	pop    %esi$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	5f                   	pop    %edi$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	5d                   	pop    %ebp$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	c3                   	ret    $/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab <serial_intr>:$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	80 3d 54 e2 22 f0 00 	cmpb   $0x0,0xf022e254$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	74 11                	je     f01005c5 <serial_intr+0x1a>$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	55                   	push   %ebp$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	b8 64 02 10 f0       	mov    $0xf0100264,%eax$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	e8 bc fc ff ff       	call   f0100280 <cons_intr>$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	c9                   	leave  $/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	f3 c3                	repz ret $/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7 <kbd_intr>:$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	55                   	push   %ebp$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	b8 c4 02 10 f0       	mov    $0xf01002c4,%eax$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	e8 a9 fc ff ff       	call   f0100280 <cons_intr>$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	c9                   	leave  $/;"	l
f01005d8	obj/kern/kernel.asm	/^f01005d8:	c3                   	ret    $/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9 <cons_getc>:$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	55                   	push   %ebp$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	89 e5                	mov    %esp,%ebp$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	e8 c7 ff ff ff       	call   f01005ab <serial_intr>$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	e8 de ff ff ff       	call   f01005c7 <kbd_intr>$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	a1 40 e2 22 f0       	mov    0xf022e240,%eax$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	3b 05 44 e2 22 f0    	cmp    0xf022e244,%eax$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	74 26                	je     f010061c <cons_getc+0x43>$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	89 15 40 e2 22 f0    	mov    %edx,0xf022e240$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	0f b6 88 40 e0 22 f0 	movzbl -0xfdd1fc0(%eax),%ecx$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	89 c8                	mov    %ecx,%eax$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	75 11                	jne    f0100621 <cons_getc+0x48>$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	c7 05 40 e2 22 f0 00 	movl   $0x0,0xf022e240$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	00 00 00 $/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	eb 05                	jmp    f0100621 <cons_getc+0x48>$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	c9                   	leave  $/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	c3                   	ret    $/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623 <cons_init>:$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	55                   	push   %ebp$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	89 e5                	mov    %esp,%ebp$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	57                   	push   %edi$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	56                   	push   %esi$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	53                   	push   %ebx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	5a a5 $/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	74 11                	je     f010065a <cons_init+0x37>$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	c7 05 50 e2 22 f0 b4 	movl   $0x3b4,0xf022e250$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	03 00 00 $/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	eb 16                	jmp    f0100670 <cons_init+0x4d>$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	c7 05 50 e2 22 f0 d4 	movl   $0x3d4,0xf022e250$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	03 00 00 $/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	8b 3d 50 e2 22 f0    	mov    0xf022e250,%edi$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	89 fa                	mov    %edi,%edx$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	ee                   	out    %al,(%dx)$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	89 ca                	mov    %ecx,%edx$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	ec                   	in     (%dx),%al$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	89 c3                	mov    %eax,%ebx$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	89 fa                	mov    %edi,%edx$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	ee                   	out    %al,(%dx)$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	89 ca                	mov    %ecx,%edx$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	ec                   	in     (%dx),%al$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	89 35 4c e2 22 f0    	mov    %esi,0xf022e24c$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	89 d8                	mov    %ebx,%eax$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	09 c8                	or     %ecx,%eax$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	66 a3 48 e2 22 f0    	mov    %ax,0xf022e248$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	e8 18 ff ff ff       	call   f01005c7 <kbd_intr>$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	0f b7 05 e8 33 12 f0 	movzwl 0xf01233e8,%eax$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	50                   	push   %eax$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	e8 4a 2e 00 00       	call   f010350e <irq_setmask_8259A>$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	89 da                	mov    %ebx,%edx$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	ee                   	out    %al,(%dx)$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	ee                   	out    %al,(%dx)$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	be f8 03 00 00       	mov    $0x3f8,%esi$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	89 f2                	mov    %esi,%edx$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	ee                   	out    %al,(%dx)$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	ee                   	out    %al,(%dx)$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	ee                   	out    %al,(%dx)$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	ee                   	out    %al,(%dx)$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	ee                   	out    %al,(%dx)$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	ec                   	in     (%dx),%al$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	83 c4 10             	add    $0x10,%esp$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	3c ff                	cmp    $0xff,%al$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	0f 95 c1             	setne  %cl$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	88 0d 54 e2 22 f0    	mov    %cl,0xf022e254$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	89 da                	mov    %ebx,%edx$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	ec                   	in     (%dx),%al$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	89 f2                	mov    %esi,%edx$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	ec                   	in     (%dx),%al$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	84 c9                	test   %cl,%cl$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	75 10                	jne    f0100731 <cons_init+0x10e>$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	68 4f 68 10 f0       	push   $0xf010684f$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	e8 19 2f 00 00       	call   f0103647 <cprintf>$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	5b                   	pop    %ebx$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	5e                   	pop    %esi$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	5f                   	pop    %edi$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	5d                   	pop    %ebp$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	c3                   	ret    $/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739 <cputchar>:$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	55                   	push   %ebp$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	89 e5                	mov    %esp,%ebp$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	e8 80 fc ff ff       	call   f01003c7 <cons_putc>$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	c9                   	leave  $/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	c3                   	ret    $/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749 <getchar>:$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	55                   	push   %ebp$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	89 e5                	mov    %esp,%ebp$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	e8 85 fe ff ff       	call   f01005d9 <cons_getc>$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	85 c0                	test   %eax,%eax$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	74 f7                	je     f010074f <getchar+0x6>$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	c9                   	leave  $/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	c3                   	ret    $/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a <iscons>:$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	55                   	push   %ebp$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	89 e5                	mov    %esp,%ebp$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	5d                   	pop    %ebp$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	c3                   	ret    $/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764 <mon_help>:$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	55                   	push   %ebp$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	89 e5                	mov    %esp,%ebp$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	68 c0 6a 10 f0       	push   $0xf0106ac0$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	68 de 6a 10 f0       	push   $0xf0106ade$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	68 e3 6a 10 f0       	push   $0xf0106ae3$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	e8 c9 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	68 4c 6b 10 f0       	push   $0xf0106b4c$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	68 ec 6a 10 f0       	push   $0xf0106aec$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	68 e3 6a 10 f0       	push   $0xf0106ae3$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	e8 b2 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	c9                   	leave  $/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	c3                   	ret    $/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c <mon_kerninfo>:$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	55                   	push   %ebp$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	89 e5                	mov    %esp,%ebp$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	68 f5 6a 10 f0       	push   $0xf0106af5$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	e8 9b 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	68 74 6b 10 f0       	push   $0xf0106b74$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	e8 89 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	68 9c 6b 10 f0       	push   $0xf0106b9c$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	e8 72 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	68 45 67 10 00       	push   $0x106745$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	68 45 67 10 f0       	push   $0xf0106745$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	68 c0 6b 10 f0       	push   $0xf0106bc0$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	e8 5b 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	68 e0 d7 22 00       	push   $0x22d7e0$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	68 e0 d7 22 f0       	push   $0xf022d7e0$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	68 e4 6b 10 f0       	push   $0xf0106be4$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	e8 44 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	68 08 00 28 00       	push   $0x280008$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	68 08 00 28 f0       	push   $0xf0280008$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	68 08 6c 10 f0       	push   $0xf0106c08$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	e8 2d 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	b8 07 04 28 f0       	mov    $0xf0280407,%eax$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	50                   	push   %eax$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	68 2c 6c 10 f0       	push   $0xf0106c2c$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	e8 12 2e 00 00       	call   f0103647 <cprintf>$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	c9                   	leave  $/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	c3                   	ret    $/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c <mon_backtrace>:$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	55                   	push   %ebp$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	89 e5                	mov    %esp,%ebp$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	5d                   	pop    %ebp$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	c3                   	ret    $/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846 <monitor>:$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	55                   	push   %ebp$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	89 e5                	mov    %esp,%ebp$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	57                   	push   %edi$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	56                   	push   %esi$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	53                   	push   %ebx$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	83 ec 58             	sub    $0x58,%esp$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	68 58 6c 10 f0       	push   $0xf0106c58$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	e8 ee 2d 00 00       	call   f0103647 <cprintf>$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	c7 04 24 7c 6c 10 f0 	movl   $0xf0106c7c,(%esp)$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	e8 e2 2d 00 00       	call   f0103647 <cprintf>$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	74 0e                	je     f010087c <monitor+0x36>$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	e8 1d 35 00 00       	call   f0103d96 <print_trapframe>$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	83 c4 10             	add    $0x10,%esp$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	68 0e 6b 10 f0       	push   $0xf0106b0e$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	e8 a6 4f 00 00       	call   f010582f <readline>$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	89 c3                	mov    %eax,%ebx$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	85 c0                	test   %eax,%eax$/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	74 ea                	je     f010087c <monitor+0x36>$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	eb 0a                	jmp    f01008aa <monitor+0x64>$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	89 f7                	mov    %esi,%edi$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	89 fe                	mov    %edi,%esi$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	84 c0                	test   %al,%al$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	74 63                	je     f0100914 <monitor+0xce>$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	0f be c0             	movsbl %al,%eax$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	50                   	push   %eax$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	68 12 6b 10 f0       	push   $0xf0106b12$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	e8 87 51 00 00       	call   f0105a49 <strchr>$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	85 c0                	test   %eax,%eax$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	75 d7                	jne    f01008a0 <monitor+0x5a>$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	74 46                	je     f0100914 <monitor+0xce>$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	75 14                	jne    f01008e7 <monitor+0xa1>$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	6a 10                	push   $0x10$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	68 17 6b 10 f0       	push   $0xf0106b17$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	e8 65 2d 00 00       	call   f0103647 <cprintf>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	eb 95                	jmp    f010087c <monitor+0x36>$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	eb 03                	jmp    f01008f3 <monitor+0xad>$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	84 c0                	test   %al,%al$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	74 ae                	je     f01008a8 <monitor+0x62>$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	0f be c0             	movsbl %al,%eax$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	50                   	push   %eax$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	68 12 6b 10 f0       	push   $0xf0106b12$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	e8 3e 51 00 00       	call   f0105a49 <strchr>$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	85 c0                	test   %eax,%eax$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	74 de                	je     f01008f0 <monitor+0xaa>$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	eb 94                	jmp    f01008a8 <monitor+0x62>$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	00 $/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	85 f6                	test   %esi,%esi$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	0f 84 58 ff ff ff    	je     f010087c <monitor+0x36>$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	68 de 6a 10 f0       	push   $0xf0106ade$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	e8 b7 50 00 00       	call   f01059eb <strcmp>$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	85 c0                	test   %eax,%eax$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	74 1b                	je     f0100956 <monitor+0x110>$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	68 ec 6a 10 f0       	push   $0xf0106aec$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	e8 a0 50 00 00       	call   f01059eb <strcmp>$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	85 c0                	test   %eax,%eax$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	75 2d                	jne    f010097f <monitor+0x139>$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	b0 01                	mov    $0x1,%al$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	eb 05                	jmp    f010095b <monitor+0x115>$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	01 d0                	add    %edx,%eax$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	51                   	push   %ecx$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	56                   	push   %esi$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	ff 14 85 ac 6c 10 f0 	call   *-0xfef9354(,%eax,4)$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	85 c0                	test   %eax,%eax$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	0f 89 ff fe ff ff    	jns    f010087c <monitor+0x36>$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	eb 18                	jmp    f0100997 <monitor+0x151>$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	68 34 6b 10 f0       	push   $0xf0106b34$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	e8 b8 2c 00 00       	call   f0103647 <cprintf>$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	e9 e5 fe ff ff       	jmp    f010087c <monitor+0x36>$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	5b                   	pop    %ebx$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	5e                   	pop    %esi$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	5f                   	pop    %edi$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	5d                   	pop    %ebp$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	c3                   	ret    $/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f <boot_alloc>:$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	83 3d 60 e2 22 f0 00 	cmpl   $0x0,0xf022e260$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	75 11                	jne    f01009b9 <boot_alloc+0x1a>$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	ba 07 10 28 f0       	mov    $0xf0281007,%edx$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	89 15 60 e2 22 f0    	mov    %edx,0xf022e260$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	85 c0                	test   %eax,%eax$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	75 06                	jne    f01009c3 <boot_alloc+0x24>$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	a1 60 e2 22 f0       	mov    0xf022e260,%eax$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	c3                   	ret    $/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	55                   	push   %ebp$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	53                   	push   %ebx$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	89 c3                	mov    %eax,%ebx$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	6a 6e                	push   $0x6e$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	68 6e 79 10 f0       	push   $0xf010796e$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	ff 35 60 e2 22 f0    	pushl  0xf022e260$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	68 04 70 10 f0       	push   $0xf0107004$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	e8 5f 2c 00 00       	call   f0103647 <cprintf>$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	a1 60 e2 22 f0       	mov    0xf022e260,%eax$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	8d 94 18 ff 0f 00 00 	lea    0xfff(%eax,%ebx,1),%edx$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	89 15 60 e2 22 f0    	mov    %edx,0xf022e260$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	c9                   	leave  $/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	c3                   	ret    $/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08 <check_va2pa>:$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	89 d1                	mov    %edx,%ecx$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	a8 01                	test   $0x1,%al$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	74 4f                	je     f0100a63 <check_va2pa+0x5b>$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	89 c1                	mov    %eax,%ecx$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	3b 0d c8 ee 22 f0    	cmp    0xf022eec8,%ecx$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	72 1b                	jb     f0100a41 <check_va2pa+0x39>$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	55                   	push   %ebp$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	50                   	push   %eax$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	68 c1 03 00 00       	push   $0x3c1$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	e8 ff f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	89 c2                	mov    %eax,%edx$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	19 d2                	sbb    %edx,%edx$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	09 d0                	or     %edx,%eax$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	c3                   	ret    $/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	c3                   	ret    $/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69 <check_page_free_list>:$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	55                   	push   %ebp$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	57                   	push   %edi$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	56                   	push   %esi$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	53                   	push   %ebx$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	84 c0                	test   %al,%al$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	0f 85 bd 02 00 00    	jne    f0100d37 <check_page_free_list+0x2ce>$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	e9 ca 02 00 00       	jmp    f0100d49 <check_page_free_list+0x2e0>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	68 38 70 10 f0       	push   $0xf0107038$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	68 f3 02 00 00       	push   $0x2f3$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	e8 aa f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	89 c2                	mov    %eax,%edx$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	0f 95 c2             	setne  %dl$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	85 c0                	test   %eax,%eax$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	75 dc                	jne    f0100aa2 <check_page_free_list+0x39>$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	89 10                	mov    %edx,(%eax)$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	a3 5c e2 22 f0       	mov    %eax,0xf022e25c$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	8b 1d 5c e2 22 f0    	mov    0xf022e25c,%ebx$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	eb 53                	jmp    f0100b3f <check_page_free_list+0xd6>$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	89 d8                	mov    %ebx,%eax$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	89 c2                	mov    %eax,%edx$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	39 f2                	cmp    %esi,%edx$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	73 3a                	jae    f0100b3d <check_page_free_list+0xd4>$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	89 c2                	mov    %eax,%edx$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	72 12                	jb     f0100b22 <check_page_free_list+0xb9>$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	50                   	push   %eax$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	6a 58                	push   $0x58$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	e8 1e f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	68 80 00 00 00       	push   $0x80$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	68 97 00 00 00       	push   $0x97$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	50                   	push   %eax$/;"	l
f0100b35	obj/kern/kernel.asm	/^f0100b35:	e8 4c 4f 00 00       	call   f0105a86 <memset>$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	85 db                	test   %ebx,%ebx$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	75 a9                	jne    f0100aec <check_page_free_list+0x83>$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	e8 52 fe ff ff       	call   f010099f <boot_alloc>$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	8b 15 5c e2 22 f0    	mov    0xf022e25c,%edx$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	8b 0d d0 ee 22 f0    	mov    0xf022eed0,%ecx$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	a1 c8 ee 22 f0       	mov    0xf022eec8,%eax$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	8d 1c c1             	lea    (%ecx,%eax,8),%ebx$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	89 d8                	mov    %ebx,%eax$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	e9 55 01 00 00       	jmp    f0100cd7 <check_page_free_list+0x26e>$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	39 da                	cmp    %ebx,%edx$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	73 19                	jae    f0100b9f <check_page_free_list+0x136>$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	68 d6 6c 10 f0       	push   $0xf0106cd6$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	68 0d 03 00 00       	push   $0x30d$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	e8 a1 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	72 19                	jb     f0100bbc <check_page_free_list+0x153>$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	68 f7 6c 10 f0       	push   $0xf0106cf7$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	68 0e 03 00 00       	push   $0x30e$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	e8 84 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 d0                	mov    %edx,%eax$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	a8 07                	test   $0x7,%al$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	74 19                	je     f0100bde <check_page_free_list+0x175>$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	68 5c 70 10 f0       	push   $0xf010705c$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	68 0f 03 00 00       	push   $0x30f$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	e8 62 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	85 c0                	test   %eax,%eax$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	75 19                	jne    f0100c01 <check_page_free_list+0x198>$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	68 0b 6d 10 f0       	push   $0xf0106d0b$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	68 12 03 00 00       	push   $0x312$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	e8 3f f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	75 19                	jne    f0100c21 <check_page_free_list+0x1b8>$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	68 1c 6d 10 f0       	push   $0xf0106d1c$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	68 13 03 00 00       	push   $0x313$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	e8 1f f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	75 19                	jne    f0100c41 <check_page_free_list+0x1d8>$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	68 90 70 10 f0       	push   $0xf0107090$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	68 14 03 00 00       	push   $0x314$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	e8 ff f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	75 19                	jne    f0100c61 <check_page_free_list+0x1f8>$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	68 35 6d 10 f0       	push   $0xf0106d35$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	68 15 03 00 00       	push   $0x315$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	e8 df f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	0f 86 f1 00 00 00    	jbe    f0100d60 <check_page_free_list+0x2f7>$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	89 c6                	mov    %eax,%esi$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	39 75 c4             	cmp    %esi,-0x3c(%ebp)$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	77 12                	ja     f0100c8b <check_page_free_list+0x222>$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	50                   	push   %eax$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	6a 58                	push   $0x58$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	e8 b5 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	39 75 c8             	cmp    %esi,-0x38(%ebp)$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	0f 86 d6 00 00 00    	jbe    f0100d70 <check_page_free_list+0x307>$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	68 b4 70 10 f0       	push   $0xf01070b4$/;"	l
f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	68 16 03 00 00       	push   $0x316$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	e8 8d f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	68 4f 6d 10 f0       	push   $0xf0106d4f$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	68 18 03 00 00       	push   $0x318$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	e8 74 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	eb 03                	jmp    f0100cd5 <check_page_free_list+0x26c>$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	8b 12                	mov    (%edx),%edx$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	85 d2                	test   %edx,%edx$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	0f 85 a3 fe ff ff    	jne    f0100b82 <check_page_free_list+0x119>$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	85 f6                	test   %esi,%esi$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	7f 19                	jg     f0100cff <check_page_free_list+0x296>$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	68 6c 6d 10 f0       	push   $0xf0106d6c$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	68 20 03 00 00       	push   $0x320$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	e8 41 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	85 ff                	test   %edi,%edi$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	7f 19                	jg     f0100d1c <check_page_free_list+0x2b3>$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	68 7e 6d 10 f0       	push   $0xf0106d7e$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	68 21 03 00 00       	push   $0x321$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	e8 24 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	68 22 03 00 00       	push   $0x322$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	68 59 79 10 f0       	push   $0xf0107959$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	68 fc 70 10 f0       	push   $0xf01070fc$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	e8 12 29 00 00       	call   f0103647 <cprintf>$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	eb 49                	jmp    f0100d80 <check_page_free_list+0x317>$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	a1 5c e2 22 f0       	mov    0xf022e25c,%eax$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	85 c0                	test   %eax,%eax$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	0f 85 52 fd ff ff    	jne    f0100a96 <check_page_free_list+0x2d>$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	e9 36 fd ff ff       	jmp    f0100a7f <check_page_free_list+0x16>$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	83 3d 5c e2 22 f0 00 	cmpl   $0x0,0xf022e25c$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	0f 84 29 fd ff ff    	je     f0100a7f <check_page_free_list+0x16>$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	e9 84 fd ff ff       	jmp    f0100ae4 <check_page_free_list+0x7b>$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	0f 85 61 ff ff ff    	jne    f0100ccc <check_page_free_list+0x263>$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	e9 43 ff ff ff       	jmp    f0100cb3 <check_page_free_list+0x24a>$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	0f 85 57 ff ff ff    	jne    f0100cd2 <check_page_free_list+0x269>$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	e9 33 ff ff ff       	jmp    f0100cb3 <check_page_free_list+0x24a>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	5b                   	pop    %ebx$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	5e                   	pop    %esi$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	5f                   	pop    %edi$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	5d                   	pop    %ebp$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	c3                   	ret    $/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88 <page_init>:$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	55                   	push   %ebp$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	57                   	push   %edi$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	56                   	push   %esi$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	53                   	push   %ebx$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	8b 1d 5c e2 22 f0    	mov    0xf022e25c,%ebx$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	a1 60 e2 22 f0       	mov    0xf022e260,%eax$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	8d b8 00 00 00 10    	lea    0x10000000(%eax),%edi$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	e9 97 00 00 00       	jmp    f0100e53 <page_init+0xcb>$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	75 0f                	jne    f0100dd2 <page_init+0x4a>$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	8b 35 d0 ee 22 f0    	mov    0xf022eed0,%esi$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	66 c7 44 16 04 01 00 	movw   $0x1,0x4(%esi,%edx,1)$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	eb 76                	jmp    f0100e48 <page_init+0xc0>$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	85 c9                	test   %ecx,%ecx$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	74 21                	je     f0100df7 <page_init+0x6f>$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	3d ff ff 09 00       	cmp    $0x9ffff,%eax$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	77 1a                	ja     f0100df7 <page_init+0x6f>$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	89 d6                	mov    %edx,%esi$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	03 35 d0 ee 22 f0    	add    0xf022eed0,%esi$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	89 d3                	mov    %edx,%ebx$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	03 1d d0 ee 22 f0    	add    0xf022eed0,%ebx$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	eb 51                	jmp    f0100e48 <page_init+0xc0>$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	81 7d e4 ff ff ff ef 	cmpl   $0xefffffff,-0x1c(%ebp)$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	77 1d                	ja     f0100e1d <page_init+0x95>$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	89 1d 5c e2 22 f0    	mov    %ebx,0xf022e25c$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	68 52 01 00 00       	push   $0x152$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	e8 23 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	39 c7                	cmp    %eax,%edi$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	77 1a                	ja     f0100e3b <page_init+0xb3>$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	89 d6                	mov    %edx,%esi$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	03 35 d0 ee 22 f0    	add    0xf022eed0,%esi$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	89 d3                	mov    %edx,%ebx$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	03 1d d0 ee 22 f0    	add    0xf022eed0,%ebx$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	eb 0d                	jmp    f0100e48 <page_init+0xc0>$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	8b 35 d0 ee 22 f0    	mov    0xf022eed0,%esi$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	66 c7 44 16 04 01 00 	movw   $0x1,0x4(%esi,%edx,1)$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	83 c2 08             	add    $0x8,%edx$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	3b 0d c8 ee 22 f0    	cmp    0xf022eec8,%ecx$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	0f 82 5d ff ff ff    	jb     f0100dbc <page_init+0x34>$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	89 1d 5c e2 22 f0    	mov    %ebx,0xf022e25c$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	5b                   	pop    %ebx$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	5e                   	pop    %esi$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	5f                   	pop    %edi$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	5d                   	pop    %ebp$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	c3                   	ret    $/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d <page_alloc>:$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	55                   	push   %ebp$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	53                   	push   %ebx$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	8b 1d 5c e2 22 f0    	mov    0xf022e25c,%ebx$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	85 db                	test   %ebx,%ebx$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	74 62                	je     f0100ee0 <page_alloc+0x73>$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	a3 5c e2 22 f0       	mov    %eax,0xf022e25c$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	6a 08                	push   $0x8$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	6a 00                	push   $0x0$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	53                   	push   %ebx$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	e8 f4 4b 00 00       	call   f0105a86 <memset>$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	74 45                	je     f0100ee0 <page_alloc+0x73>$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	89 d8                	mov    %ebx,%eax$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	89 c2                	mov    %eax,%edx$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	72 12                	jb     f0100ec8 <page_alloc+0x5b>$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	50                   	push   %eax$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	6a 58                	push   $0x58$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	e8 78 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	68 00 10 00 00       	push   $0x1000$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	6a 00                	push   $0x0$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	50                   	push   %eax$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	e8 a9 4b 00 00       	call   f0105a86 <memset>$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	89 d8                	mov    %ebx,%eax$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	c9                   	leave  $/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	c3                   	ret    $/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7 <page_free>:$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	55                   	push   %ebp$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	74 19                	je     f0100f0e <page_free+0x27>$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	68 8f 6d 10 f0       	push   $0xf0106d8f$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	68 84 01 00 00       	push   $0x184$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	e8 32 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	74 19                	je     f0100f2e <page_free+0x47>$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	68 a3 6d 10 f0       	push   $0xf0106da3$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	68 85 01 00 00       	push   $0x185$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	e8 12 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	8b 15 5c e2 22 f0    	mov    0xf022e25c,%edx$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	89 10                	mov    %edx,(%eax)$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	a3 5c e2 22 f0       	mov    %eax,0xf022e25c$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	c9                   	leave  $/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	c3                   	ret    $/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d <page_decref>:$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	55                   	push   %ebp$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	66 85 c0             	test   %ax,%ax$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	75 0c                	jne    f0100f62 <page_decref+0x25>$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	52                   	push   %edx$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	e8 88 ff ff ff       	call   f0100ee7 <page_free>$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	c9                   	leave  $/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	c3                   	ret    $/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64 <pgdir_walk>:$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	55                   	push   %ebp$/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	56                   	push   %esi$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	53                   	push   %ebx$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	89 f3                	mov    %esi,%ebx$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	a8 01                	test   $0x1,%al$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	74 39                	je     f0100fb6 <pgdir_walk+0x52>$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	89 c2                	mov    %eax,%edx$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	72 15                	jb     f0100fa4 <pgdir_walk+0x40>$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	50                   	push   %eax$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	68 b4 01 00 00       	push   $0x1b4$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	e8 9c f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	eb 6c                	jmp    f0101022 <pgdir_walk+0xbe>$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	75 5a                	jne    f0101016 <pgdir_walk+0xb2>$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	6a 01                	push   $0x1$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	e8 a7 fe ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	85 c0                	test   %eax,%eax$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	74 50                	je     f010101d <pgdir_walk+0xb9>$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	89 c2                	mov    %eax,%edx$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	72 12                	jb     f0100ffd <pgdir_walk+0x99>$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	50                   	push   %eax$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	6a 58                	push   $0x58$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	e8 43 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	89 c2                	mov    %eax,%edx$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	eb 0c                	jmp    f0101022 <pgdir_walk+0xbe>$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	eb 05                	jmp    f0101022 <pgdir_walk+0xbe>$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	5b                   	pop    %ebx$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	5e                   	pop    %esi$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	5d                   	pop    %ebp$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	c3                   	ret    $/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029 <boot_map_region>:$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	55                   	push   %ebp$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	89 e5                	mov    %esp,%ebp$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	57                   	push   %edi$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	56                   	push   %esi$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	53                   	push   %ebx$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	83 f9 ff             	cmp    $0xffffffff,%ecx$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	74 03                	je     f010103d <boot_map_region+0x14>$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	89 d3                	mov    %edx,%ebx$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	29 d0                	sub    %edx,%eax$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101052	obj/kern/kernel.asm	/^f0101052:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	eb 2b                	jmp    f0101085 <boot_map_region+0x5c>$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	6a 01                	push   $0x1$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	53                   	push   %ebx$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	e8 fc fe ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	89 da                	mov    %ebx,%edx$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	29 d6                	sub    %edx,%esi$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	0b 75 d8             	or     -0x28(%ebp),%esi$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	89 30                	mov    %esi,(%eax)$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	83 c4 10             	add    $0x10,%esp$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	74 0e                	je     f0101090 <boot_map_region+0x67>$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	75 ca                	jne    f010105a <boot_map_region+0x31>$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	5b                   	pop    %ebx$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	5e                   	pop    %esi$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	5f                   	pop    %edi$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	5d                   	pop    %ebp$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	c3                   	ret    $/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098 <page_lookup>:$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	55                   	push   %ebp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	89 e5                	mov    %esp,%ebp$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	53                   	push   %ebx$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	6a 00                	push   $0x0$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	e8 b5 fe ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	85 c0                	test   %eax,%eax$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	74 37                	je     f01010ed <page_lookup+0x55>$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	74 39                	je     f01010f4 <page_lookup+0x5c>$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	85 db                	test   %ebx,%ebx$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	74 02                	je     f01010c1 <page_lookup+0x29>$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	89 03                	mov    %eax,(%ebx)$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	8b 00                	mov    (%eax),%eax$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	3b 05 c8 ee 22 f0    	cmp    0xf022eec8,%eax$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	72 14                	jb     f01010e2 <page_lookup+0x4a>$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	68 20 71 10 f0       	push   $0xf0107120$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	6a 51                	push   $0x51$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	e8 5e ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	8b 15 d0 ee 22 f0    	mov    0xf022eed0,%edx$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	eb 0c                	jmp    f01010f9 <page_lookup+0x61>$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	eb 05                	jmp    f01010f9 <page_lookup+0x61>$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	c9                   	leave  $/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	c3                   	ret    $/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe <tlb_invalidate>:$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	55                   	push   %ebp$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	e8 a2 4f 00 00       	call   f01060ab <cpunum>$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	83 b8 48 f0 23 f0 00 	cmpl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	74 16                	je     f010112b <tlb_invalidate+0x2d>$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	e8 91 4f 00 00       	call   f01060ab <cpunum>$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	75 06                	jne    f0101131 <tlb_invalidate+0x33>$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	0f 01 38             	invlpg (%eax)$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	c9                   	leave  $/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	c3                   	ret    $/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133 <page_remove>:$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	55                   	push   %ebp$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	89 e5                	mov    %esp,%ebp$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	56                   	push   %esi$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	53                   	push   %ebx$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	50                   	push   %eax$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	56                   	push   %esi$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	53                   	push   %ebx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	e8 4c ff ff ff       	call   f0101098 <page_lookup>$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	85 c0                	test   %eax,%eax$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	74 1f                	je     f0101172 <page_remove+0x3f>$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	50                   	push   %eax$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	e8 e1 fd ff ff       	call   f0100f3d <page_decref>$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	56                   	push   %esi$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	53                   	push   %ebx$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	e8 8f ff ff ff       	call   f01010fe <tlb_invalidate>$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	5b                   	pop    %ebx$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	5e                   	pop    %esi$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	5d                   	pop    %ebp$/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	c3                   	ret    $/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179 <page_insert>:$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	55                   	push   %ebp$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	89 e5                	mov    %esp,%ebp$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	57                   	push   %edi$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	56                   	push   %esi$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	53                   	push   %ebx$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	6a 01                	push   $0x1$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	57                   	push   %edi$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	e8 d1 fd ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	89 c3                	mov    %eax,%ebx$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	85 c0                	test   %eax,%eax$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	74 6d                	je     f0101209 <page_insert+0x90>$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	8b 00                	mov    (%eax),%eax$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	a8 01                	test   $0x1,%al$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	74 43                	je     f01011e5 <page_insert+0x6c>$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	89 f2                	mov    %esi,%edx$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	39 d0                	cmp    %edx,%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	75 11                	jne    f01011ca <page_insert+0x51>$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	83 ca 01             	or     $0x1,%edx$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	09 d0                	or     %edx,%eax$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	eb 44                	jmp    f010120e <page_insert+0x95>$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	57                   	push   %edi$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	e8 5d ff ff ff       	call   f0101133 <page_remove>$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	57                   	push   %edi$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	e8 1c ff ff ff       	call   f01010fe <tlb_invalidate>$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	83 ca 01             	or     $0x1,%edx$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	89 f0                	mov    %esi,%eax$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	09 d0                	or     %edx,%eax$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	89 03                	mov    %eax,(%ebx)$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	eb 05                	jmp    f010120e <page_insert+0x95>$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	5b                   	pop    %ebx$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	5e                   	pop    %esi$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	5f                   	pop    %edi$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	5d                   	pop    %ebp$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	c3                   	ret    $/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216 <mmio_map_region>:$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	55                   	push   %ebp$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	89 e5                	mov    %esp,%ebp$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	53                   	push   %ebx$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	8b 15 00 33 12 f0    	mov    0xf0123300,%edx$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	8d 9a ff 0f 00 00    	lea    0xfff(%edx),%ebx$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	03 5d 0c             	add    0xc(%ebp),%ebx$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	81 fb 00 00 c0 ef    	cmp    $0xefc00000,%ebx$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	76 17                	jbe    f0101257 <mmio_map_region+0x41>$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	68 b3 6d 10 f0       	push   $0xf0106db3$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	68 97 02 00 00       	push   $0x297$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	e8 e9 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	89 d9                	mov    %ebx,%ecx$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	29 d1                	sub    %edx,%ecx$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	6a 1b                	push   $0x1b$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	e8 bc fd ff ff       	call   f0101029 <boot_map_region>$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	a1 00 33 12 f0       	mov    0xf0123300,%eax$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	89 1d 00 33 12 f0    	mov    %ebx,0xf0123300$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	c9                   	leave  $/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	c3                   	ret    $/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d <mem_init>:$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	55                   	push   %ebp$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	57                   	push   %edi$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	56                   	push   %esi$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	53                   	push   %ebx$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	6a 15                	push   $0x15$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	e8 59 22 00 00       	call   f01034e6 <mc146818_read>$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	89 c3                	mov    %eax,%ebx$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	e8 4b 22 00 00       	call   f01034e6 <mc146818_read>$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	09 d8                	or     %ebx,%eax$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	99                   	cltd   $/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	c1 ea 14             	shr    $0x14,%edx$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	01 d0                	add    %edx,%eax$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	a3 64 e2 22 f0       	mov    %eax,0xf022e264$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	e8 29 22 00 00       	call   f01034e6 <mc146818_read>$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	89 c3                	mov    %eax,%ebx$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	e8 1b 22 00 00       	call   f01034e6 <mc146818_read>$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	09 d8                	or     %ebx,%eax$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	99                   	cltd   $/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	c1 ea 14             	shr    $0x14,%edx$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	01 d0                	add    %edx,%eax$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	85 c0                	test   %eax,%eax$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	74 0e                	je     f01012f1 <mem_init+0x74>$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	89 15 c8 ee 22 f0    	mov    %edx,0xf022eec8$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	eb 0c                	jmp    f01012fd <mem_init+0x80>$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	8b 15 64 e2 22 f0    	mov    0xf022e264,%edx$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	89 15 c8 ee 22 f0    	mov    %edx,0xf022eec8$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	50                   	push   %eax$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	a1 64 e2 22 f0       	mov    0xf022e264,%eax$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	50                   	push   %eax$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	a1 c8 ee 22 f0       	mov    0xf022eec8,%eax$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	50                   	push   %eax$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	68 40 71 10 f0       	push   $0xf0107140$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	e8 21 23 00 00       	call   f0103647 <cprintf>$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	e8 6f f6 ff ff       	call   f010099f <boot_alloc>$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	a3 cc ee 22 f0       	mov    %eax,0xf022eecc$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	68 00 10 00 00       	push   $0x1000$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	6a 00                	push   $0x0$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	50                   	push   %eax$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	e8 41 47 00 00       	call   f0105a86 <memset>$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	77 15                	ja     f0101369 <mem_init+0xec>$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	50                   	push   %eax$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	68 96 00 00 00       	push   $0x96$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	e8 d7 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	a1 c8 ee 22 f0       	mov    0xf022eec8,%eax$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	e8 1a f6 ff ff       	call   f010099f <boot_alloc>$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	a3 d0 ee 22 f0       	mov    %eax,0xf022eed0$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	e8 0b f6 ff ff       	call   f010099f <boot_alloc>$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	a3 68 e2 22 f0       	mov    %eax,0xf022e268$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	e8 ea f9 ff ff       	call   f0100d88 <page_init>$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	e8 c1 f6 ff ff       	call   f0100a69 <check_page_free_list>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	83 3d d0 ee 22 f0 00 	cmpl   $0x0,0xf022eed0$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	75 17                	jne    f01013c8 <mem_init+0x14b>$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	68 c4 6d 10 f0       	push   $0xf0106dc4$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	68 33 03 00 00       	push   $0x333$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	e8 78 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	a1 5c e2 22 f0       	mov    0xf022e25c,%eax$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	eb 05                	jmp    f01013d9 <mem_init+0x15c>$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	8b 00                	mov    (%eax),%eax$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	85 c0                	test   %eax,%eax$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	75 f7                	jne    f01013d4 <mem_init+0x157>$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	6a 00                	push   $0x0$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	e8 86 fa ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	89 c7                	mov    %eax,%edi$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	85 c0                	test   %eax,%eax$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	75 19                	jne    f0101409 <mem_init+0x18c>$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	68 df 6d 10 f0       	push   $0xf0106ddf$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	68 3b 03 00 00       	push   $0x33b$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	e8 37 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	6a 00                	push   $0x0$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	e8 5a fa ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	89 c6                	mov    %eax,%esi$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	85 c0                	test   %eax,%eax$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	75 19                	jne    f0101435 <mem_init+0x1b8>$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	68 f5 6d 10 f0       	push   $0xf0106df5$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	68 3c 03 00 00       	push   $0x33c$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	e8 0b ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	6a 00                	push   $0x0$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	e8 2e fa ff ff       	call   f0100e6d <page_alloc>$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	85 c0                	test   %eax,%eax$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	75 19                	jne    f0101462 <mem_init+0x1e5>$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	68 0b 6e 10 f0       	push   $0xf0106e0b$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	68 3d 03 00 00       	push   $0x33d$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	e8 de eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	39 f7                	cmp    %esi,%edi$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	75 19                	jne    f010147f <mem_init+0x202>$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	68 21 6e 10 f0       	push   $0xf0106e21$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	68 40 03 00 00       	push   $0x340$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	e8 c1 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	39 c7                	cmp    %eax,%edi$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	74 04                	je     f010148a <mem_init+0x20d>$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	39 c6                	cmp    %eax,%esi$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	75 19                	jne    f01014a3 <mem_init+0x226>$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	68 7c 71 10 f0       	push   $0xf010717c$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	68 41 03 00 00       	push   $0x341$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	e8 9d eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	8b 0d d0 ee 22 f0    	mov    0xf022eed0,%ecx$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	8b 15 c8 ee 22 f0    	mov    0xf022eec8,%edx$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	89 f8                	mov    %edi,%eax$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	29 c8                	sub    %ecx,%eax$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	39 d0                	cmp    %edx,%eax$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	72 19                	jb     f01014d9 <mem_init+0x25c>$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	68 33 6e 10 f0       	push   $0xf0106e33$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	68 42 03 00 00       	push   $0x342$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	e8 67 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	89 f0                	mov    %esi,%eax$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	29 c8                	sub    %ecx,%eax$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	39 c2                	cmp    %eax,%edx$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	77 19                	ja     f0101500 <mem_init+0x283>$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	68 50 6e 10 f0       	push   $0xf0106e50$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	68 43 03 00 00       	push   $0x343$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	e8 40 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	29 c8                	sub    %ecx,%eax$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	39 c2                	cmp    %eax,%edx$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	77 19                	ja     f0101528 <mem_init+0x2ab>$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	68 6d 6e 10 f0       	push   $0xf0106e6d$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	68 44 03 00 00       	push   $0x344$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	e8 18 eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	a1 5c e2 22 f0       	mov    0xf022e25c,%eax$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	c7 05 5c e2 22 f0 00 	movl   $0x0,0xf022e25c$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	00 00 00 $/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	6a 00                	push   $0x0$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	e8 29 f9 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	85 c0                	test   %eax,%eax$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	74 19                	je     f0101564 <mem_init+0x2e7>$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	68 8a 6e 10 f0       	push   $0xf0106e8a$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	68 4b 03 00 00       	push   $0x34b$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	e8 dc ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	57                   	push   %edi$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	e8 7a f9 ff ff       	call   f0100ee7 <page_free>$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	e8 72 f9 ff ff       	call   f0100ee7 <page_free>$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	e8 67 f9 ff ff       	call   f0100ee7 <page_free>$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	e8 e1 f8 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	89 c6                	mov    %eax,%esi$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	85 c0                	test   %eax,%eax$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	75 19                	jne    f01015ae <mem_init+0x331>$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	68 df 6d 10 f0       	push   $0xf0106ddf$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	68 52 03 00 00       	push   $0x352$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	e8 92 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	6a 00                	push   $0x0$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	e8 b5 f8 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	89 c7                	mov    %eax,%edi$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	85 c0                	test   %eax,%eax$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	75 19                	jne    f01015da <mem_init+0x35d>$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	68 f5 6d 10 f0       	push   $0xf0106df5$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	68 53 03 00 00       	push   $0x353$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	e8 66 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	6a 00                	push   $0x0$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	e8 89 f8 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	85 c0                	test   %eax,%eax$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	75 19                	jne    f0101607 <mem_init+0x38a>$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	68 0b 6e 10 f0       	push   $0xf0106e0b$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	68 54 03 00 00       	push   $0x354$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	e8 39 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	39 fe                	cmp    %edi,%esi$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	75 19                	jne    f0101624 <mem_init+0x3a7>$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	68 21 6e 10 f0       	push   $0xf0106e21$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	68 56 03 00 00       	push   $0x356$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	e8 1c ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	39 c6                	cmp    %eax,%esi$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	74 04                	je     f010162f <mem_init+0x3b2>$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	39 c7                	cmp    %eax,%edi$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	75 19                	jne    f0101648 <mem_init+0x3cb>$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	68 7c 71 10 f0       	push   $0xf010717c$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	68 57 03 00 00       	push   $0x357$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	e8 f8 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	6a 00                	push   $0x0$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	e8 1b f8 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	85 c0                	test   %eax,%eax$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	74 19                	je     f0101672 <mem_init+0x3f5>$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	68 8a 6e 10 f0       	push   $0xf0106e8a$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	68 58 03 00 00       	push   $0x358$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	e8 ce e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	89 f0                	mov    %esi,%eax$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	89 c2                	mov    %eax,%edx$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	72 12                	jb     f010169f <mem_init+0x422>$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	50                   	push   %eax$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	6a 58                	push   $0x58$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	e8 a1 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	68 00 10 00 00       	push   $0x1000$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	6a 01                	push   $0x1$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	50                   	push   %eax$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	e8 d2 43 00 00       	call   f0105a86 <memset>$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	e8 2b f8 ff ff       	call   f0100ee7 <page_free>$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	e8 a5 f7 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	85 c0                	test   %eax,%eax$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	75 19                	jne    f01016e8 <mem_init+0x46b>$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	68 99 6e 10 f0       	push   $0xf0106e99$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	68 5d 03 00 00       	push   $0x35d$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	e8 58 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	39 c6                	cmp    %eax,%esi$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	74 19                	je     f0101705 <mem_init+0x488>$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	68 b7 6e 10 f0       	push   $0xf0106eb7$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	68 5e 03 00 00       	push   $0x35e$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	e8 3b e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	89 f0                	mov    %esi,%eax$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	89 c2                	mov    %eax,%edx$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	72 12                	jb     f0101732 <mem_init+0x4b5>$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	50                   	push   %eax$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	6a 58                	push   $0x58$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	e8 0e e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	74 19                	je     f010175c <mem_init+0x4df>$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	68 c7 6e 10 f0       	push   $0xf0106ec7$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	68 61 03 00 00       	push   $0x361$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	e8 e4 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	39 d0                	cmp    %edx,%eax$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	75 db                	jne    f010173e <mem_init+0x4c1>$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	a3 5c e2 22 f0       	mov    %eax,0xf022e25c$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	56                   	push   %esi$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	e8 73 f7 ff ff       	call   f0100ee7 <page_free>$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	e8 6b f7 ff ff       	call   f0100ee7 <page_free>$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	83 c4 04             	add    $0x4,%esp$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	e8 60 f7 ff ff       	call   f0100ee7 <page_free>$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	a1 5c e2 22 f0       	mov    0xf022e25c,%eax$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	eb 05                	jmp    f0101796 <mem_init+0x519>$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	8b 00                	mov    (%eax),%eax$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	85 c0                	test   %eax,%eax$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	75 f7                	jne    f0101791 <mem_init+0x514>$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	85 db                	test   %ebx,%ebx$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	74 19                	je     f01017b7 <mem_init+0x53a>$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	68 d1 6e 10 f0       	push   $0xf0106ed1$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	68 6e 03 00 00       	push   $0x36e$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	e8 89 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	68 9c 71 10 f0       	push   $0xf010719c$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	e8 83 1e 00 00       	call   f0103647 <cprintf>$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	e8 9d f6 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	85 c0                	test   %eax,%eax$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	75 19                	jne    f01017f3 <mem_init+0x576>$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	68 df 6d 10 f0       	push   $0xf0106ddf$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	68 d6 03 00 00       	push   $0x3d6$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	e8 4d e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017f3	obj/kern/kernel.asm	/^f01017f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	6a 00                	push   $0x0$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	e8 70 f6 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	89 c3                	mov    %eax,%ebx$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	85 c0                	test   %eax,%eax$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	75 19                	jne    f010181f <mem_init+0x5a2>$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	68 f5 6d 10 f0       	push   $0xf0106df5$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	68 d7 03 00 00       	push   $0x3d7$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	e8 21 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	6a 00                	push   $0x0$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	e8 44 f6 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	89 c6                	mov    %eax,%esi$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	85 c0                	test   %eax,%eax$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	75 19                	jne    f010184b <mem_init+0x5ce>$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	68 0b 6e 10 f0       	push   $0xf0106e0b$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	68 d8 03 00 00       	push   $0x3d8$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	e8 f5 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	75 19                	jne    f0101869 <mem_init+0x5ec>$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	68 21 6e 10 f0       	push   $0xf0106e21$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	68 db 03 00 00       	push   $0x3db$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	e8 d7 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	74 04                	je     f0101872 <mem_init+0x5f5>$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	75 19                	jne    f010188b <mem_init+0x60e>$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	68 7c 71 10 f0       	push   $0xf010717c$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	68 dc 03 00 00       	push   $0x3dc$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	e8 b5 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	a1 5c e2 22 f0       	mov    0xf022e25c,%eax$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	c7 05 5c e2 22 f0 00 	movl   $0x0,0xf022e25c$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	00 00 00 $/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	6a 00                	push   $0x0$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	e8 c6 f5 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	85 c0                	test   %eax,%eax$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	74 19                	je     f01018c7 <mem_init+0x64a>$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	68 8a 6e 10 f0       	push   $0xf0106e8a$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	68 e3 03 00 00       	push   $0x3e3$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	e8 79 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	50                   	push   %eax$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	6a 00                	push   $0x0$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	e8 bd f7 ff ff       	call   f0101098 <page_lookup>$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	85 c0                	test   %eax,%eax$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	74 19                	je     f01018fb <mem_init+0x67e>$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	68 bc 71 10 f0       	push   $0xf01071bc$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	68 e6 03 00 00       	push   $0x3e6$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	e8 45 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	6a 02                	push   $0x2$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	6a 00                	push   $0x0$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	53                   	push   %ebx$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	e8 6e f8 ff ff       	call   f0101179 <page_insert>$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	85 c0                	test   %eax,%eax$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	78 19                	js     f010192b <mem_init+0x6ae>$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	68 f4 71 10 f0       	push   $0xf01071f4$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	e8 15 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	e8 b1 f5 ff ff       	call   f0100ee7 <page_free>$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	6a 02                	push   $0x2$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	6a 00                	push   $0x0$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	53                   	push   %ebx$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	e8 33 f8 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	85 c0                	test   %eax,%eax$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	74 19                	je     f0101966 <mem_init+0x6e9>$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	68 24 72 10 f0       	push   $0xf0107224$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	68 ed 03 00 00       	push   $0x3ed$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	e8 da e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	8b 3d cc ee 22 f0    	mov    0xf022eecc,%edi$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	a1 d0 ee 22 f0       	mov    0xf022eed0,%eax$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	89 c1                	mov    %eax,%ecx$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	8b 17                	mov    (%edi),%edx$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	29 c8                	sub    %ecx,%eax$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	39 c2                	cmp    %eax,%edx$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	74 19                	je     f01019a6 <mem_init+0x729>$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	68 54 72 10 f0       	push   $0xf0107254$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	e8 9a e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	89 f8                	mov    %edi,%eax$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	e8 56 f0 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	89 da                	mov    %ebx,%edx$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	39 d0                	cmp    %edx,%eax$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	74 19                	je     f01019da <mem_init+0x75d>$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	68 7c 72 10 f0       	push   $0xf010727c$/;"	l
f01019c6	obj/kern/kernel.asm	/^f01019c6:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	e8 66 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	74 19                	je     f01019fa <mem_init+0x77d>$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	68 dc 6e 10 f0       	push   $0xf0106edc$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	e8 46 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	74 19                	je     f0101a1d <mem_init+0x7a0>$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	68 ed 6e 10 f0       	push   $0xf0106eed$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	e8 23 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	6a 02                	push   $0x2$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	56                   	push   %esi$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	57                   	push   %edi$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	e8 4e f7 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	85 c0                	test   %eax,%eax$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	74 19                	je     f0101a4b <mem_init+0x7ce>$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	68 ac 72 10 f0       	push   $0xf01072ac$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	e8 f5 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	e8 ae ef ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	89 f2                	mov    %esi,%edx$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	74 19                	je     f0101a85 <mem_init+0x808>$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	68 e8 72 10 f0       	push   $0xf01072e8$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	e8 bb e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	74 19                	je     f0101aa5 <mem_init+0x828>$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	68 fe 6e 10 f0       	push   $0xf0106efe$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	68 f6 03 00 00       	push   $0x3f6$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	e8 9b e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	6a 00                	push   $0x0$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	e8 be f3 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	85 c0                	test   %eax,%eax$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	74 19                	je     f0101acf <mem_init+0x852>$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	68 8a 6e 10 f0       	push   $0xf0106e8a$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	68 f9 03 00 00       	push   $0x3f9$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	e8 71 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	6a 02                	push   $0x2$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	56                   	push   %esi$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	e8 97 f6 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	85 c0                	test   %eax,%eax$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	74 19                	je     f0101b02 <mem_init+0x885>$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	68 ac 72 10 f0       	push   $0xf01072ac$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	e8 3e e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	e8 f7 ee ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	89 f2                	mov    %esi,%edx$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	74 19                	je     f0101b3c <mem_init+0x8bf>$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	68 e8 72 10 f0       	push   $0xf01072e8$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	e8 04 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	74 19                	je     f0101b5c <mem_init+0x8df>$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	68 fe 6e 10 f0       	push   $0xf0106efe$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	68 fe 03 00 00       	push   $0x3fe$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	e8 e4 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	6a 00                	push   $0x0$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	e8 07 f3 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	85 c0                	test   %eax,%eax$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	74 19                	je     f0101b86 <mem_init+0x909>$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	68 8a 6e 10 f0       	push   $0xf0106e8a$/;"	l
f0101b72	obj/kern/kernel.asm	/^f0101b72:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	68 02 04 00 00       	push   $0x402$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	e8 ba e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	8b 15 cc ee 22 f0    	mov    0xf022eecc,%edx$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	8b 02                	mov    (%edx),%eax$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	89 c1                	mov    %eax,%ecx$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	3b 0d c8 ee 22 f0    	cmp    0xf022eec8,%ecx$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	72 15                	jb     f0101bb5 <mem_init+0x938>$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	50                   	push   %eax$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	68 05 04 00 00       	push   $0x405$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	e8 8b e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	6a 00                	push   $0x0$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	52                   	push   %edx$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	e8 97 f3 ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	74 19                	je     f0101bf3 <mem_init+0x976>$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	68 18 73 10 f0       	push   $0xf0107318$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	68 06 04 00 00       	push   $0x406$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	e8 4d e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	6a 06                	push   $0x6$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	56                   	push   %esi$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	e8 73 f5 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	85 c0                	test   %eax,%eax$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	74 19                	je     f0101c26 <mem_init+0x9a9>$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	68 58 73 10 f0       	push   $0xf0107358$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	68 09 04 00 00       	push   $0x409$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	e8 1a e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	8b 3d cc ee 22 f0    	mov    0xf022eecc,%edi$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	89 f8                	mov    %edi,%eax$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	e8 d0 ed ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	89 f2                	mov    %esi,%edx$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	74 19                	je     f0101c63 <mem_init+0x9e6>$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	68 e8 72 10 f0       	push   $0xf01072e8$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	68 0a 04 00 00       	push   $0x40a$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	e8 dd e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	74 19                	je     f0101c83 <mem_init+0xa06>$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	68 fe 6e 10 f0       	push   $0xf0106efe$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	68 0b 04 00 00       	push   $0x40b$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101c7e	obj/kern/kernel.asm	/^f0101c7e:	e8 bd e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	6a 00                	push   $0x0$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	57                   	push   %edi$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	e8 d1 f2 ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	75 19                	jne    f0101cb4 <mem_init+0xa37>$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	68 98 73 10 f0       	push   $0xf0107398$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	e8 8c e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	75 19                	jne    f0101cd7 <mem_init+0xa5a>$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	68 0f 6f 10 f0       	push   $0xf0106f0f$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	68 0d 04 00 00       	push   $0x40d$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	e8 69 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	6a 02                	push   $0x2$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	56                   	push   %esi$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	50                   	push   %eax$/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	e8 94 f4 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ce8	obj/kern/kernel.asm	/^f0101ce8:	85 c0                	test   %eax,%eax$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	74 19                	je     f0101d05 <mem_init+0xa88>$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	68 ac 72 10 f0       	push   $0xf01072ac$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	68 10 04 00 00       	push   $0x410$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	e8 3b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	6a 00                	push   $0x0$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	e8 4a f2 ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	75 19                	jne    f0101d3b <mem_init+0xabe>$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	68 cc 73 10 f0       	push   $0xf01073cc$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	68 11 04 00 00       	push   $0x411$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	e8 05 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	6a 00                	push   $0x0$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	e8 14 f2 ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0101d50	obj/kern/kernel.asm	/^f0101d50:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	74 19                	je     f0101d71 <mem_init+0xaf4>$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	68 00 74 10 f0       	push   $0xf0107400$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	68 12 04 00 00       	push   $0x412$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	e8 cf e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	6a 02                	push   $0x2$/;"	l
f0101d73	obj/kern/kernel.asm	/^f0101d73:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	e8 f3 f3 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	85 c0                	test   %eax,%eax$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	78 19                	js     f0101da6 <mem_init+0xb29>$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	68 38 74 10 f0       	push   $0xf0107438$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101d97	obj/kern/kernel.asm	/^f0101d97:	68 15 04 00 00       	push   $0x415$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	e8 9a e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	6a 02                	push   $0x2$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	53                   	push   %ebx$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	e8 c0 f3 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	85 c0                	test   %eax,%eax$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	74 19                	je     f0101dd9 <mem_init+0xb5c>$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	68 70 74 10 f0       	push   $0xf0107470$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	68 18 04 00 00       	push   $0x418$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	e8 67 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	6a 00                	push   $0x0$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	e8 76 f1 ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	74 19                	je     f0101e0f <mem_init+0xb92>$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	68 00 74 10 f0       	push   $0xf0107400$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101e00	obj/kern/kernel.asm	/^f0101e00:	68 19 04 00 00       	push   $0x419$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	e8 31 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	8b 3d cc ee 22 f0    	mov    0xf022eecc,%edi$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	89 f8                	mov    %edi,%eax$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	e8 e7 eb ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	89 d8                	mov    %ebx,%eax$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	74 19                	je     f0101e51 <mem_init+0xbd4>$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	68 ac 74 10 f0       	push   $0xf01074ac$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	68 1c 04 00 00       	push   $0x41c$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	e8 ef e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	89 f8                	mov    %edi,%eax$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	e8 ab eb ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	74 19                	je     f0101e7b <mem_init+0xbfe>$/;"	l
f0101e62	obj/kern/kernel.asm	/^f0101e62:	68 d8 74 10 f0       	push   $0xf01074d8$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	68 1d 04 00 00       	push   $0x41d$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	e8 c5 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e7b	obj/kern/kernel.asm	/^f0101e7b:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	74 19                	je     f0101e9b <mem_init+0xc1e>$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	68 25 6f 10 f0       	push   $0xf0106f25$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	68 1f 04 00 00       	push   $0x41f$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	e8 a5 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101ea0	obj/kern/kernel.asm	/^f0101ea0:	74 19                	je     f0101ebb <mem_init+0xc3e>$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	68 36 6f 10 f0       	push   $0xf0106f36$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	68 20 04 00 00       	push   $0x420$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	e8 85 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	6a 00                	push   $0x0$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	e8 a8 ef ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	85 c0                	test   %eax,%eax$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	74 04                	je     f0101ed0 <mem_init+0xc53>$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	39 c6                	cmp    %eax,%esi$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	74 19                	je     f0101ee9 <mem_init+0xc6c>$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	68 08 75 10 f0       	push   $0xf0107508$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	68 23 04 00 00       	push   $0x423$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	e8 57 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	6a 00                	push   $0x0$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	e8 3a f2 ff ff       	call   f0101133 <page_remove>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	8b 3d cc ee 22 f0    	mov    0xf022eecc,%edi$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	89 f8                	mov    %edi,%eax$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	e8 fd ea ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	74 19                	je     f0101f2c <mem_init+0xcaf>$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	68 2c 75 10 f0       	push   $0xf010752c$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	68 27 04 00 00       	push   $0x427$/;"	l
f0101f22	obj/kern/kernel.asm	/^f0101f22:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	e8 14 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	89 f8                	mov    %edi,%eax$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	e8 d0 ea ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	89 da                	mov    %ebx,%edx$/;"	l
f0101f3a	obj/kern/kernel.asm	/^f0101f3a:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	74 19                	je     f0101f63 <mem_init+0xce6>$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	68 d8 74 10 f0       	push   $0xf01074d8$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	68 28 04 00 00       	push   $0x428$/;"	l
f0101f59	obj/kern/kernel.asm	/^f0101f59:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	e8 dd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f63	obj/kern/kernel.asm	/^f0101f63:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	74 19                	je     f0101f83 <mem_init+0xd06>$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	68 dc 6e 10 f0       	push   $0xf0106edc$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	68 29 04 00 00       	push   $0x429$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	e8 bd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	74 19                	je     f0101fa3 <mem_init+0xd26>$/;"	l
f0101f8a	obj/kern/kernel.asm	/^f0101f8a:	68 36 6f 10 f0       	push   $0xf0106f36$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	68 2a 04 00 00       	push   $0x42a$/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	e8 9d e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	6a 00                	push   $0x0$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	53                   	push   %ebx$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	57                   	push   %edi$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	e8 c8 f1 ff ff       	call   f0101179 <page_insert>$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	85 c0                	test   %eax,%eax$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	74 19                	je     f0101fd1 <mem_init+0xd54>$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	68 50 75 10 f0       	push   $0xf0107550$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101fc2	obj/kern/kernel.asm	/^f0101fc2:	68 2d 04 00 00       	push   $0x42d$/;"	l
f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	e8 6f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	75 19                	jne    f0101ff1 <mem_init+0xd74>$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	68 47 6f 10 f0       	push   $0xf0106f47$/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	68 2e 04 00 00       	push   $0x42e$/;"	l
f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	e8 4f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	74 19                	je     f010200f <mem_init+0xd92>$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	68 53 6f 10 f0       	push   $0xf0106f53$/;"	l
f0101ffb	obj/kern/kernel.asm	/^f0101ffb:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102000	obj/kern/kernel.asm	/^f0102000:	68 2f 04 00 00       	push   $0x42f$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	e8 31 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	e8 11 f1 ff ff       	call   f0101133 <page_remove>$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	8b 3d cc ee 22 f0    	mov    0xf022eecc,%edi$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	89 f8                	mov    %edi,%eax$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	e8 d4 e9 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	74 19                	je     f0102055 <mem_init+0xdd8>$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	68 2c 75 10 f0       	push   $0xf010752c$/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	68 33 04 00 00       	push   $0x433$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	e8 eb df ff ff       	call   f0100040 <_panic>$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	89 f8                	mov    %edi,%eax$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	e8 a7 e9 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	74 19                	je     f010207f <mem_init+0xe02>$/;"	l
f0102066	obj/kern/kernel.asm	/^f0102066:	68 88 75 10 f0       	push   $0xf0107588$/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	68 34 04 00 00       	push   $0x434$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	e8 c1 df ff ff       	call   f0100040 <_panic>$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	74 19                	je     f010209f <mem_init+0xe22>$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	68 68 6f 10 f0       	push   $0xf0106f68$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	68 35 04 00 00       	push   $0x435$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	e8 a1 df ff ff       	call   f0100040 <_panic>$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	74 19                	je     f01020bf <mem_init+0xe42>$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	68 36 6f 10 f0       	push   $0xf0106f36$/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	68 36 04 00 00       	push   $0x436$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	e8 81 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	6a 00                	push   $0x0$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	e8 a4 ed ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	85 c0                	test   %eax,%eax$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	74 04                	je     f01020d4 <mem_init+0xe57>$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	74 19                	je     f01020ed <mem_init+0xe70>$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	68 b0 75 10 f0       	push   $0xf01075b0$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	68 39 04 00 00       	push   $0x439$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	e8 53 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020f0	obj/kern/kernel.asm	/^f01020f0:	6a 00                	push   $0x0$/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	e8 76 ed ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	85 c0                	test   %eax,%eax$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	74 19                	je     f0102117 <mem_init+0xe9a>$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	68 8a 6e 10 f0       	push   $0xf0106e8a$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	68 3c 04 00 00       	push   $0x43c$/;"	l
f010210d	obj/kern/kernel.asm	/^f010210d:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	e8 29 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	8b 0d cc ee 22 f0    	mov    0xf022eecc,%ecx$/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	8b 11                	mov    (%ecx),%edx$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102125	obj/kern/kernel.asm	/^f0102125:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	39 c2                	cmp    %eax,%edx$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	74 19                	je     f0102151 <mem_init+0xed4>$/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	68 54 72 10 f0       	push   $0xf0107254$/;"	l
f010213d	obj/kern/kernel.asm	/^f010213d:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	68 3f 04 00 00       	push   $0x43f$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	e8 ef de ff ff       	call   f0100040 <_panic>$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	74 19                	je     f010217a <mem_init+0xefd>$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	68 ed 6e 10 f0       	push   $0xf0106eed$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	68 41 04 00 00       	push   $0x441$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	e8 c6 de ff ff       	call   f0100040 <_panic>$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010217d	obj/kern/kernel.asm	/^f010217d:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	50                   	push   %eax$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	e8 5b ed ff ff       	call   f0100ee7 <page_free>$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	6a 01                	push   $0x1$/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	68 00 10 40 00       	push   $0x401000$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	e8 c3 ed ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	89 c7                	mov    %eax,%edi$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	8b 0d c8 ee 22 f0    	mov    0xf022eec8,%ecx$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	89 c2                	mov    %eax,%edx$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	39 ca                	cmp    %ecx,%edx$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	72 15                	jb     f01021dd <mem_init+0xf60>$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	50                   	push   %eax$/;"	l
f01021c9	obj/kern/kernel.asm	/^f01021c9:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	68 48 04 00 00       	push   $0x448$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01021d8	obj/kern/kernel.asm	/^f01021d8:	e8 63 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021dd	obj/kern/kernel.asm	/^f01021dd:	2d fc ff ff 0f       	sub    $0xffffffc,%eax$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	39 c7                	cmp    %eax,%edi$/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	74 19                	je     f01021ff <mem_init+0xf82>$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	68 79 6f 10 f0       	push   $0xf0106f79$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	68 49 04 00 00       	push   $0x449$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	e8 41 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102202	obj/kern/kernel.asm	/^f0102202:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102212	obj/kern/kernel.asm	/^f0102212:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010221e	obj/kern/kernel.asm	/^f010221e:	89 c2                	mov    %eax,%edx$/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102223	obj/kern/kernel.asm	/^f0102223:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	77 12                	ja     f0102239 <mem_init+0xfbc>$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	50                   	push   %eax$/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	6a 58                	push   $0x58$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	e8 07 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102246	obj/kern/kernel.asm	/^f0102246:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	50                   	push   %eax$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	e8 35 38 00 00       	call   f0105a86 <memset>$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	e8 8b ec ff ff       	call   f0100ee7 <page_free>$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	6a 01                	push   $0x1$/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	6a 00                	push   $0x0$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	e8 f6 ec ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	89 fa                	mov    %edi,%edx$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	89 d0                	mov    %edx,%eax$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	3b 05 c8 ee 22 f0    	cmp    0xf022eec8,%eax$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	72 12                	jb     f010229e <mem_init+0x1021>$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	52                   	push   %edx$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	6a 58                	push   $0x58$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	e8 a2 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	74 19                	je     f01022cb <mem_init+0x104e>$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	68 91 6f 10 f0       	push   $0xf0106f91$/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	68 53 04 00 00       	push   $0x453$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	e8 75 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	83 c0 04             	add    $0x4,%eax$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	39 d0                	cmp    %edx,%eax$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	75 db                	jne    f01022ad <mem_init+0x1030>$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f01022d7	obj/kern/kernel.asm	/^f01022d7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	89 0d 5c e2 22 f0    	mov    %ecx,0xf022e25c$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01022f2	obj/kern/kernel.asm	/^f01022f2:	50                   	push   %eax$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	e8 ef eb ff ff       	call   f0100ee7 <page_free>$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	e8 e7 eb ff ff       	call   f0100ee7 <page_free>$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	e8 df eb ff ff       	call   f0100ee7 <page_free>$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	83 c4 08             	add    $0x8,%esp$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	68 01 10 00 00       	push   $0x1001$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	6a 00                	push   $0x0$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	e8 ff ee ff ff       	call   f0101216 <mmio_map_region>$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	89 c3                	mov    %eax,%ebx$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	83 c4 08             	add    $0x8,%esp$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102321	obj/kern/kernel.asm	/^f0102321:	6a 00                	push   $0x0$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	e8 ee ee ff ff       	call   f0101216 <mmio_map_region>$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	89 c6                	mov    %eax,%esi$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	77 08                	ja     f0102342 <mem_init+0x10c5>$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	77 19                	ja     f010235b <mem_init+0x10de>$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	68 d4 75 10 f0       	push   $0xf01075d4$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	68 63 04 00 00       	push   $0x463$/;"	l
f0102351	obj/kern/kernel.asm	/^f0102351:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	e8 e5 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	77 08                	ja     f0102371 <mem_init+0x10f4>$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	77 19                	ja     f010238a <mem_init+0x110d>$/;"	l
f0102371	obj/kern/kernel.asm	/^f0102371:	68 fc 75 10 f0       	push   $0xf01075fc$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010237b	obj/kern/kernel.asm	/^f010237b:	68 64 04 00 00       	push   $0x464$/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102385	obj/kern/kernel.asm	/^f0102385:	e8 b6 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	89 da                	mov    %ebx,%edx$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	09 f2                	or     %esi,%edx$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	74 19                	je     f01023af <mem_init+0x1132>$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	68 24 76 10 f0       	push   $0xf0107624$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	68 66 04 00 00       	push   $0x466$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	e8 91 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	39 c6                	cmp    %eax,%esi$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	73 19                	jae    f01023cc <mem_init+0x114f>$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	68 a8 6f 10 f0       	push   $0xf0106fa8$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	68 68 04 00 00       	push   $0x468$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	e8 74 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	8b 3d cc ee 22 f0    	mov    0xf022eecc,%edi$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	89 da                	mov    %ebx,%edx$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	89 f8                	mov    %edi,%eax$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	e8 2d e6 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	85 c0                	test   %eax,%eax$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	74 19                	je     f01023f8 <mem_init+0x117b>$/;"	l
f01023df	obj/kern/kernel.asm	/^f01023df:	68 4c 76 10 f0       	push   $0xf010764c$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	68 6a 04 00 00       	push   $0x46a$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	e8 48 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	89 c2                	mov    %eax,%edx$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	89 f8                	mov    %edi,%eax$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	e8 fe e5 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	74 19                	je     f010242a <mem_init+0x11ad>$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	68 70 76 10 f0       	push   $0xf0107670$/;"	l
f0102416	obj/kern/kernel.asm	/^f0102416:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010241b	obj/kern/kernel.asm	/^f010241b:	68 6b 04 00 00       	push   $0x46b$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	e8 16 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	89 f2                	mov    %esi,%edx$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	89 f8                	mov    %edi,%eax$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	e8 d5 e5 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	85 c0                	test   %eax,%eax$/;"	l
f0102435	obj/kern/kernel.asm	/^f0102435:	74 19                	je     f0102450 <mem_init+0x11d3>$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	68 a0 76 10 f0       	push   $0xf01076a0$/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	68 6c 04 00 00       	push   $0x46c$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	e8 f0 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102450	obj/kern/kernel.asm	/^f0102450:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	89 f8                	mov    %edi,%eax$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	e8 ab e5 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	74 19                	je     f010247b <mem_init+0x11fe>$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	68 c4 76 10 f0       	push   $0xf01076c4$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	68 6d 04 00 00       	push   $0x46d$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	e8 c5 db ff ff       	call   f0100040 <_panic>$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	6a 00                	push   $0x0$/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	53                   	push   %ebx$/;"	l
f0102481	obj/kern/kernel.asm	/^f0102481:	57                   	push   %edi$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	e8 dd ea ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	83 c4 10             	add    $0x10,%esp$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	75 19                	jne    f01024a8 <mem_init+0x122b>$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	68 f0 76 10 f0       	push   $0xf01076f0$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	68 6f 04 00 00       	push   $0x46f$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	e8 98 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	6a 00                	push   $0x0$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	53                   	push   %ebx$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	e8 ab ea ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	74 19                	je     f01024da <mem_init+0x125d>$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	68 34 77 10 f0       	push   $0xf0107734$/;"	l
f01024c6	obj/kern/kernel.asm	/^f01024c6:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	68 70 04 00 00       	push   $0x470$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01024d5	obj/kern/kernel.asm	/^f01024d5:	e8 66 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	6a 00                	push   $0x0$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	53                   	push   %ebx$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	e8 79 ea ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01024f1	obj/kern/kernel.asm	/^f01024f1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	6a 00                	push   $0x0$/;"	l
f01024f6	obj/kern/kernel.asm	/^f01024f6:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	e8 60 ea ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	6a 00                	push   $0x0$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	56                   	push   %esi$/;"	l
f0102510	obj/kern/kernel.asm	/^f0102510:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	e8 49 ea ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	c7 04 24 ba 6f 10 f0 	movl   $0xf0106fba,(%esp)$/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	e8 1a 11 00 00       	call   f0103647 <cprintf>$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	a1 d0 ee 22 f0       	mov    0xf022eed0,%eax$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	77 15                	ja     f0102551 <mem_init+0x12d4>$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	50                   	push   %eax$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	68 be 00 00 00       	push   $0xbe$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	e8 ef da ff ff       	call   f0100040 <_panic>$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	8b 15 c8 ee 22 f0    	mov    0xf022eec8,%edx$/;"	l
f0102557	obj/kern/kernel.asm	/^f0102557:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f010255e	obj/kern/kernel.asm	/^f010255e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	6a 04                	push   $0x4$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	50                   	push   %eax$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	e8 ab ea ff ff       	call   f0101029 <boot_map_region>$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	a1 68 e2 22 f0       	mov    0xf022e268,%eax$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	77 15                	ja     f01025a2 <mem_init+0x1325>$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	50                   	push   %eax$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	68 ca 00 00 00       	push   $0xca$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	e8 9e da ff ff       	call   f0100040 <_panic>$/;"	l
f01025a2	obj/kern/kernel.asm	/^f01025a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	6a 05                	push   $0x5$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	50                   	push   %eax$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	e8 68 ea ff ff       	call   f0101029 <boot_map_region>$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	77 15                	ja     f01025e5 <mem_init+0x1368>$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	50                   	push   %eax$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f01025d6	obj/kern/kernel.asm	/^f01025d6:	68 d9 00 00 00       	push   $0xd9$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	e8 5b da ff ff       	call   f0100040 <_panic>$/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	6a 02                	push   $0x2$/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	68 00 90 11 00       	push   $0x119000$/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	e8 26 ea ff ff       	call   f0101029 <boot_map_region>$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	c7 45 c4 00 00 24 f0 	movl   $0xf0240000,-0x3c(%ebp)$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010260d	obj/kern/kernel.asm	/^f010260d:	bb 00 00 24 f0       	mov    $0xf0240000,%ebx$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010261d	obj/kern/kernel.asm	/^f010261d:	77 15                	ja     f0102634 <mem_init+0x13b7>$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	53                   	push   %ebx$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	68 1a 01 00 00       	push   $0x11a$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	e8 0c da ff ff       	call   f0100040 <_panic>$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	6a 02                	push   $0x2$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	50                   	push   %eax$/;"	l
f0102640	obj/kern/kernel.asm	/^f0102640:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	89 f2                	mov    %esi,%edx$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	e8 d8 e9 ff ff       	call   f0101029 <boot_map_region>$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	81 fb 00 00 28 f0    	cmp    $0xf0280000,%ebx$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	75 af                	jne    f0102617 <mem_init+0x139a>$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	6a 02                	push   $0x2$/;"	l
f010266d	obj/kern/kernel.asm	/^f010266d:	6a 00                	push   $0x0$/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	e8 a6 e9 ff ff       	call   f0101029 <boot_map_region>$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	8b 3d cc ee 22 f0    	mov    0xf022eecc,%edi$/;"	l
f0102689	obj/kern/kernel.asm	/^f0102689:	a1 c8 ee 22 f0       	mov    0xf022eec8,%eax$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	8b 35 d0 ee 22 f0    	mov    0xf022eed0,%esi$/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01026b1	obj/kern/kernel.asm	/^f01026b1:	eb 55                	jmp    f0102708 <mem_init+0x148b>$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f01026b9	obj/kern/kernel.asm	/^f01026b9:	89 f8                	mov    %edi,%eax$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	e8 48 e3 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	77 15                	ja     f01026de <mem_init+0x1461>$/;"	l
f01026c9	obj/kern/kernel.asm	/^f01026c9:	56                   	push   %esi$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	68 86 03 00 00       	push   $0x386$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	e8 62 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	39 d0                	cmp    %edx,%eax$/;"	l
f01026e7	obj/kern/kernel.asm	/^f01026e7:	74 19                	je     f0102702 <mem_init+0x1485>$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	68 68 77 10 f0       	push   $0xf0107768$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01026f3	obj/kern/kernel.asm	/^f01026f3:	68 86 03 00 00       	push   $0x386$/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	e8 3e d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	77 a6                	ja     f01026b3 <mem_init+0x1436>$/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	8b 35 68 e2 22 f0    	mov    0xf022e268,%esi$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	89 da                	mov    %ebx,%edx$/;"	l
f010271d	obj/kern/kernel.asm	/^f010271d:	89 f8                	mov    %edi,%eax$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	e8 e4 e2 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	77 15                	ja     f0102742 <mem_init+0x14c5>$/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	56                   	push   %esi$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	68 8b 03 00 00       	push   $0x38b$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	e8 fe d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	39 d0                	cmp    %edx,%eax$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	74 19                	je     f0102766 <mem_init+0x14e9>$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	68 9c 77 10 f0       	push   $0xf010779c$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	68 8b 03 00 00       	push   $0x38b$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	e8 da d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	75 a7                	jne    f010271b <mem_init+0x149e>$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f010277a	obj/kern/kernel.asm	/^f010277a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	eb 30                	jmp    f01027b1 <mem_init+0x1534>$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	89 f8                	mov    %edi,%eax$/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	e8 7a e2 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	74 19                	je     f01027ab <mem_init+0x152e>$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	68 d0 77 10 f0       	push   $0xf01077d0$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	68 8f 03 00 00       	push   $0x38f$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	e8 95 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	39 f3                	cmp    %esi,%ebx$/;"	l
f01027b3	obj/kern/kernel.asm	/^f01027b3:	72 cc                	jb     f0102781 <mem_init+0x1504>$/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)$/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01027c1	obj/kern/kernel.asm	/^f01027c1:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	89 c3                	mov    %eax,%ebx$/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01027e0	obj/kern/kernel.asm	/^f01027e0:	89 da                	mov    %ebx,%edx$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	89 f8                	mov    %edi,%eax$/;"	l
f01027e4	obj/kern/kernel.asm	/^f01027e4:	e8 1f e2 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	77 15                	ja     f0102806 <mem_init+0x1589>$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	56                   	push   %esi$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	68 97 03 00 00       	push   $0x397$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	e8 3a d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	8d 94 0b 00 00 24 f0 	lea    -0xfdc0000(%ebx,%ecx,1),%edx$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	39 d0                	cmp    %edx,%eax$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	74 19                	je     f010282d <mem_init+0x15b0>$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	68 f8 77 10 f0       	push   $0xf01077f8$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	68 97 03 00 00       	push   $0x397$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	e8 13 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	75 a8                	jne    f01027e0 <mem_init+0x1563>$/;"	l
f0102838	obj/kern/kernel.asm	/^f0102838:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	89 c6                	mov    %eax,%esi$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	89 da                	mov    %ebx,%edx$/;"	l
f0102848	obj/kern/kernel.asm	/^f0102848:	89 f8                	mov    %edi,%eax$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	e8 b9 e1 ff ff       	call   f0100a08 <check_va2pa>$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	74 19                	je     f010286d <mem_init+0x15f0>$/;"	l
f0102854	obj/kern/kernel.asm	/^f0102854:	68 40 78 10 f0       	push   $0xf0107840$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	68 99 03 00 00       	push   $0x399$/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102868	obj/kern/kernel.asm	/^f0102868:	e8 d3 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	39 de                	cmp    %ebx,%esi$/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	75 cf                	jne    f0102846 <mem_init+0x15c9>$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	81 fe 00 00 28 f0    	cmp    $0xf0280000,%esi$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	0f 85 2d ff ff ff    	jne    f01027c7 <mem_init+0x154a>$/;"	l
f010289a	obj/kern/kernel.asm	/^f010289a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	eb 2a                	jmp    f01028cb <mem_init+0x164e>$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f01028aa	obj/kern/kernel.asm	/^f01028aa:	77 1f                	ja     f01028cb <mem_init+0x164e>$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f01028b0	obj/kern/kernel.asm	/^f01028b0:	75 7e                	jne    f0102930 <mem_init+0x16b3>$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	68 d3 6f 10 f0       	push   $0xf0106fd3$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	68 a4 03 00 00       	push   $0x3a4$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	e8 75 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	76 3f                	jbe    f0102911 <mem_init+0x1694>$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	75 19                	jne    f01028f3 <mem_init+0x1676>$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	68 d3 6f 10 f0       	push   $0xf0106fd3$/;"	l
f01028df	obj/kern/kernel.asm	/^f01028df:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	68 a8 03 00 00       	push   $0x3a8$/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01028ee	obj/kern/kernel.asm	/^f01028ee:	e8 4d d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01028f6	obj/kern/kernel.asm	/^f01028f6:	75 38                	jne    f0102930 <mem_init+0x16b3>$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	68 e4 6f 10 f0       	push   $0xf0106fe4$/;"	l
f01028fd	obj/kern/kernel.asm	/^f01028fd:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	68 a9 03 00 00       	push   $0x3a9$/;"	l
f0102907	obj/kern/kernel.asm	/^f0102907:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	e8 2f d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	74 19                	je     f0102930 <mem_init+0x16b3>$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	68 f5 6f 10 f0       	push   $0xf0106ff5$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	68 ac 03 00 00       	push   $0x3ac$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	e8 10 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	0f 86 63 ff ff ff    	jbe    f01028a1 <mem_init+0x1624>$/;"	l
f010293e	obj/kern/kernel.asm	/^f010293e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	68 64 78 10 f0       	push   $0xf0107864$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	e8 fc 0c 00 00       	call   f0103647 <cprintf>$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102958	obj/kern/kernel.asm	/^f0102958:	77 15                	ja     f010296f <mem_init+0x16f2>$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	50                   	push   %eax$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	68 f1 00 00 00       	push   $0xf1$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	e8 d1 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	e8 e8 e0 ff ff       	call   f0100a69 <check_page_free_list>$/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102987	obj/kern/kernel.asm	/^f0102987:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	6a 00                	push   $0x0$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	e8 d4 e4 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	89 c3                	mov    %eax,%ebx$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	85 c0                	test   %eax,%eax$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	75 19                	jne    f01029bb <mem_init+0x173e>$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	68 df 6d 10 f0       	push   $0xf0106ddf$/;"	l
f01029a7	obj/kern/kernel.asm	/^f01029a7:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	68 85 04 00 00       	push   $0x485$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	e8 85 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	6a 00                	push   $0x0$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	e8 a8 e4 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	89 c7                	mov    %eax,%edi$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	85 c0                	test   %eax,%eax$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	75 19                	jne    f01029e7 <mem_init+0x176a>$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	68 f5 6d 10 f0       	push   $0xf0106df5$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01029d8	obj/kern/kernel.asm	/^f01029d8:	68 86 04 00 00       	push   $0x486$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	e8 59 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	6a 00                	push   $0x0$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	e8 7c e4 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	89 c6                	mov    %eax,%esi$/;"	l
f01029f3	obj/kern/kernel.asm	/^f01029f3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	85 c0                	test   %eax,%eax$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	75 19                	jne    f0102a13 <mem_init+0x1796>$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	68 0b 6e 10 f0       	push   $0xf0106e0b$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	68 87 04 00 00       	push   $0x487$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	e8 2d d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	53                   	push   %ebx$/;"	l
f0102a17	obj/kern/kernel.asm	/^f0102a17:	e8 cb e4 ff ff       	call   f0100ee7 <page_free>$/;"	l
f0102a1c	obj/kern/kernel.asm	/^f0102a1c:	89 f8                	mov    %edi,%eax$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	89 c2                	mov    %eax,%edx$/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	72 12                	jb     f0102a4c <mem_init+0x17cf>$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	50                   	push   %eax$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	6a 58                	push   $0x58$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0102a47	obj/kern/kernel.asm	/^f0102a47:	e8 f4 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	6a 01                	push   $0x1$/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	50                   	push   %eax$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	e8 25 30 00 00       	call   f0105a86 <memset>$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	89 f0                	mov    %esi,%eax$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	89 c2                	mov    %eax,%edx$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	72 12                	jb     f0102a91 <mem_init+0x1814>$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	50                   	push   %eax$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	6a 58                	push   $0x58$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	e8 af d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	6a 02                	push   $0x2$/;"	l
f0102a9b	obj/kern/kernel.asm	/^f0102a9b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	50                   	push   %eax$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	e8 e0 2f 00 00       	call   f0105a86 <memset>$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	6a 02                	push   $0x2$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	57                   	push   %edi$/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	e8 c0 e6 ff ff       	call   f0101179 <page_insert>$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102ac1	obj/kern/kernel.asm	/^f0102ac1:	74 19                	je     f0102adc <mem_init+0x185f>$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	68 dc 6e 10 f0       	push   $0xf0106edc$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	68 8c 04 00 00       	push   $0x48c$/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	e8 64 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	01 01 01 $/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	74 19                	je     f0102b01 <mem_init+0x1884>$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	68 84 78 10 f0       	push   $0xf0107884$/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	68 8d 04 00 00       	push   $0x48d$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	e8 3f d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	6a 02                	push   $0x2$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	56                   	push   %esi$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0102b0f	obj/kern/kernel.asm	/^f0102b0f:	e8 65 e6 ff ff       	call   f0101179 <page_insert>$/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	02 02 02 $/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	74 19                	je     f0102b3c <mem_init+0x18bf>$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	68 a8 78 10 f0       	push   $0xf01078a8$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	68 8f 04 00 00       	push   $0x48f$/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	e8 04 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	74 19                	je     f0102b5c <mem_init+0x18df>$/;"	l
f0102b43	obj/kern/kernel.asm	/^f0102b43:	68 fe 6e 10 f0       	push   $0xf0106efe$/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	68 90 04 00 00       	push   $0x490$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102b57	obj/kern/kernel.asm	/^f0102b57:	e8 e4 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	74 19                	je     f0102b7c <mem_init+0x18ff>$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	68 68 6f 10 f0       	push   $0xf0106f68$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	68 91 04 00 00       	push   $0x491$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	e8 c4 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	03 03 03 $/;"	l
f0102b86	obj/kern/kernel.asm	/^f0102b86:	89 f0                	mov    %esi,%eax$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	89 c2                	mov    %eax,%edx$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	3b 15 c8 ee 22 f0    	cmp    0xf022eec8,%edx$/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	72 12                	jb     f0102bb3 <mem_init+0x1936>$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	50                   	push   %eax$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	6a 58                	push   $0x58$/;"	l
f0102ba9	obj/kern/kernel.asm	/^f0102ba9:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	e8 8d d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	03 03 03 $/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	74 19                	je     f0102bd8 <mem_init+0x195b>$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	68 cc 78 10 f0       	push   $0xf01078cc$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	68 93 04 00 00       	push   $0x493$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	e8 68 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bd8	obj/kern/kernel.asm	/^f0102bd8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0102be6	obj/kern/kernel.asm	/^f0102be6:	e8 48 e5 ff ff       	call   f0101133 <page_remove>$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	74 19                	je     f0102c0e <mem_init+0x1991>$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	68 36 6f 10 f0       	push   $0xf0106f36$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	68 95 04 00 00       	push   $0x495$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	e8 32 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	8b 0d cc ee 22 f0    	mov    0xf022eecc,%ecx$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	89 d8                	mov    %ebx,%eax$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	2b 05 d0 ee 22 f0    	sub    0xf022eed0,%eax$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	39 c2                	cmp    %eax,%edx$/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	74 19                	je     f0102c47 <mem_init+0x19ca>$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	68 54 72 10 f0       	push   $0xf0107254$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	68 98 04 00 00       	push   $0x498$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102c42	obj/kern/kernel.asm	/^f0102c42:	e8 f9 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	74 19                	je     f0102c6d <mem_init+0x19f0>$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	68 ed 6e 10 f0       	push   $0xf0106eed$/;"	l
f0102c59	obj/kern/kernel.asm	/^f0102c59:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	68 9a 04 00 00       	push   $0x49a$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	68 bc 6c 10 f0       	push   $0xf0106cbc$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	e8 d3 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c6d	obj/kern/kernel.asm	/^f0102c6d:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c76	obj/kern/kernel.asm	/^f0102c76:	53                   	push   %ebx$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	e8 6b e2 ff ff       	call   f0100ee7 <page_free>$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	c7 04 24 f8 78 10 f0 	movl   $0xf01078f8,(%esp)$/;"	l
f0102c83	obj/kern/kernel.asm	/^f0102c83:	e8 bf 09 00 00       	call   f0103647 <cprintf>$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102c8e	obj/kern/kernel.asm	/^f0102c8e:	5b                   	pop    %ebx$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	5e                   	pop    %esi$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	5f                   	pop    %edi$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	5d                   	pop    %ebp$/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c3                   	ret    $/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93 <user_mem_check>:$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	55                   	push   %ebp$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	89 e5                	mov    %esp,%ebp$/;"	l
f0102c96	obj/kern/kernel.asm	/^f0102c96:	57                   	push   %edi$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	56                   	push   %esi$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	53                   	push   %ebx$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	8d 84 01 ff 0f 00 00 	lea    0xfff(%ecx,%eax,1),%eax$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	83 ce 01             	or     $0x1,%esi$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	eb 4c                	jmp    f0102d11 <user_mem_check+0x7e>$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	6a 00                	push   $0x0$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	53                   	push   %ebx$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	e8 91 e2 ff ff       	call   f0100f64 <pgdir_walk>$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	85 c0                	test   %eax,%eax$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	74 10                	je     f0102cea <user_mem_check+0x57>$/;"	l
f0102cda	obj/kern/kernel.asm	/^f0102cda:	81 fb 00 00 80 ef    	cmp    $0xef800000,%ebx$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	77 08                	ja     f0102cea <user_mem_check+0x57>$/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	89 f2                	mov    %esi,%edx$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	23 10                	and    (%eax),%edx$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	39 d6                	cmp    %edx,%esi$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	74 21                	je     f0102d0b <user_mem_check+0x78>$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	39 5d 0c             	cmp    %ebx,0xc(%ebp)$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	76 0f                	jbe    f0102cfe <user_mem_check+0x6b>$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	a3 58 e2 22 f0       	mov    %eax,0xf022e258$/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102cfc	obj/kern/kernel.asm	/^f0102cfc:	eb 1d                	jmp    f0102d1b <user_mem_check+0x88>$/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	89 1d 58 e2 22 f0    	mov    %ebx,0xf022e258$/;"	l
f0102d04	obj/kern/kernel.asm	/^f0102d04:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	eb 10                	jmp    f0102d1b <user_mem_check+0x88>$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	72 af                	jb     f0102cc5 <user_mem_check+0x32>$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	5b                   	pop    %ebx$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	5e                   	pop    %esi$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	5f                   	pop    %edi$/;"	l
f0102d21	obj/kern/kernel.asm	/^f0102d21:	5d                   	pop    %ebp$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	c3                   	ret    $/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23 <user_mem_assert>:$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	55                   	push   %ebp$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	53                   	push   %ebx$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	83 c8 04             	or     $0x4,%eax$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	50                   	push   %eax$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	53                   	push   %ebx$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	e8 53 ff ff ff       	call   f0102c93 <user_mem_check>$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	85 c0                	test   %eax,%eax$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	79 21                	jns    f0102d68 <user_mem_assert+0x45>$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	ff 35 58 e2 22 f0    	pushl  0xf022e258$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	68 24 79 10 f0       	push   $0xf0107924$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	e8 ea 08 00 00       	call   f0103647 <cprintf>$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	e8 10 06 00 00       	call   f0103375 <env_destroy>$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	c9                   	leave  $/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	c3                   	ret    $/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d <region_alloc>:$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	55                   	push   %ebp$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	89 e5                	mov    %esp,%ebp$/;"	l
f0102d70	obj/kern/kernel.asm	/^f0102d70:	57                   	push   %edi$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	56                   	push   %esi$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	53                   	push   %ebx$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	89 c7                	mov    %eax,%edi$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	89 d3                	mov    %edx,%ebx$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	8d 34 0a             	lea    (%edx,%ecx,1),%esi$/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	eb 58                	jmp    f0102de3 <region_alloc+0x76>$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	6a 00                	push   $0x0$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	e8 d8 e0 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0102d95	obj/kern/kernel.asm	/^f0102d95:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	85 c0                	test   %eax,%eax$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	75 17                	jne    f0102db3 <region_alloc+0x46>$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	68 79 79 10 f0       	push   $0xf0107979$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	68 2d 01 00 00       	push   $0x12d$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	e8 8d d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	6a 06                	push   $0x6$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	53                   	push   %ebx$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	50                   	push   %eax$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	e8 ba e3 ff ff       	call   f0101179 <page_insert>$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	85 c0                	test   %eax,%eax$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	74 17                	je     f0102ddd <region_alloc+0x70>$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	68 ec 79 10 f0       	push   $0xf01079ec$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	68 30 01 00 00       	push   $0x130$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f0102dd8	obj/kern/kernel.asm	/^f0102dd8:	e8 63 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	39 f3                	cmp    %esi,%ebx$/;"	l
f0102de5	obj/kern/kernel.asm	/^f0102de5:	76 a4                	jbe    f0102d8b <region_alloc+0x1e>$/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	5b                   	pop    %ebx$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	5e                   	pop    %esi$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	5f                   	pop    %edi$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	5d                   	pop    %ebp$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	c3                   	ret    $/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def <envid2env>:$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	55                   	push   %ebp$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	89 e5                	mov    %esp,%ebp$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	56                   	push   %esi$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	53                   	push   %ebx$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	85 c0                	test   %eax,%eax$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	75 1a                	jne    f0102e18 <envid2env+0x29>$/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	e8 a8 32 00 00       	call   f01060ab <cpunum>$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	89 01                	mov    %eax,(%ecx)$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	eb 70                	jmp    f0102e88 <envid2env+0x99>$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	89 c3                	mov    %eax,%ebx$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	03 1d 68 e2 22 f0    	add    0xf022e268,%ebx$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	74 05                	je     f0102e34 <envid2env+0x45>$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	74 10                	je     f0102e44 <envid2env+0x55>$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	eb 44                	jmp    f0102e88 <envid2env+0x99>$/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	84 d2                	test   %dl,%dl$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	74 36                	je     f0102e7e <envid2env+0x8f>$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	e8 5e 32 00 00       	call   f01060ab <cpunum>$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	39 98 48 f0 23 f0    	cmp    %ebx,-0xfdc0fb8(%eax)$/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	74 26                	je     f0102e7e <envid2env+0x8f>$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0102e5b	obj/kern/kernel.asm	/^f0102e5b:	e8 4b 32 00 00       	call   f01060ab <cpunum>$/;"	l
f0102e60	obj/kern/kernel.asm	/^f0102e60:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	74 10                	je     f0102e7e <envid2env+0x8f>$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	eb 0a                	jmp    f0102e88 <envid2env+0x99>$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	89 18                	mov    %ebx,(%eax)$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e88	obj/kern/kernel.asm	/^f0102e88:	5b                   	pop    %ebx$/;"	l
f0102e89	obj/kern/kernel.asm	/^f0102e89:	5e                   	pop    %esi$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	5d                   	pop    %ebp$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	c3                   	ret    $/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c <env_init_percpu>:$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	55                   	push   %ebp$/;"	l
f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	b8 40 33 12 f0       	mov    $0xf0123340,%eax$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0102e97	obj/kern/kernel.asm	/^f0102e97:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102e9c	obj/kern/kernel.asm	/^f0102e9c:	8e e8                	mov    %eax,%gs$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	8e e0                	mov    %eax,%fs$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	b0 10                	mov    $0x10,%al$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	8e c0                	mov    %eax,%es$/;"	l
f0102ea4	obj/kern/kernel.asm	/^f0102ea4:	8e d8                	mov    %eax,%ds$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	8e d0                	mov    %eax,%ss$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	ea af 2e 10 f0 08 00 	ljmp   $0x8,$0xf0102eaf$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	b0 00                	mov    $0x0,%al$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	0f 00 d0             	lldt   %ax$/;"	l
f0102eb4	obj/kern/kernel.asm	/^f0102eb4:	5d                   	pop    %ebp$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	c3                   	ret    $/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6 <env_init>:$/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	55                   	push   %ebp$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	89 e5                	mov    %esp,%ebp$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ebc	obj/kern/kernel.asm	/^f0102ebc:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	6a 00                	push   $0x0$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	ff 35 68 e2 22 f0    	pushl  0xf022e268$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	e8 b8 2b 00 00       	call   f0105a86 <memset>$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	8b 0d 68 e2 22 f0    	mov    0xf022e268,%ecx$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	89 0d 6c e2 22 f0    	mov    %ecx,0xf022e26c$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	8d 41 7c             	lea    0x7c(%ecx),%eax$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	8d 91 7c f0 01 00    	lea    0x1f07c(%ecx),%edx$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	89 40 c8             	mov    %eax,-0x38(%eax)$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0102eec	obj/kern/kernel.asm	/^f0102eec:	39 d0                	cmp    %edx,%eax$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	75 f6                	jne    f0102ee6 <env_init+0x30>$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	c7 81 c8 ef 01 00 00 	movl   $0x0,0x1efc8(%ecx)$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	00 00 00 $/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	e8 8d ff ff ff       	call   f0102e8c <env_init_percpu>$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	c9                   	leave  $/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	c3                   	ret    $/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01 <env_alloc>:$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	55                   	push   %ebp$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	89 e5                	mov    %esp,%ebp$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	56                   	push   %esi$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	53                   	push   %ebx$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	8b 1d 6c e2 22 f0    	mov    0xf022e26c,%ebx$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	85 db                	test   %ebx,%ebx$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	0f 84 66 01 00 00    	je     f010307a <env_alloc+0x179>$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	6a 01                	push   $0x1$/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	e8 4f df ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	89 c6                	mov    %eax,%esi$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	85 c0                	test   %eax,%eax$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	0f 84 56 01 00 00    	je     f0103081 <env_alloc+0x180>$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	89 c2                	mov    %eax,%edx$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	2b 15 d0 ee 22 f0    	sub    0xf022eed0,%edx$/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	89 d0                	mov    %edx,%eax$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	3b 05 c8 ee 22 f0    	cmp    0xf022eec8,%eax$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	72 12                	jb     f0102f58 <env_alloc+0x57>$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	52                   	push   %edx$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0102f4c	obj/kern/kernel.asm	/^f0102f4c:	6a 58                	push   $0x58$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	e8 e8 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	ff 35 cc ee 22 f0    	pushl  0xf022eecc$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	52                   	push   %edx$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	e8 5e 2b 00 00       	call   f0105ad3 <memmove>$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102f85	obj/kern/kernel.asm	/^f0102f85:	77 15                	ja     f0102f9c <env_alloc+0x9b>$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	50                   	push   %eax$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	68 c9 00 00 00       	push   $0xc9$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	e8 a4 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	83 ca 05             	or     $0x5,%edx$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	7f 05                	jg     f0102fbf <env_alloc+0xbe>$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	89 da                	mov    %ebx,%edx$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	2b 15 68 e2 22 f0    	sub    0xf022e268,%edx$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	09 d0                	or     %edx,%eax$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	6a 44                	push   $0x44$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	6a 00                	push   $0x0$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	53                   	push   %ebx$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	e8 89 2a 00 00       	call   f0105a86 <memset>$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0103027	obj/kern/kernel.asm	/^f0103027:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	a3 6c e2 22 f0       	mov    %eax,0xf022e26c$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	e8 6f 30 00 00       	call   f01060ab <cpunum>$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	83 b8 48 f0 23 f0 00 	cmpl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f010304e	obj/kern/kernel.asm	/^f010304e:	74 11                	je     f0103061 <env_alloc+0x160>$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	e8 56 30 00 00       	call   f01060ab <cpunum>$/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	53                   	push   %ebx$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	52                   	push   %edx$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	68 9e 79 10 f0       	push   $0xf010799e$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	e8 d7 05 00 00       	call   f0103647 <cprintf>$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	eb 0c                	jmp    f0103086 <env_alloc+0x185>$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	eb 05                	jmp    f0103086 <env_alloc+0x185>$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	5b                   	pop    %ebx$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	5e                   	pop    %esi$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	5d                   	pop    %ebp$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	c3                   	ret    $/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d <env_create>:$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	55                   	push   %ebp$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	57                   	push   %edi$/;"	l
f0103091	obj/kern/kernel.asm	/^f0103091:	56                   	push   %esi$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	53                   	push   %ebx$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	6a 00                	push   $0x0$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010309b	obj/kern/kernel.asm	/^f010309b:	50                   	push   %eax$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	e8 60 fe ff ff       	call   f0102f01 <env_alloc>$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	85 c0                	test   %eax,%eax$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	74 17                	je     f01030bf <env_create+0x32>$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	68 b3 79 10 f0       	push   $0xf01079b3$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	68 95 01 00 00       	push   $0x195$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	e8 81 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	89 47 50             	mov    %eax,0x50(%edi)$/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01030cb	obj/kern/kernel.asm	/^f01030cb:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	74 17                	je     f01030ea <env_create+0x5d>$/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	68 10 7a 10 f0       	push   $0xf0107a10$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	68 6e 01 00 00       	push   $0x16e$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	e8 56 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	89 c3                	mov    %eax,%ebx$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	03 58 1c             	add    0x1c(%eax),%ebx$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	0f b7 70 2c          	movzwl 0x2c(%eax),%esi$/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	01 de                	add    %ebx,%esi$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	eb 77                	jmp    f0103174 <env_create+0xe7>$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	75 6f                	jne    f0103171 <env_create+0xe4>$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	89 f8                	mov    %edi,%eax$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	e8 5e fc ff ff       	call   f0102d6d <region_alloc>$/;"	l
f010310f	obj/kern/kernel.asm	/^f010310f:	0f 20 d8             	mov    %cr3,%eax$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	77 15                	ja     f0103134 <env_create+0xa7>$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	50                   	push   %eax$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	68 77 01 00 00       	push   $0x177$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	e8 0c cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103148	obj/kern/kernel.asm	/^f0103148:	50                   	push   %eax$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	e8 82 29 00 00       	call   f0105ad3 <memmove>$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f010315a	obj/kern/kernel.asm	/^f010315a:	29 c2                	sub    %eax,%edx$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	52                   	push   %edx$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	6a 00                	push   $0x0$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	50                   	push   %eax$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	e8 1e 29 00 00       	call   f0105a86 <memset>$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	39 de                	cmp    %ebx,%esi$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	77 85                	ja     f01030fd <env_create+0x70>$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	89 f8                	mov    %edi,%eax$/;"	l
f010318d	obj/kern/kernel.asm	/^f010318d:	e8 db fb ff ff       	call   f0102d6d <region_alloc>$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103195	obj/kern/kernel.asm	/^f0103195:	5b                   	pop    %ebx$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	5e                   	pop    %esi$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	5f                   	pop    %edi$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	5d                   	pop    %ebp$/;"	l
f0103199	obj/kern/kernel.asm	/^f0103199:	c3                   	ret    $/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a <env_free>:$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	55                   	push   %ebp$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	89 e5                	mov    %esp,%ebp$/;"	l
f010319d	obj/kern/kernel.asm	/^f010319d:	57                   	push   %edi$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	56                   	push   %esi$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	53                   	push   %ebx$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	e8 00 2f 00 00       	call   f01060ab <cpunum>$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	39 b8 48 f0 23 f0    	cmp    %edi,-0xfdc0fb8(%eax)$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	75 29                	jne    f01031df <env_free+0x45>$/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	77 15                	ja     f01031d7 <env_free+0x3d>$/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	50                   	push   %eax$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	68 a9 01 00 00       	push   $0x1a9$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	e8 69 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	e8 c4 2e 00 00       	call   f01060ab <cpunum>$/;"	l
f01031e7	obj/kern/kernel.asm	/^f01031e7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	83 b8 48 f0 23 f0 00 	cmpl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	74 11                	je     f0103209 <env_free+0x6f>$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	e8 ae 2e 00 00       	call   f01060ab <cpunum>$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	53                   	push   %ebx$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	52                   	push   %edx$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	68 c9 79 10 f0       	push   $0xf01079c9$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	e8 2f 04 00 00       	call   f0103647 <cprintf>$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	83 c4 10             	add    $0x10,%esp$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	89 d0                	mov    %edx,%eax$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	0f 84 a8 00 00 00    	je     f01032e7 <env_free+0x14d>$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	89 f0                	mov    %esi,%eax$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	3b 05 c8 ee 22 f0    	cmp    0xf022eec8,%eax$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	72 15                	jb     f010326a <env_free+0xd0>$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	56                   	push   %esi$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	68 b8 01 00 00       	push   $0x1b8$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	e8 d6 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	01 $/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	74 17                	je     f0103299 <env_free+0xff>$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	89 d8                	mov    %ebx,%eax$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	50                   	push   %eax$/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	ff 77 60             	pushl  0x60(%edi)$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	e8 9d de ff ff       	call   f0101133 <page_remove>$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010329c	obj/kern/kernel.asm	/^f010329c:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	75 d4                	jne    f0103278 <env_free+0xde>$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	3b 05 c8 ee 22 f0    	cmp    0xf022eec8,%eax$/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	72 14                	jb     f01032d0 <env_free+0x136>$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	68 20 71 10 f0       	push   $0xf0107120$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	6a 51                	push   $0x51$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f01032cb	obj/kern/kernel.asm	/^f01032cb:	e8 70 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	a1 d0 ee 22 f0       	mov    0xf022eed0,%eax$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	50                   	push   %eax$/;"	l
f01032df	obj/kern/kernel.asm	/^f01032df:	e8 59 dc ff ff       	call   f0100f3d <page_decref>$/;"	l
f01032e4	obj/kern/kernel.asm	/^f01032e4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	0f 85 29 ff ff ff    	jne    f0103222 <env_free+0x88>$/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	77 15                	ja     f0103318 <env_free+0x17e>$/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	50                   	push   %eax$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	68 c6 01 00 00       	push   $0x1c6$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	e8 28 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	3b 05 c8 ee 22 f0    	cmp    0xf022eec8,%eax$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	72 14                	jb     f0103343 <env_free+0x1a9>$/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	68 20 71 10 f0       	push   $0xf0107120$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	6a 51                	push   $0x51$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	68 c8 6c 10 f0       	push   $0xf0106cc8$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	e8 fd cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	8b 15 d0 ee 22 f0    	mov    0xf022eed0,%edx$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	50                   	push   %eax$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	e8 e8 db ff ff       	call   f0100f3d <page_decref>$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	a1 6c e2 22 f0       	mov    0xf022e26c,%eax$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	89 3d 6c e2 22 f0    	mov    %edi,0xf022e26c$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103370	obj/kern/kernel.asm	/^f0103370:	5b                   	pop    %ebx$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	5e                   	pop    %esi$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	5f                   	pop    %edi$/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	5d                   	pop    %ebp$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	c3                   	ret    $/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375 <env_destroy>:$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	55                   	push   %ebp$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	89 e5                	mov    %esp,%ebp$/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	53                   	push   %ebx$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	75 19                	jne    f010339e <env_destroy+0x29>$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	e8 21 2d 00 00       	call   f01060ab <cpunum>$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	39 98 48 f0 23 f0    	cmp    %ebx,-0xfdc0fb8(%eax)$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	74 09                	je     f010339e <env_destroy+0x29>$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	eb 33                	jmp    f01033d1 <env_destroy+0x5c>$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	53                   	push   %ebx$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	e8 f3 fd ff ff       	call   f010319a <env_free>$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	e8 ff 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	39 98 48 f0 23 f0    	cmp    %ebx,-0xfdc0fb8(%eax)$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	75 17                	jne    f01033d1 <env_destroy+0x5c>$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	e8 ec 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f01033bf	obj/kern/kernel.asm	/^f01033bf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	c7 80 48 f0 23 f0 00 	movl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	00 00 00 $/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	e8 e9 0f 00 00       	call   f01043ba <sched_yield>$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	c9                   	leave  $/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	c3                   	ret    $/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6 <env_pop_tf>:$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	55                   	push   %ebp$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	53                   	push   %ebx$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	e8 c9 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	8b 98 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%ebx$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	e8 bb 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	68 00 34 12 f0       	push   $0xf0123400$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	e8 b3 2f 00 00       	call   f01063b3 <spin_unlock>$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	f3 90                	pause  $/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103405	obj/kern/kernel.asm	/^f0103405:	61                   	popa   $/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	07                   	pop    %es$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	1f                   	pop    %ds$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	83 c4 08             	add    $0x8,%esp$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	cf                   	iret   $/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	68 df 79 10 f0       	push   $0xf01079df$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	68 fc 01 00 00       	push   $0x1fc$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	e8 1d cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423 <env_run>:$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	55                   	push   %ebp$/;"	l
f0103424	obj/kern/kernel.asm	/^f0103424:	89 e5                	mov    %esp,%ebp$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	e8 7d 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	83 b8 48 f0 23 f0 00 	cmpl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	74 29                	je     f0103463 <env_run+0x40>$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	e8 6c 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	75 15                	jne    f0103463 <env_run+0x40>$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	e8 58 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	e8 43 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010346b	obj/kern/kernel.asm	/^f010346b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	89 90 48 f0 23 f0    	mov    %edx,-0xfdc0fb8(%eax)$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	e8 32 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	e8 1d 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	e8 0b 2c 00 00       	call   f01060ab <cpunum>$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034a3	obj/kern/kernel.asm	/^f01034a3:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	77 15                	ja     f01034c8 <env_run+0xa5>$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	50                   	push   %eax$/;"	l
f01034b4	obj/kern/kernel.asm	/^f01034b4:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	68 21 02 00 00       	push   $0x221$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	68 93 79 10 f0       	push   $0xf0107993$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	e8 78 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	e8 d6 2b 00 00       	call   f01060ab <cpunum>$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	e8 f0 fe ff ff       	call   f01033d6 <env_pop_tf>$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6 <mc146818_read>:$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	55                   	push   %ebp$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01034ee	obj/kern/kernel.asm	/^f01034ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	ee                   	out    %al,(%dx)$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	b2 71                	mov    $0x71,%dl$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	ec                   	in     (%dx),%al$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	5d                   	pop    %ebp$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	c3                   	ret    $/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa <mc146818_write>:$/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	55                   	push   %ebp$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103502	obj/kern/kernel.asm	/^f0103502:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	ee                   	out    %al,(%dx)$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	b2 71                	mov    $0x71,%dl$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	ee                   	out    %al,(%dx)$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	5d                   	pop    %ebp$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	c3                   	ret    $/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e <irq_setmask_8259A>:$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	55                   	push   %ebp$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	56                   	push   %esi$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	53                   	push   %ebx$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	66 a3 e8 33 12 f0    	mov    %ax,0xf01233e8$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	80 3d 70 e2 22 f0 00 	cmpb   $0x0,0xf022e270$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	74 57                	je     f010357c <irq_setmask_8259A+0x6e>$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	89 c6                	mov    %eax,%esi$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	ee                   	out    %al,(%dx)$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	ee                   	out    %al,(%dx)$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	68 2f 7a 10 f0       	push   $0xf0107a2f$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	e8 06 01 00 00       	call   f0103647 <cprintf>$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	0f b7 f6             	movzwl %si,%esi$/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	f7 d6                	not    %esi$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103551	obj/kern/kernel.asm	/^f0103551:	73 11                	jae    f0103564 <irq_setmask_8259A+0x56>$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	53                   	push   %ebx$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	68 21 9b 10 f0       	push   $0xf0109b21$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	e8 e6 00 00 00       	call   f0103647 <cprintf>$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	75 e2                	jne    f010354e <irq_setmask_8259A+0x40>$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	68 d1 6f 10 f0       	push   $0xf0106fd1$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	e8 ce 00 00 00       	call   f0103647 <cprintf>$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	83 c4 10             	add    $0x10,%esp$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	5b                   	pop    %ebx$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	5e                   	pop    %esi$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	5d                   	pop    %ebp$/;"	l
f0103582	obj/kern/kernel.asm	/^f0103582:	c3                   	ret    $/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583 <pic_init>:$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	c6 05 70 e2 22 f0 01 	movb   $0x1,0xf022e270$/;"	l
f010358a	obj/kern/kernel.asm	/^f010358a:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103594	obj/kern/kernel.asm	/^f0103594:	ee                   	out    %al,(%dx)$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	ee                   	out    %al,(%dx)$/;"	l
f0103598	obj/kern/kernel.asm	/^f0103598:	b2 20                	mov    $0x20,%dl$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	ee                   	out    %al,(%dx)$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	b2 21                	mov    $0x21,%dl$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	ee                   	out    %al,(%dx)$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	ee                   	out    %al,(%dx)$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	ee                   	out    %al,(%dx)$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	ee                   	out    %al,(%dx)$/;"	l
f01035bc	obj/kern/kernel.asm	/^f01035bc:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	ee                   	out    %al,(%dx)$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	ee                   	out    %al,(%dx)$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	ee                   	out    %al,(%dx)$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	b2 20                	mov    $0x20,%dl$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	ee                   	out    %al,(%dx)$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	ee                   	out    %al,(%dx)$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	ee                   	out    %al,(%dx)$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	ee                   	out    %al,(%dx)$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	0f b7 05 e8 33 12 f0 	movzwl 0xf01233e8,%eax$/;"	l
f01035f3	obj/kern/kernel.asm	/^f01035f3:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	74 13                	je     f010360c <pic_init+0x89>$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	55                   	push   %ebp$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01035ff	obj/kern/kernel.asm	/^f01035ff:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	50                   	push   %eax$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	e8 06 ff ff ff       	call   f010350e <irq_setmask_8259A>$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	83 c4 10             	add    $0x10,%esp$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	c9                   	leave  $/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	f3 c3                	repz ret $/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e <putch>:$/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	55                   	push   %ebp$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	e8 1d d1 ff ff       	call   f0100739 <cputchar>$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	c9                   	leave  $/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	c3                   	ret    $/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621 <vcprintf>:$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	55                   	push   %ebp$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	89 e5                	mov    %esp,%ebp$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	50                   	push   %eax$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	68 0e 36 10 f0       	push   $0xf010360e$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	e8 2b 1d 00 00       	call   f010536d <vprintfmt>$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	c9                   	leave  $/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	c3                   	ret    $/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647 <cprintf>:$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	55                   	push   %ebp$/;"	l
f0103648	obj/kern/kernel.asm	/^f0103648:	89 e5                	mov    %esp,%ebp$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010364d	obj/kern/kernel.asm	/^f010364d:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103650	obj/kern/kernel.asm	/^f0103650:	50                   	push   %eax$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	e8 c8 ff ff ff       	call   f0103621 <vcprintf>$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	c9                   	leave  $/;"	l
f010365a	obj/kern/kernel.asm	/^f010365a:	c3                   	ret    $/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b <trap_init_percpu>:$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	55                   	push   %ebp$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	89 e5                	mov    %esp,%ebp$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	56                   	push   %esi$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	53                   	push   %ebx$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	e8 46 2a 00 00       	call   f01060ab <cpunum>$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	0f b6 98 40 f0 23 f0 	movzbl -0xfdc0fc0(%eax),%ebx$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	e8 37 2a 00 00       	call   f01060ab <cpunum>$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	8d 8a 4c f0 23 f0    	lea    -0xfdc0fb4(%edx),%ecx$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	0f b6 c3             	movzbl %bl,%eax$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	69 f0 00 80 ff 0f    	imul   $0xfff8000,%eax,%esi$/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	8d b6 00 00 00 f0    	lea    -0x10000000(%esi),%esi$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	89 b2 50 f0 23 f0    	mov    %esi,-0xfdc0fb0(%edx)$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	66 c7 82 54 f0 23 f0 	movw   $0x10,-0xfdc0fac(%edx)$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	10 00 $/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	83 c0 05             	add    $0x5,%eax$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	66 c7 04 c5 80 33 12 	movw   $0x67,-0xfedcc80(,%eax,8)$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	f0 67 00 $/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	66 89 0c c5 82 33 12 	mov    %cx,-0xfedcc7e(,%eax,8)$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	f0 $/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	89 ca                	mov    %ecx,%edx$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	88 14 c5 84 33 12 f0 	mov    %dl,-0xfedcc7c(,%eax,8)$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	c6 04 c5 86 33 12 f0 	movb   $0x40,-0xfedcc7a(,%eax,8)$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	40 $/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	c1 e9 18             	shr    $0x18,%ecx$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	88 0c c5 87 33 12 f0 	mov    %cl,-0xfedcc79(,%eax,8)$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	c6 04 c5 85 33 12 f0 	movb   $0x89,-0xfedcc7b(,%eax,8)$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	89 $/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	8d 1c dd 28 00 00 00 	lea    0x28(,%ebx,8),%ebx$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	0f 00 db             	ltr    %bx$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	b8 ea 33 12 f0       	mov    $0xf01233ea,%eax$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	0f 01 18             	lidtl  (%eax)$/;"	l
f01036eb	obj/kern/kernel.asm	/^f01036eb:	5b                   	pop    %ebx$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	5e                   	pop    %esi$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	5d                   	pop    %ebp$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	c3                   	ret    $/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef <trap_init>:$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	55                   	push   %ebp$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	b8 c2 41 10 f0       	mov    $0xf01041c2,%eax$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	66 a3 80 e2 22 f0    	mov    %ax,0xf022e280$/;"	l
f0103700	obj/kern/kernel.asm	/^f0103700:	66 c7 05 82 e2 22 f0 	movw   $0x8,0xf022e282$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	08 00 $/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	c6 05 84 e2 22 f0 00 	movb   $0x0,0xf022e284$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	c6 05 85 e2 22 f0 ee 	movb   $0xee,0xf022e285$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	66 a3 86 e2 22 f0    	mov    %ax,0xf022e286$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	b8 cc 41 10 f0       	mov    $0xf01041cc,%eax$/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	66 a3 88 e2 22 f0    	mov    %ax,0xf022e288$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	66 c7 05 8a e2 22 f0 	movw   $0x8,0xf022e28a$/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	08 00 $/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	c6 05 8c e2 22 f0 00 	movb   $0x0,0xf022e28c$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	c6 05 8d e2 22 f0 ee 	movb   $0xee,0xf022e28d$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	66 a3 8e e2 22 f0    	mov    %ax,0xf022e28e$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	b8 d6 41 10 f0       	mov    $0xf01041d6,%eax$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	66 a3 90 e2 22 f0    	mov    %ax,0xf022e290$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	66 c7 05 92 e2 22 f0 	movw   $0x8,0xf022e292$/;"	l
f010375d	obj/kern/kernel.asm	/^f010375d:	08 00 $/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	c6 05 94 e2 22 f0 00 	movb   $0x0,0xf022e294$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	c6 05 95 e2 22 f0 8e 	movb   $0x8e,0xf022e295$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	66 a3 96 e2 22 f0    	mov    %ax,0xf022e296$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	b8 e0 41 10 f0       	mov    $0xf01041e0,%eax$/;"	l
f010377b	obj/kern/kernel.asm	/^f010377b:	66 a3 98 e2 22 f0    	mov    %ax,0xf022e298$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	66 c7 05 9a e2 22 f0 	movw   $0x8,0xf022e29a$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	08 00 $/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	c6 05 9c e2 22 f0 00 	movb   $0x0,0xf022e29c$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	c6 05 9d e2 22 f0 ee 	movb   $0xee,0xf022e29d$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	66 a3 9e e2 22 f0    	mov    %ax,0xf022e29e$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	b8 ea 41 10 f0       	mov    $0xf01041ea,%eax$/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	66 a3 a0 e2 22 f0    	mov    %ax,0xf022e2a0$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	66 c7 05 a2 e2 22 f0 	movw   $0x8,0xf022e2a2$/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	08 00 $/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	c6 05 a4 e2 22 f0 00 	movb   $0x0,0xf022e2a4$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	c6 05 a5 e2 22 f0 ee 	movb   $0xee,0xf022e2a5$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	66 a3 a6 e2 22 f0    	mov    %ax,0xf022e2a6$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	b8 f4 41 10 f0       	mov    $0xf01041f4,%eax$/;"	l
f01037d1	obj/kern/kernel.asm	/^f01037d1:	66 a3 a8 e2 22 f0    	mov    %ax,0xf022e2a8$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	66 c7 05 aa e2 22 f0 	movw   $0x8,0xf022e2aa$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	08 00 $/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	c6 05 ac e2 22 f0 00 	movb   $0x0,0xf022e2ac$/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	c6 05 ad e2 22 f0 8e 	movb   $0x8e,0xf022e2ad$/;"	l
f01037ee	obj/kern/kernel.asm	/^f01037ee:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	66 a3 ae e2 22 f0    	mov    %ax,0xf022e2ae$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	b8 fe 41 10 f0       	mov    $0xf01041fe,%eax$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	66 a3 b0 e2 22 f0    	mov    %ax,0xf022e2b0$/;"	l
f0103802	obj/kern/kernel.asm	/^f0103802:	66 c7 05 b2 e2 22 f0 	movw   $0x8,0xf022e2b2$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	08 00 $/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	c6 05 b4 e2 22 f0 00 	movb   $0x0,0xf022e2b4$/;"	l
f0103812	obj/kern/kernel.asm	/^f0103812:	c6 05 b5 e2 22 f0 8e 	movb   $0x8e,0xf022e2b5$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	66 a3 b6 e2 22 f0    	mov    %ax,0xf022e2b6$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	b8 08 42 10 f0       	mov    $0xf0104208,%eax$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	66 a3 b8 e2 22 f0    	mov    %ax,0xf022e2b8$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	66 c7 05 ba e2 22 f0 	movw   $0x8,0xf022e2ba$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	08 00 $/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	c6 05 bc e2 22 f0 00 	movb   $0x0,0xf022e2bc$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	c6 05 bd e2 22 f0 ee 	movb   $0xee,0xf022e2bd$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	66 a3 be e2 22 f0    	mov    %ax,0xf022e2be$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	b8 12 42 10 f0       	mov    $0xf0104212,%eax$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	66 a3 c0 e2 22 f0    	mov    %ax,0xf022e2c0$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	66 c7 05 c2 e2 22 f0 	movw   $0x8,0xf022e2c2$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	08 00 $/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	c6 05 c4 e2 22 f0 00 	movb   $0x0,0xf022e2c4$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	c6 05 c5 e2 22 f0 8e 	movb   $0x8e,0xf022e2c5$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	66 a3 c6 e2 22 f0    	mov    %ax,0xf022e2c6$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	b8 1a 42 10 f0       	mov    $0xf010421a,%eax$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	66 a3 d0 e2 22 f0    	mov    %ax,0xf022e2d0$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	66 c7 05 d2 e2 22 f0 	movw   $0x8,0xf022e2d2$/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a:	08 00 $/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	c6 05 d4 e2 22 f0 00 	movb   $0x0,0xf022e2d4$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	c6 05 d5 e2 22 f0 8e 	movb   $0x8e,0xf022e2d5$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	66 a3 d6 e2 22 f0    	mov    %ax,0xf022e2d6$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	b8 22 42 10 f0       	mov    $0xf0104222,%eax$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	66 a3 d8 e2 22 f0    	mov    %ax,0xf022e2d8$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	66 c7 05 da e2 22 f0 	movw   $0x8,0xf022e2da$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	08 00 $/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	c6 05 dc e2 22 f0 00 	movb   $0x0,0xf022e2dc$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	c6 05 dd e2 22 f0 ee 	movb   $0xee,0xf022e2dd$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	66 a3 de e2 22 f0    	mov    %ax,0xf022e2de$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	b8 2a 42 10 f0       	mov    $0xf010422a,%eax$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	66 a3 e0 e2 22 f0    	mov    %ax,0xf022e2e0$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	66 c7 05 e2 e2 22 f0 	movw   $0x8,0xf022e2e2$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	08 00 $/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	c6 05 e4 e2 22 f0 00 	movb   $0x0,0xf022e2e4$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	c6 05 e5 e2 22 f0 8e 	movb   $0x8e,0xf022e2e5$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	66 a3 e6 e2 22 f0    	mov    %ax,0xf022e2e6$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	b8 32 42 10 f0       	mov    $0xf0104232,%eax$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	66 a3 e8 e2 22 f0    	mov    %ax,0xf022e2e8$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	66 c7 05 ea e2 22 f0 	movw   $0x8,0xf022e2ea$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	08 00 $/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	c6 05 ec e2 22 f0 00 	movb   $0x0,0xf022e2ec$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	c6 05 ed e2 22 f0 8e 	movb   $0x8e,0xf022e2ed$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	66 a3 ee e2 22 f0    	mov    %ax,0xf022e2ee$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	b8 3a 42 10 f0       	mov    $0xf010423a,%eax$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	66 a3 f0 e2 22 f0    	mov    %ax,0xf022e2f0$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	66 c7 05 f2 e2 22 f0 	movw   $0x8,0xf022e2f2$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	08 00 $/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	c6 05 f4 e2 22 f0 00 	movb   $0x0,0xf022e2f4$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	c6 05 f5 e2 22 f0 8e 	movb   $0x8e,0xf022e2f5$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	66 a3 f6 e2 22 f0    	mov    %ax,0xf022e2f6$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	b8 42 42 10 f0       	mov    $0xf0104242,%eax$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	66 a3 00 e3 22 f0    	mov    %ax,0xf022e300$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	66 c7 05 02 e3 22 f0 	movw   $0x8,0xf022e302$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	08 00 $/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	c6 05 04 e3 22 f0 00 	movb   $0x0,0xf022e304$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	c6 05 05 e3 22 f0 8e 	movb   $0x8e,0xf022e305$/;"	l
f0103971	obj/kern/kernel.asm	/^f0103971:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	66 a3 06 e3 22 f0    	mov    %ax,0xf022e306$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	b8 4c 42 10 f0       	mov    $0xf010424c,%eax$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	66 a3 08 e3 22 f0    	mov    %ax,0xf022e308$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	66 c7 05 0a e3 22 f0 	movw   $0x8,0xf022e30a$/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	08 00 $/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	c6 05 0c e3 22 f0 00 	movb   $0x0,0xf022e30c$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	c6 05 0d e3 22 f0 8e 	movb   $0x8e,0xf022e30d$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	66 a3 0e e3 22 f0    	mov    %ax,0xf022e30e$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	b8 50 42 10 f0       	mov    $0xf0104250,%eax$/;"	l
f01039aa	obj/kern/kernel.asm	/^f01039aa:	66 a3 10 e3 22 f0    	mov    %ax,0xf022e310$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	66 c7 05 12 e3 22 f0 	movw   $0x8,0xf022e312$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	08 00 $/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	c6 05 14 e3 22 f0 00 	movb   $0x0,0xf022e314$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	c6 05 15 e3 22 f0 8e 	movb   $0x8e,0xf022e315$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	66 a3 16 e3 22 f0    	mov    %ax,0xf022e316$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	b8 56 42 10 f0       	mov    $0xf0104256,%eax$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	66 a3 18 e3 22 f0    	mov    %ax,0xf022e318$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	66 c7 05 1a e3 22 f0 	movw   $0x8,0xf022e31a$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	08 00 $/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	c6 05 1c e3 22 f0 00 	movb   $0x0,0xf022e31c$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	c6 05 1d e3 22 f0 8e 	movb   $0x8e,0xf022e31d$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	66 a3 1e e3 22 f0    	mov    %ax,0xf022e31e$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	b8 5c 42 10 f0       	mov    $0xf010425c,%eax$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	66 a3 00 e4 22 f0    	mov    %ax,0xf022e400$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	66 c7 05 02 e4 22 f0 	movw   $0x8,0xf022e402$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	08 00 $/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	c6 05 04 e4 22 f0 00 	movb   $0x0,0xf022e404$/;"	l
f0103a16	obj/kern/kernel.asm	/^f0103a16:	c6 05 05 e4 22 f0 ee 	movb   $0xee,0xf022e405$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	66 a3 06 e4 22 f0    	mov    %ax,0xf022e406$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	b8 62 42 10 f0       	mov    $0xf0104262,%eax$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	66 a3 20 f2 22 f0    	mov    %ax,0xf022f220$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	66 c7 05 22 f2 22 f0 	movw   $0x8,0xf022f222$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	08 00 $/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	c6 05 24 f2 22 f0 00 	movb   $0x0,0xf022f224$/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	c6 05 25 f2 22 f0 ee 	movb   $0xee,0xf022f225$/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	66 a3 26 f2 22 f0    	mov    %ax,0xf022f226$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	b8 6c 42 10 f0       	mov    $0xf010426c,%eax$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	66 a3 80 e3 22 f0    	mov    %ax,0xf022e380$/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	66 c7 05 82 e3 22 f0 	movw   $0x8,0xf022e382$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	08 00 $/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	c6 05 84 e3 22 f0 00 	movb   $0x0,0xf022e384$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	c6 05 85 e3 22 f0 ee 	movb   $0xee,0xf022e385$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a76	obj/kern/kernel.asm	/^f0103a76:	66 a3 86 e3 22 f0    	mov    %ax,0xf022e386$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	b8 72 42 10 f0       	mov    $0xf0104272,%eax$/;"	l
f0103a81	obj/kern/kernel.asm	/^f0103a81:	66 a3 88 e3 22 f0    	mov    %ax,0xf022e388$/;"	l
f0103a87	obj/kern/kernel.asm	/^f0103a87:	66 c7 05 8a e3 22 f0 	movw   $0x8,0xf022e38a$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	08 00 $/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	c6 05 8c e3 22 f0 00 	movb   $0x0,0xf022e38c$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	c6 05 8d e3 22 f0 8e 	movb   $0x8e,0xf022e38d$/;"	l
f0103a9e	obj/kern/kernel.asm	/^f0103a9e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103aa1	obj/kern/kernel.asm	/^f0103aa1:	66 a3 8e e3 22 f0    	mov    %ax,0xf022e38e$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	b8 78 42 10 f0       	mov    $0xf0104278,%eax$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	66 a3 90 e3 22 f0    	mov    %ax,0xf022e390$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	66 c7 05 92 e3 22 f0 	movw   $0x8,0xf022e392$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	08 00 $/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	c6 05 94 e3 22 f0 00 	movb   $0x0,0xf022e394$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	c6 05 95 e3 22 f0 8e 	movb   $0x8e,0xf022e395$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103acc	obj/kern/kernel.asm	/^f0103acc:	66 a3 96 e3 22 f0    	mov    %ax,0xf022e396$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	b8 7e 42 10 f0       	mov    $0xf010427e,%eax$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	66 a3 98 e3 22 f0    	mov    %ax,0xf022e398$/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	66 c7 05 9a e3 22 f0 	movw   $0x8,0xf022e39a$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	08 00 $/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	c6 05 9c e3 22 f0 00 	movb   $0x0,0xf022e39c$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	c6 05 9d e3 22 f0 8e 	movb   $0x8e,0xf022e39d$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	66 a3 9e e3 22 f0    	mov    %ax,0xf022e39e$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	b8 84 42 10 f0       	mov    $0xf0104284,%eax$/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	66 a3 a0 e3 22 f0    	mov    %ax,0xf022e3a0$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	66 c7 05 a2 e3 22 f0 	movw   $0x8,0xf022e3a2$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	08 00 $/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	c6 05 a4 e3 22 f0 00 	movb   $0x0,0xf022e3a4$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	c6 05 a5 e3 22 f0 8e 	movb   $0x8e,0xf022e3a5$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	66 a3 a6 e3 22 f0    	mov    %ax,0xf022e3a6$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	b8 8a 42 10 f0       	mov    $0xf010428a,%eax$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	66 a3 a8 e3 22 f0    	mov    %ax,0xf022e3a8$/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	66 c7 05 aa e3 22 f0 	movw   $0x8,0xf022e3aa$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	08 00 $/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	c6 05 ac e3 22 f0 00 	movb   $0x0,0xf022e3ac$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	c6 05 ad e3 22 f0 8e 	movb   $0x8e,0xf022e3ad$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	66 a3 ae e3 22 f0    	mov    %ax,0xf022e3ae$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	b8 90 42 10 f0       	mov    $0xf0104290,%eax$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	66 a3 b0 e3 22 f0    	mov    %ax,0xf022e3b0$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	66 c7 05 b2 e3 22 f0 	movw   $0x8,0xf022e3b2$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	08 00 $/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	c6 05 b4 e3 22 f0 00 	movb   $0x0,0xf022e3b4$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	c6 05 b5 e3 22 f0 8e 	movb   $0x8e,0xf022e3b5$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	66 a3 b6 e3 22 f0    	mov    %ax,0xf022e3b6$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	b8 96 42 10 f0       	mov    $0xf0104296,%eax$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	66 a3 b8 e3 22 f0    	mov    %ax,0xf022e3b8$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	66 c7 05 ba e3 22 f0 	movw   $0x8,0xf022e3ba$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	08 00 $/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	c6 05 bc e3 22 f0 00 	movb   $0x0,0xf022e3bc$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	c6 05 bd e3 22 f0 8e 	movb   $0x8e,0xf022e3bd$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	66 a3 be e3 22 f0    	mov    %ax,0xf022e3be$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	b8 9c 42 10 f0       	mov    $0xf010429c,%eax$/;"	l
f0103bae	obj/kern/kernel.asm	/^f0103bae:	66 a3 c0 e3 22 f0    	mov    %ax,0xf022e3c0$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	66 c7 05 c2 e3 22 f0 	movw   $0x8,0xf022e3c2$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	08 00 $/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	c6 05 c4 e3 22 f0 00 	movb   $0x0,0xf022e3c4$/;"	l
f0103bc4	obj/kern/kernel.asm	/^f0103bc4:	c6 05 c5 e3 22 f0 8e 	movb   $0x8e,0xf022e3c5$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bce	obj/kern/kernel.asm	/^f0103bce:	66 a3 c6 e3 22 f0    	mov    %ax,0xf022e3c6$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	b8 a2 42 10 f0       	mov    $0xf01042a2,%eax$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	66 a3 c8 e3 22 f0    	mov    %ax,0xf022e3c8$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	66 c7 05 ca e3 22 f0 	movw   $0x8,0xf022e3ca$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	08 00 $/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	c6 05 cc e3 22 f0 00 	movb   $0x0,0xf022e3cc$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	c6 05 cd e3 22 f0 8e 	movb   $0x8e,0xf022e3cd$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	66 a3 ce e3 22 f0    	mov    %ax,0xf022e3ce$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	b8 a8 42 10 f0       	mov    $0xf01042a8,%eax$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	66 a3 d0 e3 22 f0    	mov    %ax,0xf022e3d0$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	66 c7 05 d2 e3 22 f0 	movw   $0x8,0xf022e3d2$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	08 00 $/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	c6 05 d4 e3 22 f0 00 	movb   $0x0,0xf022e3d4$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	c6 05 d5 e3 22 f0 8e 	movb   $0x8e,0xf022e3d5$/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c24	obj/kern/kernel.asm	/^f0103c24:	66 a3 d6 e3 22 f0    	mov    %ax,0xf022e3d6$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	b8 ae 42 10 f0       	mov    $0xf01042ae,%eax$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	66 a3 d8 e3 22 f0    	mov    %ax,0xf022e3d8$/;"	l
f0103c35	obj/kern/kernel.asm	/^f0103c35:	66 c7 05 da e3 22 f0 	movw   $0x8,0xf022e3da$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	08 00 $/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	c6 05 dc e3 22 f0 00 	movb   $0x0,0xf022e3dc$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	c6 05 dd e3 22 f0 8e 	movb   $0x8e,0xf022e3dd$/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	66 a3 de e3 22 f0    	mov    %ax,0xf022e3de$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	b8 b4 42 10 f0       	mov    $0xf01042b4,%eax$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	66 a3 e0 e3 22 f0    	mov    %ax,0xf022e3e0$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	66 c7 05 e2 e3 22 f0 	movw   $0x8,0xf022e3e2$/;"	l
f0103c67	obj/kern/kernel.asm	/^f0103c67:	08 00 $/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	c6 05 e4 e3 22 f0 00 	movb   $0x0,0xf022e3e4$/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70:	c6 05 e5 e3 22 f0 8e 	movb   $0x8e,0xf022e3e5$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103c7a	obj/kern/kernel.asm	/^f0103c7a:	66 a3 e6 e3 22 f0    	mov    %ax,0xf022e3e6$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	b8 ba 42 10 f0       	mov    $0xf01042ba,%eax$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	66 a3 e8 e3 22 f0    	mov    %ax,0xf022e3e8$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	66 c7 05 ea e3 22 f0 	movw   $0x8,0xf022e3ea$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	08 00 $/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	c6 05 ec e3 22 f0 00 	movb   $0x0,0xf022e3ec$/;"	l
f0103c9b	obj/kern/kernel.asm	/^f0103c9b:	c6 05 ed e3 22 f0 8e 	movb   $0x8e,0xf022e3ed$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	66 a3 ee e3 22 f0    	mov    %ax,0xf022e3ee$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	b8 c0 42 10 f0       	mov    $0xf01042c0,%eax$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	66 a3 f0 e3 22 f0    	mov    %ax,0xf022e3f0$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	66 c7 05 f2 e3 22 f0 	movw   $0x8,0xf022e3f2$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	08 00 $/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	c6 05 f4 e3 22 f0 00 	movb   $0x0,0xf022e3f4$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	c6 05 f5 e3 22 f0 8e 	movb   $0x8e,0xf022e3f5$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	66 a3 f6 e3 22 f0    	mov    %ax,0xf022e3f6$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	b8 c6 42 10 f0       	mov    $0xf01042c6,%eax$/;"	l
f0103cdb	obj/kern/kernel.asm	/^f0103cdb:	66 a3 f8 e3 22 f0    	mov    %ax,0xf022e3f8$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	66 c7 05 fa e3 22 f0 	movw   $0x8,0xf022e3fa$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	08 00 $/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	c6 05 fc e3 22 f0 00 	movb   $0x0,0xf022e3fc$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	c6 05 fd e3 22 f0 8e 	movb   $0x8e,0xf022e3fd$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103cfb	obj/kern/kernel.asm	/^f0103cfb:	66 a3 fe e3 22 f0    	mov    %ax,0xf022e3fe$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	e8 55 f9 ff ff       	call   f010365b <trap_init_percpu>$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	c9                   	leave  $/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	c3                   	ret    $/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08 <print_regs>:$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	55                   	push   %ebp$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	53                   	push   %ebx$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	ff 33                	pushl  (%ebx)$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	68 43 7a 10 f0       	push   $0xf0107a43$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	e8 29 f9 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0103d24	obj/kern/kernel.asm	/^f0103d24:	68 52 7a 10 f0       	push   $0xf0107a52$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	e8 19 f9 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	68 61 7a 10 f0       	push   $0xf0107a61$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	e8 09 f9 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	68 70 7a 10 f0       	push   $0xf0107a70$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	e8 f9 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0103d54	obj/kern/kernel.asm	/^f0103d54:	68 7f 7a 10 f0       	push   $0xf0107a7f$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	e8 e9 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	68 8e 7a 10 f0       	push   $0xf0107a8e$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	e8 d9 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	68 9d 7a 10 f0       	push   $0xf0107a9d$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	e8 c9 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	68 ac 7a 10 f0       	push   $0xf0107aac$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	e8 b9 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	c9                   	leave  $/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	c3                   	ret    $/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96 <print_trapframe>:$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	55                   	push   %ebp$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	56                   	push   %esi$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	53                   	push   %ebx$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	e8 08 23 00 00       	call   f01060ab <cpunum>$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	50                   	push   %eax$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	53                   	push   %ebx$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	68 10 7b 10 f0       	push   $0xf0107b10$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	e8 95 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	e8 4e ff ff ff       	call   f0103d08 <print_regs>$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	50                   	push   %eax$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	68 2e 7b 10 f0       	push   $0xf0107b2e$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	e8 7b f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	50                   	push   %eax$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	68 41 7b 10 f0       	push   $0xf0107b41$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	e8 69 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	77 09                	ja     f0103df2 <print_trapframe+0x5c>$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	8b 14 85 80 7e 10 f0 	mov    -0xfef8180(,%eax,4),%edx$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	eb 1e                	jmp    f0103e10 <print_trapframe+0x7a>$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	74 14                	je     f0103e0b <print_trapframe+0x75>$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	8d 48 e0             	lea    -0x20(%eax),%ecx$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	ba c7 7a 10 f0       	mov    $0xf0107ac7,%edx$/;"	l
f0103dff	obj/kern/kernel.asm	/^f0103dff:	83 f9 0f             	cmp    $0xf,%ecx$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	76 0c                	jbe    f0103e10 <print_trapframe+0x7a>$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	ba da 7a 10 f0       	mov    $0xf0107ada,%edx$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	eb 05                	jmp    f0103e10 <print_trapframe+0x7a>$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	ba bb 7a 10 f0       	mov    $0xf0107abb,%edx$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	52                   	push   %edx$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	50                   	push   %eax$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	68 54 7b 10 f0       	push   $0xf0107b54$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	e8 28 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	3b 1d 80 ea 22 f0    	cmp    0xf022ea80,%ebx$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	75 1a                	jne    f0103e44 <print_trapframe+0xae>$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	75 14                	jne    f0103e44 <print_trapframe+0xae>$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	50                   	push   %eax$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	68 66 7b 10 f0       	push   $0xf0107b66$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	e8 06 f8 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0103e4a	obj/kern/kernel.asm	/^f0103e4a:	68 75 7b 10 f0       	push   $0xf0107b75$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	e8 f3 f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	75 3f                	jne    f0103e9c <print_trapframe+0x106>$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	be e9 7a 10 f0       	mov    $0xf0107ae9,%esi$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	a8 01                	test   $0x1,%al$/;"	l
f0103e67	obj/kern/kernel.asm	/^f0103e67:	75 05                	jne    f0103e6e <print_trapframe+0xd8>$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	be f4 7a 10 f0       	mov    $0xf0107af4,%esi$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	b9 00 7b 10 f0       	mov    $0xf0107b00,%ecx$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	a8 02                	test   $0x2,%al$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	75 05                	jne    f0103e7c <print_trapframe+0xe6>$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	b9 06 7b 10 f0       	mov    $0xf0107b06,%ecx$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	ba 0b 7b 10 f0       	mov    $0xf0107b0b,%edx$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	a8 04                	test   $0x4,%al$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	75 05                	jne    f0103e8a <print_trapframe+0xf4>$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	ba 40 7c 10 f0       	mov    $0xf0107c40,%edx$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	56                   	push   %esi$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	51                   	push   %ecx$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	52                   	push   %edx$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	68 83 7b 10 f0       	push   $0xf0107b83$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	e8 b0 f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	eb 10                	jmp    f0103eac <print_trapframe+0x116>$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	68 d1 6f 10 f0       	push   $0xf0106fd1$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	e8 9e f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	68 92 7b 10 f0       	push   $0xf0107b92$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	e8 8b f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	50                   	push   %eax$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	68 a1 7b 10 f0       	push   $0xf0107ba1$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	e8 79 f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	68 b4 7b 10 f0       	push   $0xf0107bb4$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	e8 69 f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	74 25                	je     f0103f0c <print_trapframe+0x176>$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	68 c3 7b 10 f0       	push   $0xf0107bc3$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	e8 50 f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	50                   	push   %eax$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	68 d2 7b 10 f0       	push   $0xf0107bd2$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	e8 3e f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	5b                   	pop    %ebx$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	5e                   	pop    %esi$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	5d                   	pop    %ebp$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	c3                   	ret    $/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13 <page_fault_handler>:$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	55                   	push   %ebp$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f16	obj/kern/kernel.asm	/^f0103f16:	57                   	push   %edi$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	56                   	push   %esi$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	53                   	push   %ebx$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	e8 81 21 00 00       	call   f01060ab <cpunum>$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	57                   	push   %edi$/;"	l
f0103f2b	obj/kern/kernel.asm	/^f0103f2b:	56                   	push   %esi$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	68 8c 7d 10 f0       	push   $0xf0107d8c$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	e8 05 f7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	e8 4c fe ff ff       	call   f0103d96 <print_trapframe>$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	e8 5c 21 00 00       	call   f01060ab <cpunum>$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	e8 15 f4 ff ff       	call   f0103375 <env_destroy>$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	5b                   	pop    %ebx$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	5e                   	pop    %esi$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	5f                   	pop    %edi$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	5d                   	pop    %ebp$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	c3                   	ret    $/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b <trap>:$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	55                   	push   %ebp$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	57                   	push   %edi$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	56                   	push   %esi$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	fc                   	cld    $/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	83 3d c0 ee 22 f0 00 	cmpl   $0x0,0xf022eec0$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	74 01                	je     f0103f7e <trap+0x13>$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	f4                   	hlt    $/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	e8 28 21 00 00       	call   f01060ab <cpunum>$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	81 c2 40 f0 23 f0    	add    $0xf023f040,%edx$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	75 10                	jne    f0103faa <trap+0x3f>$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	68 00 34 12 f0       	push   $0xf0123400$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	e8 6f 23 00 00       	call   f0106316 <spin_lock>$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	9c                   	pushf  $/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	58                   	pop    %eax$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	74 19                	je     f0103fca <trap+0x5f>$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	68 e5 7b 10 f0       	push   $0xf0107be5$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	68 1c 01 00 00       	push   $0x11c$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	68 fe 7b 10 f0       	push   $0xf0107bfe$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	e8 76 c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	0f 85 a0 00 00 00    	jne    f010407b <trap+0x110>$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	68 00 34 12 f0       	push   $0xf0123400$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	e8 2e 23 00 00       	call   f0106316 <spin_lock>$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	e8 be 20 00 00       	call   f01060ab <cpunum>$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	83 b8 48 f0 23 f0 00 	cmpl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	75 19                	jne    f0104015 <trap+0xaa>$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	68 0a 7c 10 f0       	push   $0xf0107c0a$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	68 24 01 00 00       	push   $0x124$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	68 fe 7b 10 f0       	push   $0xf0107bfe$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	e8 2b c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	e8 91 20 00 00       	call   f01060ab <cpunum>$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	75 2d                	jne    f0104056 <trap+0xeb>$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	e8 7d 20 00 00       	call   f01060ab <cpunum>$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f010403a	obj/kern/kernel.asm	/^f010403a:	e8 5b f1 ff ff       	call   f010319a <env_free>$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	e8 67 20 00 00       	call   f01060ab <cpunum>$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	c7 80 48 f0 23 f0 00 	movl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	00 00 00 $/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	e8 64 03 00 00       	call   f01043ba <sched_yield>$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	e8 50 20 00 00       	call   f01060ab <cpunum>$/;"	l
f010405b	obj/kern/kernel.asm	/^f010405b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	89 c7                	mov    %eax,%edi$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	e8 39 20 00 00       	call   f01060ab <cpunum>$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	8b b0 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%esi$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	89 35 80 ea 22 f0    	mov    %esi,0xf022ea80$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	75 1d                	jne    f01040a6 <trap+0x13b>$/;"	l
f0104089	obj/kern/kernel.asm	/^f0104089:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	68 11 7c 10 f0       	push   $0xf0107c11$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	e8 b1 f5 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	e8 f8 fc ff ff       	call   f0103d96 <print_trapframe>$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	e9 db 00 00 00       	jmp    f0104181 <trap+0x216>$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01040a9	obj/kern/kernel.asm	/^f01040a9:	74 1c                	je     f01040c7 <trap+0x15c>$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	77 07                	ja     f01040b7 <trap+0x14c>$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	74 23                	je     f01040d8 <trap+0x16d>$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	eb 50                	jmp    f0104107 <trap+0x19c>$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	0f 84 c1 00 00 00    	je     f0104181 <trap+0x216>$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	74 21                	je     f01040e6 <trap+0x17b>$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	eb 40                	jmp    f0104107 <trap+0x19c>$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	56                   	push   %esi$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	e8 43 fe ff ff       	call   f0103f13 <page_fault_handler>$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	e9 a9 00 00 00       	jmp    f0104181 <trap+0x216>$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	56                   	push   %esi$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	e8 65 c7 ff ff       	call   f0100846 <monitor>$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	eb f2                	jmp    f01040d8 <trap+0x16d>$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	ff 36                	pushl  (%esi)$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	e8 b8 03 00 00       	call   f01044b7 <syscall>$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	eb 7a                	jmp    f0104181 <trap+0x216>$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	68 fb 00 00 00       	push   $0xfb$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	68 40 7e 10 f0       	push   $0xf0107e40$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	68 fe 7b 10 f0       	push   $0xf0107bfe$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	68 b0 7d 10 f0       	push   $0xf0107db0$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	e8 27 f5 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	c7 04 24 fc 00 00 00 	movl   $0xfc,(%esp)$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	68 40 7e 10 f0       	push   $0xf0107e40$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	68 fe 7b 10 f0       	push   $0xf0107bfe$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	ff 76 28             	pushl  0x28(%esi)$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	68 e4 7d 10 f0       	push   $0xf0107de4$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	e8 09 f5 ff ff       	call   f0103647 <cprintf>$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	56                   	push   %esi$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	e8 4f fc ff ff       	call   f0103d96 <print_trapframe>$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	83 c4 10             	add    $0x10,%esp$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	75 17                	jne    f0104168 <trap+0x1fd>$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	68 2e 7c 10 f0       	push   $0xf0107c2e$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	68 01 01 00 00       	push   $0x101$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	68 fe 7b 10 f0       	push   $0xf0107bfe$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	e8 d8 be ff ff       	call   f0100040 <_panic>$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	e8 3e 1f 00 00       	call   f01060ab <cpunum>$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	e8 f7 f1 ff ff       	call   f0103375 <env_destroy>$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	e8 25 1f 00 00       	call   f01060ab <cpunum>$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	83 b8 48 f0 23 f0 00 	cmpl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	74 2a                	je     f01041bc <trap+0x251>$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	e8 14 1f 00 00       	call   f01060ab <cpunum>$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f01041a0	obj/kern/kernel.asm	/^f01041a0:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	75 16                	jne    f01041bc <trap+0x251>$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	e8 00 1f 00 00       	call   f01060ab <cpunum>$/;"	l
f01041ab	obj/kern/kernel.asm	/^f01041ab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041b1	obj/kern/kernel.asm	/^f01041b1:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	e8 67 f2 ff ff       	call   f0103423 <env_run>$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	e8 f9 01 00 00       	call   f01043ba <sched_yield>$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	90                   	nop$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2 <vec0>:$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	6a 00                	push   $0x0$/;"	l
f01041c4	obj/kern/kernel.asm	/^f01041c4:	6a 00                	push   $0x0$/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	e9 01 01 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	90                   	nop$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc <vec1>:$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc:	6a 00                	push   $0x0$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	6a 01                	push   $0x1$/;"	l
f01041d0	obj/kern/kernel.asm	/^f01041d0:	e9 f7 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	90                   	nop$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6 <vec2>:$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	6a 00                	push   $0x0$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	6a 02                	push   $0x2$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	e9 ed 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	90                   	nop$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0 <vec3>:$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	6a 00                	push   $0x0$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	6a 03                	push   $0x3$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	e9 e3 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	90                   	nop$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea <vec4>:$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	6a 00                	push   $0x0$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	6a 04                	push   $0x4$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	e9 d9 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	90                   	nop$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4 <vec5>:$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	6a 00                	push   $0x0$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	6a 05                	push   $0x5$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	e9 cf 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	90                   	nop$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe <vec6>:$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	6a 00                	push   $0x0$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	6a 06                	push   $0x6$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	e9 c5 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	90                   	nop$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208 <vec7>:$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	6a 00                	push   $0x0$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	6a 07                	push   $0x7$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	e9 bb 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	90                   	nop$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212 <vec8>:$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	6a 08                	push   $0x8$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	e9 b3 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	90                   	nop$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a <vec10>:$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	6a 0a                	push   $0xa$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	e9 ab 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104221	obj/kern/kernel.asm	/^f0104221:	90                   	nop$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222 <vec11>:$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	6a 0b                	push   $0xb$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	e9 a3 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	90                   	nop$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a <vec12>:$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	6a 0c                	push   $0xc$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	e9 9b 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	90                   	nop$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232 <vec13>:$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	6a 0d                	push   $0xd$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	e9 93 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	90                   	nop$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a <vec14>:$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	6a 0e                	push   $0xe$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	e9 8b 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	90                   	nop$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242 <vec16>:$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	6a 00                	push   $0x0$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	6a 10                	push   $0x10$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	e9 81 00 00 00       	jmp    f01042cc <_alltraps>$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	90                   	nop$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c <vec17>:$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	6a 11                	push   $0x11$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	eb 7c                	jmp    f01042cc <_alltraps>$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250 <vec18>:$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	6a 00                	push   $0x0$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	6a 12                	push   $0x12$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	eb 76                	jmp    f01042cc <_alltraps>$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256 <vec19>:$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	6a 00                	push   $0x0$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	6a 13                	push   $0x13$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	eb 70                	jmp    f01042cc <_alltraps>$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c <vec48>:$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	6a 00                	push   $0x0$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	6a 30                	push   $0x30$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	eb 6a                	jmp    f01042cc <_alltraps>$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262 <vecall>:$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	6a 00                	push   $0x0$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	68 f4 01 00 00       	push   $0x1f4$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	eb 61                	jmp    f01042cc <_alltraps>$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	90                   	nop$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c <irq_0>:$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	6a 00                	push   $0x0$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	6a 20                	push   $0x20$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	eb 5a                	jmp    f01042cc <_alltraps>$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272 <irq_1>:$/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	6a 00                	push   $0x0$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	6a 21                	push   $0x21$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	eb 54                	jmp    f01042cc <_alltraps>$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278 <irq_2>:$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	6a 00                	push   $0x0$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	6a 22                	push   $0x22$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	eb 4e                	jmp    f01042cc <_alltraps>$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e <irq_3>:$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	6a 00                	push   $0x0$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	6a 23                	push   $0x23$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	eb 48                	jmp    f01042cc <_alltraps>$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284 <irq_4>:$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	6a 00                	push   $0x0$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	6a 24                	push   $0x24$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	eb 42                	jmp    f01042cc <_alltraps>$/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a <irq_5>:$/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a:	6a 00                	push   $0x0$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	6a 25                	push   $0x25$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	eb 3c                	jmp    f01042cc <_alltraps>$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290 <irq_6>:$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	6a 00                	push   $0x0$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	6a 26                	push   $0x26$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	eb 36                	jmp    f01042cc <_alltraps>$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296 <irq_7>:$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	6a 00                	push   $0x0$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	6a 27                	push   $0x27$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	eb 30                	jmp    f01042cc <_alltraps>$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c <irq_8>:$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	6a 00                	push   $0x0$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	6a 28                	push   $0x28$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	eb 2a                	jmp    f01042cc <_alltraps>$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2 <irq_9>:$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	6a 00                	push   $0x0$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	6a 29                	push   $0x29$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	eb 24                	jmp    f01042cc <_alltraps>$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8 <irq_10>:$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	6a 00                	push   $0x0$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	6a 2a                	push   $0x2a$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	eb 1e                	jmp    f01042cc <_alltraps>$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae <irq_11>:$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	6a 00                	push   $0x0$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	6a 2b                	push   $0x2b$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	eb 18                	jmp    f01042cc <_alltraps>$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4 <irq_12>:$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	6a 00                	push   $0x0$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	6a 2c                	push   $0x2c$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	eb 12                	jmp    f01042cc <_alltraps>$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba <irq_13>:$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	6a 00                	push   $0x0$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	6a 2d                	push   $0x2d$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	eb 0c                	jmp    f01042cc <_alltraps>$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0 <irq_14>:$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	6a 00                	push   $0x0$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	6a 2e                	push   $0x2e$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	eb 06                	jmp    f01042cc <_alltraps>$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6 <irq_15>:$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	6a 00                	push   $0x0$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	6a 2f                	push   $0x2f$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	eb 00                	jmp    f01042cc <_alltraps>$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc <_alltraps>:$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	1e                   	push   %ds$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	06                   	push   %es$/;"	l
f01042ce	obj/kern/kernel.asm	/^f01042ce:	60                   	pusha  $/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	8e d8                	mov    %eax,%ds$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	8e c0                	mov    %eax,%es$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	54                   	push   %esp$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	e8 8d fc ff ff       	call   f0103f6b <trap>$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	5c                   	pop    %esp$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	61                   	popa   $/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	07                   	pop    %es$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	1f                   	pop    %ds$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	cf                   	iret   $/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6 <sched_halt>:$/;"	l
f01042e6	obj/kern/kernel.asm	/^f01042e6:	55                   	push   %ebp$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	89 e5                	mov    %esp,%ebp$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	a1 68 e2 22 f0       	mov    0xf022e268,%eax$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	8d 50 54             	lea    0x54(%eax),%edx$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	8b 02                	mov    (%edx),%eax$/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	76 10                	jbe    f0104313 <sched_halt+0x2d>$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	75 e8                	jne    f01042f9 <sched_halt+0x13>$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	eb 08                	jmp    f010431b <sched_halt+0x35>$/;"	l
f0104313	obj/kern/kernel.asm	/^f0104313:	81 f9 00 04 00 00    	cmp    $0x400,%ecx$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	75 1f                	jne    f010433a <sched_halt+0x54>$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	68 d0 7e 10 f0       	push   $0xf0107ed0$/;"	l
f0104323	obj/kern/kernel.asm	/^f0104323:	e8 1f f3 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	83 c4 10             	add    $0x10,%esp$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	6a 00                	push   $0x0$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	e8 11 c5 ff ff       	call   f0100846 <monitor>$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	eb f1                	jmp    f010432b <sched_halt+0x45>$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	e8 6c 1d 00 00       	call   f01060ab <cpunum>$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	c7 80 48 f0 23 f0 00 	movl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	00 00 00 $/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	a1 cc ee 22 f0       	mov    0xf022eecc,%eax$/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	77 12                	ja     f010436a <sched_halt+0x84>$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	50                   	push   %eax$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	68 c8 67 10 f0       	push   $0xf01067c8$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	6a 51                	push   $0x51$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	68 dd 7f 10 f0       	push   $0xf0107fdd$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	e8 d6 bc ff ff       	call   f0100040 <_panic>$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	e8 34 1d 00 00       	call   f01060ab <cpunum>$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	81 c2 40 f0 23 f0    	add    $0xf023f040,%edx$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	68 00 34 12 f0       	push   $0xf0123400$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	e8 1d 20 00 00       	call   f01063b3 <spin_unlock>$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	f3 90                	pause  $/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	e8 0e 1d 00 00       	call   f01060ab <cpunum>$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043a0	obj/kern/kernel.asm	/^f01043a0:	8b 80 50 f0 23 f0    	mov    -0xfdc0fb0(%eax),%eax$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	89 c4                	mov    %eax,%esp$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	6a 00                	push   $0x0$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	6a 00                	push   $0x0$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	fb                   	sti    $/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	f4                   	hlt    $/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	eb fd                	jmp    f01043b2 <sched_halt+0xcc>$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	c9                   	leave  $/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	c3                   	ret    $/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba <sched_yield>:$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	55                   	push   %ebp$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	56                   	push   %esi$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	53                   	push   %ebx$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	e8 e7 1c 00 00       	call   f01060ab <cpunum>$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	83 b8 48 f0 23 f0 00 	cmpl   $0x0,-0xfdc0fb8(%eax)$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	75 2c                	jne    f01043fc <sched_yield+0x42>$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	83 3d f0 33 12 f0 ff 	cmpl   $0xffffffff,0xf01233f0$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	75 23                	jne    f01043fc <sched_yield+0x42>$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	e8 cd 1c 00 00       	call   f01060ab <cpunum>$/;"	l
f01043de	obj/kern/kernel.asm	/^f01043de:	a3 f0 33 12 f0       	mov    %eax,0xf01233f0$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	8b 1d 68 e2 22 f0    	mov    0xf022e268,%ebx$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	e8 bd 1c 00 00       	call   f01060ab <cpunum>$/;"	l
f01043ee	obj/kern/kernel.asm	/^f01043ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	01 d8                	add    %ebx,%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	50                   	push   %eax$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	e8 27 f0 ff ff       	call   f0103423 <env_run>$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	8b 35 f0 33 12 f0    	mov    0xf01233f0,%esi$/;"	l
f0104402	obj/kern/kernel.asm	/^f0104402:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	6a 27                	push   $0x27$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	68 ea 7f 10 f0       	push   $0xf0107fea$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	68 dd 7f 10 f0       	push   $0xf0107fdd$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	56                   	push   %esi$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	68 fc 7e 10 f0       	push   $0xf0107efc$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	e8 2b f2 ff ff       	call   f0103647 <cprintf>$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	eb 6a                	jmp    f010448e <sched_yield+0xd4>$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	81 fb ff 03 00 00    	cmp    $0x3ff,%ebx$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	7e 06                	jle    f0104432 <sched_yield+0x78>$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	81 eb 00 04 00 00    	sub    $0x400,%ebx$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	6b c3 7c             	imul   $0x7c,%ebx,%eax$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	03 05 68 e2 22 f0    	add    0xf022e268,%eax$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	75 0f                	jne    f0104450 <sched_yield+0x96>$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	89 1d f0 33 12 f0    	mov    %ebx,0xf01233f0$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	50                   	push   %eax$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	e8 d3 ef ff ff       	call   f0103423 <env_run>$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	6a 30                	push   $0x30$/;"	l
f0104455	obj/kern/kernel.asm	/^f0104455:	68 ea 7f 10 f0       	push   $0xf0107fea$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	68 dd 7f 10 f0       	push   $0xf0107fdd$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	68 00 04 00 00       	push   $0x400$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	68 3c 7f 10 f0       	push   $0xf0107f3c$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	e8 d9 f1 ff ff       	call   f0103647 <cprintf>$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	6a 31                	push   $0x31$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	68 ea 7f 10 f0       	push   $0xf0107fea$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	68 dd 7f 10 f0       	push   $0xf0107fdd$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	53                   	push   %ebx$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	68 78 7f 10 f0       	push   $0xf0107f78$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	e8 bf f1 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	75 92                	jne    f0104424 <sched_yield+0x6a>$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	6a 35                	push   $0x35$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	68 ea 7f 10 f0       	push   $0xf0107fea$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	68 dd 7f 10 f0       	push   $0xf0107fdd$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	68 b0 7f 10 f0       	push   $0xf0107fb0$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	e8 9f f1 ff ff       	call   f0103647 <cprintf>$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	e8 39 fe ff ff       	call   f01042e6 <sched_halt>$/;"	l
f01044ad	obj/kern/kernel.asm	/^f01044ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044b0	obj/kern/kernel.asm	/^f01044b0:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	5b                   	pop    %ebx$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	5e                   	pop    %esi$/;"	l
f01044b5	obj/kern/kernel.asm	/^f01044b5:	5d                   	pop    %ebp$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	c3                   	ret    $/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7 <syscall>:$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	55                   	push   %ebp$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	56                   	push   %esi$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	53                   	push   %ebx$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	0f 87 d5 03 00 00    	ja     f01048a0 <syscall+0x3e9>$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	ff 24 85 30 80 10 f0 	jmp    *-0xfef7fd0(,%eax,4)$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	e8 d4 1b 00 00       	call   f01060ab <cpunum>$/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	6a 00                	push   $0x0$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	e8 36 e8 ff ff       	call   f0102d23 <user_mem_assert>$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	68 f6 7f 10 f0       	push   $0xf0107ff6$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	e8 47 f1 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	e9 98 03 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	e8 c7 c0 ff ff       	call   f01005d9 <cons_getc>$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	89 c2                	mov    %eax,%edx$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	e9 8c 03 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	e8 8d 1b 00 00       	call   f01060ab <cpunum>$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a:	e9 76 03 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	6a 01                	push   $0x1$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	50                   	push   %eax$/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	e8 af e8 ff ff       	call   f0102def <envid2env>$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	89 c2                	mov    %eax,%edx$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	85 c0                	test   %eax,%eax$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	0f 88 58 03 00 00    	js     f01048a5 <syscall+0x3ee>$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	e8 59 1b 00 00       	call   f01060ab <cpunum>$/;"	l
f0104552	obj/kern/kernel.asm	/^f0104552:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	39 90 48 f0 23 f0    	cmp    %edx,-0xfdc0fb8(%eax)$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	75 23                	jne    f0104583 <syscall+0xcc>$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	e8 46 1b 00 00       	call   f01060ab <cpunum>$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	68 fb 7f 10 f0       	push   $0xf0107ffb$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	e8 c9 f0 ff ff       	call   f0103647 <cprintf>$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	eb 25                	jmp    f01045a8 <syscall+0xf1>$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	e8 20 1b 00 00       	call   f01060ab <cpunum>$/;"	l
f010458b	obj/kern/kernel.asm	/^f010458b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	53                   	push   %ebx$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	68 16 80 10 f0       	push   $0xf0108016$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	e8 a2 f0 ff ff       	call   f0103647 <cprintf>$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	e8 c2 ed ff ff       	call   f0103375 <env_destroy>$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01045bb	obj/kern/kernel.asm	/^f01045bb:	e9 e5 02 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	e8 f5 fd ff ff       	call   f01043ba <sched_yield>$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	e8 e1 1a 00 00       	call   f01060ab <cpunum>$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	8b 80 48 f0 23 f0    	mov    -0xfdc0fb8(%eax),%eax$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	50                   	push   %eax$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	e8 1f e9 ff ff       	call   f0102f01 <env_alloc>$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	89 c2                	mov    %eax,%edx$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	85 c0                	test   %eax,%eax$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	0f 85 b6 02 00 00    	jne    f01048a5 <syscall+0x3ee>$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	e8 b7 1a 00 00       	call   f01060ab <cpunum>$/;"	l
f01045f4	obj/kern/kernel.asm	/^f01045f4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	6a 44                	push   $0x44$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045fc	obj/kern/kernel.asm	/^f01045fc:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	e8 c9 14 00 00       	call   f0105ad3 <memmove>$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	e9 7f 02 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	83 e8 02             	sub    $0x2,%eax$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	75 2e                	jne    f0104661 <syscall+0x1aa>$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	6a 01                	push   $0x1$/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	50                   	push   %eax$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	e8 ab e7 ff ff       	call   f0102def <envid2env>$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104647	obj/kern/kernel.asm	/^f0104647:	89 c2                	mov    %eax,%edx$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	85 c0                	test   %eax,%eax$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	0f 85 54 02 00 00    	jne    f01048a5 <syscall+0x3ee>$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	89 4a 54             	mov    %ecx,0x54(%edx)$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	89 c2                	mov    %eax,%edx$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	e9 44 02 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	e9 3a 02 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	83 e0 05             	and    $0x5,%eax$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	0f 85 9f 00 00 00    	jne    f0104719 <syscall+0x262>$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	0f 85 9c 00 00 00    	jne    f0104723 <syscall+0x26c>$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	6a 01                	push   $0x1$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	e8 dc c7 ff ff       	call   f0100e6d <page_alloc>$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	89 c3                	mov    %eax,%ebx$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	85 c0                	test   %eax,%eax$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	0f 84 8f 00 00 00    	je     f010472d <syscall+0x276>$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	0f 87 8c 00 00 00    	ja     f0104737 <syscall+0x280>$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01046b2	obj/kern/kernel.asm	/^f01046b2:	0f 85 89 00 00 00    	jne    f0104741 <syscall+0x28a>$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	6a 01                	push   $0x1$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	50                   	push   %eax$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	e8 26 e7 ff ff       	call   f0102def <envid2env>$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	89 c6                	mov    %eax,%esi$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	85 c0                	test   %eax,%eax$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	74 13                	je     f01046e5 <syscall+0x22e>$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	53                   	push   %ebx$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	e8 0c c8 ff ff       	call   f0100ee7 <page_free>$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	89 f2                	mov    %esi,%edx$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	e9 c0 01 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	53                   	push   %ebx$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	e8 82 ca ff ff       	call   f0101179 <page_insert>$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	89 c6                	mov    %eax,%esi$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	89 c2                	mov    %eax,%edx$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	85 c0                	test   %eax,%eax$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	0f 84 9f 01 00 00    	je     f01048a5 <syscall+0x3ee>$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	53                   	push   %ebx$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	e8 d8 c7 ff ff       	call   f0100ee7 <page_free>$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	89 f2                	mov    %esi,%edx$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	e9 8c 01 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	e9 82 01 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	e9 78 01 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	e9 6e 01 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	e9 64 01 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	e9 5a 01 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	83 e0 05             	and    $0x5,%eax$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	0f 85 c7 00 00 00    	jne    f0104821 <syscall+0x36a>$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	0f 87 c1 00 00 00    	ja     f0104828 <syscall+0x371>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	f7 45 1c f8 f1 ff ff 	testl  $0xfffff1f8,0x1c(%ebp)$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	0f 85 b4 00 00 00    	jne    f0104828 <syscall+0x371>$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	0f 87 ae 00 00 00    	ja     f010482f <syscall+0x378>$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	0f 85 a1 00 00 00    	jne    f010482f <syscall+0x378>$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	0f 85 9b 00 00 00    	jne    f0104836 <syscall+0x37f>$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	6a 01                	push   $0x1$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	50                   	push   %eax$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	e8 43 e6 ff ff       	call   f0102def <envid2env>$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	89 c2                	mov    %eax,%edx$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	85 c0                	test   %eax,%eax$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	0f 85 ec 00 00 00    	jne    f01048a5 <syscall+0x3ee>$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	6a 01                	push   $0x1$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	50                   	push   %eax$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	e8 25 e6 ff ff       	call   f0102def <envid2env>$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	89 c2                	mov    %eax,%edx$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	85 c0                	test   %eax,%eax$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	0f 85 ce 00 00 00    	jne    f01048a5 <syscall+0x3ee>$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	50                   	push   %eax$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01047e1	obj/kern/kernel.asm	/^f01047e1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	e8 ac c8 ff ff       	call   f0101098 <page_lookup>$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	85 c0                	test   %eax,%eax$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	74 4a                	je     f010483d <syscall+0x386>$/;"	l
f01047f3	obj/kern/kernel.asm	/^f01047f3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	8b 12                	mov    (%edx),%edx$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	83 e2 02             	and    $0x2,%edx$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	8b 4d 1c             	mov    0x1c(%ebp),%ecx$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	83 e1 02             	and    $0x2,%ecx$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	72 3f                	jb     f0104844 <syscall+0x38d>$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	50                   	push   %eax$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104812	obj/kern/kernel.asm	/^f0104812:	e8 62 c9 ff ff       	call   f0101179 <page_insert>$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	83 c4 10             	add    $0x10,%esp$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	89 c2                	mov    %eax,%edx$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	e9 84 00 00 00       	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	eb 7d                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	eb 76                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	eb 6f                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	eb 68                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	eb 61                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	eb 5a                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f010484b	obj/kern/kernel.asm	/^f010484b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	6a 01                	push   $0x1$/;"	l
f0104850	obj/kern/kernel.asm	/^f0104850:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	50                   	push   %eax$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104857	obj/kern/kernel.asm	/^f0104857:	e8 93 e5 ff ff       	call   f0102def <envid2env>$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	89 c2                	mov    %eax,%edx$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	85 c0                	test   %eax,%eax$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	75 40                	jne    f01048a5 <syscall+0x3ee>$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	77 24                	ja     f0104892 <syscall+0x3db>$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	75 22                	jne    f0104899 <syscall+0x3e2>$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	ff 70 60             	pushl  0x60(%eax)$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	e8 ab c8 ff ff       	call   f0101133 <page_remove>$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	83 c4 10             	add    $0x10,%esp$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	eb 13                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	eb 0c                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	eb 05                	jmp    f01048a5 <syscall+0x3ee>$/;"	l
f01048a0	obj/kern/kernel.asm	/^f01048a0:	ba f9 ff ff ff       	mov    $0xfffffff9,%edx$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	89 d0                	mov    %edx,%eax$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	5b                   	pop    %ebx$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	5e                   	pop    %esi$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	5d                   	pop    %ebp$/;"	l
f01048ad	obj/kern/kernel.asm	/^f01048ad:	c3                   	ret    $/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae <stab_binsearch>:$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	55                   	push   %ebp$/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	89 e5                	mov    %esp,%ebp$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	57                   	push   %edi$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	56                   	push   %esi$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	53                   	push   %ebx$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	8b 01                	mov    (%ecx),%eax$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	e9 88 00 00 00       	jmp    f010495e <stab_binsearch+0xb0>$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	01 d8                	add    %ebx,%eax$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	89 c6                	mov    %eax,%esi$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	01 c6                	add    %eax,%esi$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	d1 fe                	sar    %esi$/;"	d
f01048e4	obj/kern/kernel.asm	/^f01048e4:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	89 f0                	mov    %esi,%eax$/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	eb 03                	jmp    f01048f4 <stab_binsearch+0x46>$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	7f 1f                	jg     f0104917 <stab_binsearch+0x69>$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	39 f9                	cmp    %edi,%ecx$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	75 ee                	jne    f01048f1 <stab_binsearch+0x43>$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0104910	obj/kern/kernel.asm	/^f0104910:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	76 18                	jbe    f010492d <stab_binsearch+0x7f>$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	eb 05                	jmp    f010491c <stab_binsearch+0x6e>$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	eb 42                	jmp    f010495e <stab_binsearch+0xb0>$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	eb 31                	jmp    f010495e <stab_binsearch+0xb0>$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	73 17                	jae    f0104949 <stab_binsearch+0x9b>$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	89 06                	mov    %eax,(%esi)$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	eb 15                	jmp    f010495e <stab_binsearch+0xb0>$/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	89 c3                	mov    %eax,%ebx$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0104961	obj/kern/kernel.asm	/^f0104961:	0f 8e 6f ff ff ff    	jle    f01048d6 <stab_binsearch+0x28>$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	75 0f                	jne    f010497c <stab_binsearch+0xce>$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	8b 00                	mov    (%eax),%eax$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	89 06                	mov    %eax,(%esi)$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	eb 2c                	jmp    f01049a8 <stab_binsearch+0xfa>$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	eb 03                	jmp    f0104994 <stab_binsearch+0xe6>$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	7e 0b                	jle    f01049a3 <stab_binsearch+0xf5>$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	39 fb                	cmp    %edi,%ebx$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	75 ee                	jne    f0104991 <stab_binsearch+0xe3>$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	89 06                	mov    %eax,(%esi)$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	5b                   	pop    %ebx$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	5e                   	pop    %esi$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	5f                   	pop    %edi$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	5d                   	pop    %ebp$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	c3                   	ret    $/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0 <debuginfo_eip>:$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	55                   	push   %ebp$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	57                   	push   %edi$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	56                   	push   %esi$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	53                   	push   %ebx$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	c7 06 5c 80 10 f0    	movl   $0xf010805c,(%esi)$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	c7 46 08 5c 80 10 f0 	movl   $0xf010805c,0x8(%esi)$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	77 3c                	ja     f0104a28 <debuginfo_eip+0x78>$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	e8 ba 16 00 00       	call   f01060ab <cpunum>$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	6a 00                	push   $0x0$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	6a 01                	push   $0x1$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	57                   	push   %edi$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	ff b0 48 f0 23 f0    	pushl  -0xfdc0fb8(%eax)$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	e8 1f e3 ff ff       	call   f0102d23 <user_mem_assert>$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	8b 1d 08 00 20 00    	mov    0x200008,%ebx$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	8b 1d 0c 00 20 00    	mov    0x20000c,%ebx$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	eb 1a                	jmp    f0104a42 <debuginfo_eip+0x92>$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	c7 45 cc 0b 8c 11 f0 	movl   $0xf0118c0b,-0x34(%ebp)$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	c7 45 d0 ad 52 11 f0 	movl   $0xf01152ad,-0x30(%ebp)$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	b8 ac 52 11 f0       	mov    $0xf01152ac,%eax$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	c7 45 d4 d8 9f 10 f0 	movl   $0xf0109fd8,-0x2c(%ebp)$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	39 4d d0             	cmp    %ecx,-0x30(%ebp)$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	0f 83 17 01 00 00    	jae    f0104b65 <debuginfo_eip+0x1b5>$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	80 79 ff 00          	cmpb   $0x0,-0x1(%ecx)$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	0f 85 14 01 00 00    	jne    f0104b6c <debuginfo_eip+0x1bc>$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	29 d8                	sub    %ebx,%eax$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a76	obj/kern/kernel.asm	/^f0104a76:	57                   	push   %edi$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	6a 64                	push   $0x64$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	89 d8                	mov    %ebx,%eax$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	e8 28 fe ff ff       	call   f01048ae <stab_binsearch>$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	85 c0                	test   %eax,%eax$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	0f 84 df 00 00 00    	je     f0104b73 <debuginfo_eip+0x1c3>$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	57                   	push   %edi$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	6a 24                	push   $0x24$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	89 d8                	mov    %ebx,%eax$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	e8 fe fd ff ff       	call   f01048ae <stab_binsearch>$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	3b 5d d8             	cmp    -0x28(%ebp),%ebx$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	7f 23                	jg     f0104ade <debuginfo_eip+0x12e>$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	8d 14 87             	lea    (%edi,%eax,4),%edx$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	8b 02                	mov    (%edx),%eax$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	2b 4d d0             	sub    -0x30(%ebp),%ecx$/;"	l
f0104acc	obj/kern/kernel.asm	/^f0104acc:	39 c8                	cmp    %ecx,%eax$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	73 06                	jae    f0104ad6 <debuginfo_eip+0x126>$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	03 45 d0             	add    -0x30(%ebp),%eax$/;"	l
f0104ad3	obj/kern/kernel.asm	/^f0104ad3:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	eb 06                	jmp    f0104ae4 <debuginfo_eip+0x134>$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	6a 3a                	push   $0x3a$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	e8 79 0f 00 00       	call   f0105a6a <strfind>$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104afa	obj/kern/kernel.asm	/^f0104afa:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	eb 06                	jmp    f0104b0e <debuginfo_eip+0x15e>$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	7c 1b                	jl     f0104b2d <debuginfo_eip+0x17d>$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	74 66                	je     f0104b81 <debuginfo_eip+0x1d1>$/;"	l
f0104b1b	obj/kern/kernel.asm	/^f0104b1b:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	75 e8                	jne    f0104b08 <debuginfo_eip+0x158>$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	83 78 08 00          	cmpl   $0x0,0x8(%eax)$/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	74 e2                	je     f0104b08 <debuginfo_eip+0x158>$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	eb 59                	jmp    f0104b81 <debuginfo_eip+0x1d1>$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	03 55 d0             	add    -0x30(%ebp),%edx$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	89 16                	mov    %edx,(%esi)$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	7d 5a                	jge    f0104b96 <debuginfo_eip+0x1e6>$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	eb 07                	jmp    f0104b51 <debuginfo_eip+0x1a1>$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	39 ca                	cmp    %ecx,%edx$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	74 25                	je     f0104b7a <debuginfo_eip+0x1ca>$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	80 78 04 a0          	cmpb   $0xa0,0x4(%eax)$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	74 ec                	je     f0104b4a <debuginfo_eip+0x19a>$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	eb 31                	jmp    f0104b96 <debuginfo_eip+0x1e6>$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	eb 2a                	jmp    f0104b96 <debuginfo_eip+0x1e6>$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	eb 23                	jmp    f0104b96 <debuginfo_eip+0x1e6>$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	eb 1c                	jmp    f0104b96 <debuginfo_eip+0x1e6>$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	eb 15                	jmp    f0104b96 <debuginfo_eip+0x1e6>$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104b84	obj/kern/kernel.asm	/^f0104b84:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	39 c2                	cmp    %eax,%edx$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	72 94                	jb     f0104b28 <debuginfo_eip+0x178>$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	eb 97                	jmp    f0104b2d <debuginfo_eip+0x17d>$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	5b                   	pop    %ebx$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	5e                   	pop    %esi$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	5f                   	pop    %edi$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	5d                   	pop    %ebp$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	c3                   	ret    $/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e <draw_tux>:$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	55                   	push   %ebp$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	57                   	push   %edi$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	56                   	push   %esi$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	53                   	push   %ebx$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	68 66 80 10 f0       	push   $0xf0108066$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	e8 96 ea ff ff       	call   f0103647 <cprintf>$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	e8 b1 01 00 00       	call   f0104d67 <prepare_buffer>$/;"	l
f0104bb6	obj/kern/kernel.asm	/^f0104bb6:	c7 04 24 82 80 10 f0 	movl   $0xf0108082,(%esp)$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	e8 85 ea ff ff       	call   f0103647 <cprintf>$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	e8 73 bb ff ff       	call   f0100749 <getchar>$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	85 db                	test   %ebx,%ebx$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	7e 0a                	jle    f0104be4 <draw_tux+0x46>$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	75 05                	jne    f0104be4 <draw_tux+0x46>$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	eb 36                	jmp    f0104c1a <draw_tux+0x7c>$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	83 fe 26             	cmp    $0x26,%esi$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	7f 0d                	jg     f0104bf9 <draw_tux+0x5b>$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	75 08                	jne    f0104bf9 <draw_tux+0x5b>$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	83 c6 01             	add    $0x1,%esi$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	eb 21                	jmp    f0104c1a <draw_tux+0x7c>$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	83 fb 5d             	cmp    $0x5d,%ebx$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	7f 0a                	jg     f0104c08 <draw_tux+0x6a>$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	75 05                	jne    f0104c08 <draw_tux+0x6a>$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	eb 12                	jmp    f0104c1a <draw_tux+0x7c>$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	85 f6                	test   %esi,%esi$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	7e c2                	jle    f0104bd1 <draw_tux+0x33>$/;"	l
f0104c0f	obj/kern/kernel.asm	/^f0104c0f:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	75 bd                	jne    f0104bd1 <draw_tux+0x33>$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	e8 48 01 00 00       	call   f0104d67 <prepare_buffer>$/;"	l
f0104c1f	obj/kern/kernel.asm	/^f0104c1f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	eb 69                	jmp    f0104c9a <draw_tux+0xfc>$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	f7 e9                	imul   %ecx$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	d1 fa                	sar    %edx$/;"	d
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	89 c8                	mov    %ecx,%eax$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	29 c2                	sub    %eax,%edx$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	03 55 e0             	add    -0x20(%ebp),%edx$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	8b 3c 95 40 81 10 f0 	mov    -0xfef7ec0(,%edx,4),%edi$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	8d 04 19             	lea    (%ecx,%ebx,1),%eax$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	3d 3f 01 00 00       	cmp    $0x13f,%eax$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	77 09                	ja     f0104c5e <draw_tux+0xc0>$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	81 7d e4 c7 00 00 00 	cmpl   $0xc7,-0x1c(%ebp)$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	76 16                	jbe    f0104c74 <draw_tux+0xd6>$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	68 d4 80 10 f0       	push   $0xf01080d4$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	6a 12                	push   $0x12$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	68 97 80 10 f0       	push   $0xf0108097$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	e8 cc b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	89 f8                	mov    %edi,%eax$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	88 84 0e 00 ef 22 f0 	mov    %al,-0xfdd1100(%esi,%ecx,1)$/;"	l
f0104c7d	obj/kern/kernel.asm	/^f0104c7d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	81 f9 e1 00 00 00    	cmp    $0xe1,%ecx$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	75 a9                	jne    f0104c31 <draw_tux+0x93>$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
f0104c8c	obj/kern/kernel.asm	/^f0104c8c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	3d a0 00 00 00       	cmp    $0xa0,%eax$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	74 2d                	je     f0104cc7 <draw_tux+0x129>$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	b8 67 66 66 66       	mov    $0x66666667,%eax$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	f7 ee                	imul   %esi$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	d1 fa                	sar    %edx$/;"	d
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	89 f0                	mov    %esi,%eax$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	29 c2                	sub    %eax,%edx$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	6b c2 2d             	imul   $0x2d,%edx,%eax$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	69 75 e4 40 01 00 00 	imul   $0x140,-0x1c(%ebp),%esi$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	03 75 d8             	add    -0x28(%ebp),%esi$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	e9 6a ff ff ff       	jmp    f0104c31 <draw_tux+0x93>$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	68 a6 80 10 f0       	push   $0xf01080a6$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	e8 73 e9 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	e8 aa 00 00 00       	call   f0104d83 <display_buffer>$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	c7 04 24 c2 80 10 f0 	movl   $0xf01080c2,(%esp)$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	e8 62 e9 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	e9 e4 fe ff ff       	jmp    f0104bd1 <draw_tux+0x33>$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced <draw_color>:$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	55                   	push   %ebp$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	56                   	push   %esi$/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	53                   	push   %ebx$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	e8 70 00 00 00       	call   f0104d67 <prepare_buffer>$/;"	l
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	e8 4d ba ff ff       	call   f0100749 <getchar>$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	74 f6                	je     f0104cf7 <draw_color+0xa>$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	eb 4b                	jmp    f0104d4e <draw_color+0x61>$/;"	l
f0104d03	obj/kern/kernel.asm	/^f0104d03:	3d c7 00 00 00       	cmp    $0xc7,%eax$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	77 08                	ja     f0104d12 <draw_color+0x25>$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	81 f9 3f 01 00 00    	cmp    $0x13f,%ecx$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	76 16                	jbe    f0104d28 <draw_color+0x3b>$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	68 d4 80 10 f0       	push   $0xf01080d4$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	6a 12                	push   $0x12$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	68 97 80 10 f0       	push   $0xf0108097$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	e8 18 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	89 c2                	mov    %eax,%edx$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	c1 e2 08             	shl    $0x8,%edx$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	89 c3                	mov    %eax,%ebx$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	c1 e3 06             	shl    $0x6,%ebx$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	01 f2                	add    %esi,%edx$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	88 0c 1a             	mov    %cl,(%edx,%ebx,1)$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	3d a0 00 00 00       	cmp    $0xa0,%eax$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	75 c2                	jne    f0104d03 <draw_color+0x16>$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	81 f9 00 01 00 00    	cmp    $0x100,%ecx$/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	75 07                	jne    f0104d53 <draw_color+0x66>$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	eb 12                	jmp    f0104d60 <draw_color+0x73>$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	8d b1 00 ef 22 f0    	lea    -0xfdd1100(%ecx),%esi$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	eb a3                	jmp    f0104d03 <draw_color+0x16>$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	e8 1e 00 00 00       	call   f0104d83 <display_buffer>$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	eb 90                	jmp    f0104cf7 <draw_color+0xa>$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67 <prepare_buffer>:$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	55                   	push   %ebp$/;"	l
f0104d68	obj/kern/kernel.asm	/^f0104d68:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	68 00 fa 00 00       	push   $0xfa00$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	6a 00                	push   $0x0$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	68 00 ef 22 f0       	push   $0xf022ef00$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	e8 08 0d 00 00       	call   f0105a86 <memset>$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	c9                   	leave  $/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	c3                   	ret    $/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83 <display_buffer>:$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	55                   	push   %ebp$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	c7 05 f4 33 12 f0 00 	movl   $0xf00a0000,0xf01233f4$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	00 0a f0 $/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	68 00 fa 00 00       	push   $0xfa00$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	68 00 ef 22 f0       	push   $0xf022ef00$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	68 00 00 0a f0       	push   $0xf00a0000$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	e8 2c 0d 00 00       	call   f0105ad3 <memmove>$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	c9                   	leave  $/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	c3                   	ret    $/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac <draw_square>:$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	55                   	push   %ebp$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	89 e5                	mov    %esp,%ebp$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	57                   	push   %edi$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	56                   	push   %esi$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	53                   	push   %ebx$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	85 c0                	test   %eax,%eax$/;"	l
f0104dbd	obj/kern/kernel.asm	/^f0104dbd:	78 0f                	js     f0104dce <draw_square+0x22>$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	89 d3                	mov    %edx,%ebx$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	03 45 0c             	add    0xc(%ebp),%eax$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	89 c7                	mov    %eax,%edi$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	eb 5c                	jmp    f0104e2a <draw_square+0x7e>$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	68 c0 97 10 f0       	push   $0xf01097c0$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	6a 14                	push   $0x14$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	68 c9 97 10 f0       	push   $0xf01097c9$/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	e8 5c b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	89 c2                	mov    %eax,%edx$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	3d c7 00 00 00       	cmp    $0xc7,%eax$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	77 09                	ja     f0104df6 <draw_square+0x4a>$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	81 7d e4 3f 01 00 00 	cmpl   $0x13f,-0x1c(%ebp)$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	76 16                	jbe    f0104e0c <draw_square+0x60>$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	68 d4 80 10 f0       	push   $0xf01080d4$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	6a 12                	push   $0x12$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	68 97 80 10 f0       	push   $0xf0108097$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	e8 34 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	89 c1                	mov    %eax,%ecx$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	c1 e2 06             	shl    $0x6,%edx$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	01 f1                	add    %esi,%ecx$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	0f b6 5d 10          	movzbl 0x10(%ebp),%ebx$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	88 1c 11             	mov    %bl,(%ecx,%edx,1)$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	39 f8                	cmp    %edi,%eax$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	75 c0                	jne    f0104de4 <draw_square+0x38>$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	3b 5d e0             	cmp    -0x20(%ebp),%ebx$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	74 0e                	je     f0104e3d <draw_square+0x91>$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	8d b3 00 ef 22 f0    	lea    -0xfdd1100(%ebx),%esi$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	eb e3                	jmp    f0104e20 <draw_square+0x74>$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	5b                   	pop    %ebx$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	5e                   	pop    %esi$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	5f                   	pop    %edi$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	5d                   	pop    %ebp$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	c3                   	ret    $/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45 <protag_infrontof_box>:$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	55                   	push   %ebp$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	53                   	push   %ebx$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	03 05 18 e9 23 f0    	add    0xf023e918,%eax$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	89 c1                	mov    %eax,%ecx$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	39 05 00 e9 23 f0    	cmp    %eax,0xf023e900$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	75 10                	jne    f0104e69 <protag_infrontof_box+0x24>$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	89 d0                	mov    %edx,%eax$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	03 05 1c e9 23 f0    	add    0xf023e91c,%eax$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	39 05 04 e9 23 f0    	cmp    %eax,0xf023e904$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	74 41                	je     f0104eaa <protag_infrontof_box+0x65>$/;"	l
f0104e69	obj/kern/kernel.asm	/^f0104e69:	3b 0d 08 e9 23 f0    	cmp    0xf023e908,%ecx$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	75 15                	jne    f0104e86 <protag_infrontof_box+0x41>$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	89 d3                	mov    %edx,%ebx$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	03 1d 1c e9 23 f0    	add    0xf023e91c,%ebx$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	39 1d 0c e9 23 f0    	cmp    %ebx,0xf023e90c$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	74 29                	je     f0104eaf <protag_infrontof_box+0x6a>$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	3b 0d 10 e9 23 f0    	cmp    0xf023e910,%ecx$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	75 1c                	jne    f0104eaf <protag_infrontof_box+0x6a>$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	03 15 1c e9 23 f0    	add    0xf023e91c,%edx$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	39 15 14 e9 23 f0    	cmp    %edx,0xf023e914$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	0f 94 c0             	sete   %al$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	eb 05                	jmp    f0104eaf <protag_infrontof_box+0x6a>$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104eaf	obj/kern/kernel.asm	/^f0104eaf:	5b                   	pop    %ebx$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	5d                   	pop    %ebp$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	c3                   	ret    $/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2 <protag_move>:$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	55                   	push   %ebp$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	89 e5                	mov    %esp,%ebp$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	57                   	push   %edi$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	56                   	push   %esi$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	53                   	push   %ebx$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	89 c6                	mov    %eax,%esi$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	89 d3                	mov    %edx,%ebx$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	89 d0                	mov    %edx,%eax$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	03 05 1c e9 23 f0    	add    0xf023e91c,%eax$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	8d 14 c0             	lea    (%eax,%eax,8),%edx$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	89 f0                	mov    %esi,%eax$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	03 05 18 e9 23 f0    	add    0xf023e918,%eax$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	01 d0                	add    %edx,%eax$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	83 3c 85 40 98 10 f0 	cmpl   $0x1,-0xfef67c0(,%eax,4)$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	01 $/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	75 15                	jne    f0104ef3 <protag_move+0x41>$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	68 d6 97 10 f0       	push   $0xf01097d6$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	e8 5c e7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	e9 1b 01 00 00       	jmp    f010500e <protag_move+0x15c>$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	89 da                	mov    %ebx,%edx$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	89 f0                	mov    %esi,%eax$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	e8 49 ff ff ff       	call   f0104e45 <protag_infrontof_box>$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	89 c1                	mov    %eax,%ecx$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	85 c0                	test   %eax,%eax$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	0f 84 e7 00 00 00    	je     f0104fed <protag_move+0x13b>$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	89 df                	mov    %ebx,%edi$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	03 3c d5 04 e9 23 f0 	add    -0xfdc16fc(,%edx,8),%edi$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	89 f0                	mov    %esi,%eax$/;"	l
f0104f17	obj/kern/kernel.asm	/^f0104f17:	03 04 d5 00 e9 23 f0 	add    -0xfdc1700(,%edx,8),%eax$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	8d 14 ff             	lea    (%edi,%edi,8),%edx$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	01 c2                	add    %eax,%edx$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	83 3c 95 40 98 10 f0 	cmpl   $0x1,-0xfef67c0(,%edx,4)$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	01 $/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	75 15                	jne    f0104f42 <protag_move+0x90>$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	68 e0 97 10 f0       	push   $0xf01097e0$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	e8 0d e7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	e9 cc 00 00 00       	jmp    f010500e <protag_move+0x15c>$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	74 3b                	je     f0104f83 <protag_move+0xd1>$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	3b 05 08 e9 23 f0    	cmp    0xf023e908,%eax$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	75 08                	jne    f0104f58 <protag_move+0xa6>$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	3b 3d 0c e9 23 f0    	cmp    0xf023e90c,%edi$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	74 10                	je     f0104f68 <protag_move+0xb6>$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	3b 05 10 e9 23 f0    	cmp    0xf023e910,%eax$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	75 1d                	jne    f0104f7d <protag_move+0xcb>$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	3b 3d 14 e9 23 f0    	cmp    0xf023e914,%edi$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	75 15                	jne    f0104f7d <protag_move+0xcb>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	68 ea 97 10 f0       	push   $0xf01097ea$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	e8 d2 e6 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	e9 91 00 00 00       	jmp    f010500e <protag_move+0x15c>$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	83 7d e4 01          	cmpl   $0x1,-0x1c(%ebp)$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	74 38                	je     f0104fbb <protag_move+0x109>$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	3b 05 00 e9 23 f0    	cmp    0xf023e900,%eax$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	75 08                	jne    f0104f93 <protag_move+0xe1>$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	3b 3d 04 e9 23 f0    	cmp    0xf023e904,%edi$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	74 10                	je     f0104fa3 <protag_move+0xf1>$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	3b 05 10 e9 23 f0    	cmp    0xf023e910,%eax$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	75 1a                	jne    f0104fb5 <protag_move+0x103>$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	3b 3d 14 e9 23 f0    	cmp    0xf023e914,%edi$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	75 12                	jne    f0104fb5 <protag_move+0x103>$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	68 f4 97 10 f0       	push   $0xf01097f4$/;"	l
f0104fab	obj/kern/kernel.asm	/^f0104fab:	e8 97 e6 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	eb 59                	jmp    f010500e <protag_move+0x15c>$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	83 7d e4 02          	cmpl   $0x2,-0x1c(%ebp)$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	74 40                	je     f0104ffb <protag_move+0x149>$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	3b 05 00 e9 23 f0    	cmp    0xf023e900,%eax$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	75 08                	jne    f0104fcb <protag_move+0x119>$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	3b 3d 04 e9 23 f0    	cmp    0xf023e904,%edi$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	74 10                	je     f0104fdb <protag_move+0x129>$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	3b 05 08 e9 23 f0    	cmp    0xf023e908,%eax$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	75 28                	jne    f0104ffb <protag_move+0x149>$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	3b 3d 0c e9 23 f0    	cmp    0xf023e90c,%edi$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	75 20                	jne    f0104ffb <protag_move+0x149>$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	68 fe 97 10 f0       	push   $0xf01097fe$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	e8 5f e6 ff ff       	call   f0103647 <cprintf>$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	eb 21                	jmp    f010500e <protag_move+0x15c>$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	01 35 18 e9 23 f0    	add    %esi,0xf023e918$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	01 1d 1c e9 23 f0    	add    %ebx,0xf023e91c$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	eb 13                	jmp    f010500e <protag_move+0x15c>$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	01 34 cd 00 e9 23 f0 	add    %esi,-0xfdc1700(,%ecx,8)$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	01 1c cd 04 e9 23 f0 	add    %ebx,-0xfdc16fc(,%ecx,8)$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	eb df                	jmp    f0104fed <protag_move+0x13b>$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105011	obj/kern/kernel.asm	/^f0105011:	5b                   	pop    %ebx$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	5e                   	pop    %esi$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	5f                   	pop    %edi$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	5d                   	pop    %ebp$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	c3                   	ret    $/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016 <game_loop>:$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	55                   	push   %ebp$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	89 e5                	mov    %esp,%ebp$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	c7 05 18 e9 23 f0 03 	movl   $0x3,0xf023e918$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	00 00 00 $/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	c7 05 1c e9 23 f0 01 	movl   $0x1,0xf023e91c$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	00 00 00 $/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	c7 05 00 e9 23 f0 03 	movl   $0x3,0xf023e900$/;"	l
f0105037	obj/kern/kernel.asm	/^f0105037:	00 00 00 $/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	c7 05 04 e9 23 f0 02 	movl   $0x2,0xf023e904$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	00 00 00 $/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	c7 05 08 e9 23 f0 02 	movl   $0x2,0xf023e908$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	00 00 00 $/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	c7 05 0c e9 23 f0 02 	movl   $0x2,0xf023e90c$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	00 00 00 $/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	c7 05 10 e9 23 f0 02 	movl   $0x2,0xf023e910$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	00 00 00 $/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	c7 05 14 e9 23 f0 03 	movl   $0x3,0xf023e914$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	00 00 00 $/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	e8 bd 00 00 00       	call   f010512e <game_display>$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	e8 d3 b6 ff ff       	call   f0100749 <getchar>$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	83 f8 61             	cmp    $0x61,%eax$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	75 11                	jne    f010508c <game_loop+0x76>$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	e8 28 fe ff ff       	call   f0104eb2 <protag_move>$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	eb 43                	jmp    f01050cf <game_loop+0xb9>$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	83 f8 73             	cmp    $0x73,%eax$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	75 0e                	jne    f010509f <game_loop+0x89>$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	b0 00                	mov    $0x0,%al$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	e8 15 fe ff ff       	call   f0104eb2 <protag_move>$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	eb 30                	jmp    f01050cf <game_loop+0xb9>$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	75 0e                	jne    f01050b2 <game_loop+0x9c>$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	b0 01                	mov    $0x1,%al$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	e8 02 fe ff ff       	call   f0104eb2 <protag_move>$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	eb 1d                	jmp    f01050cf <game_loop+0xb9>$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	83 f8 77             	cmp    $0x77,%eax$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	75 0e                	jne    f01050c5 <game_loop+0xaf>$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	b0 00                	mov    $0x0,%al$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	e8 ef fd ff ff       	call   f0104eb2 <protag_move>$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	eb 0a                	jmp    f01050cf <game_loop+0xb9>$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	83 f8 72             	cmp    $0x72,%eax$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	75 a7                	jne    f0105071 <game_loop+0x5b>$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	e9 4d ff ff ff       	jmp    f010501c <game_loop+0x6>$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	e8 5a 00 00 00       	call   f010512e <game_display>$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	a1 04 e9 23 f0       	mov    0xf023e904,%eax$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	03 05 00 e9 23 f0    	add    0xf023e900,%eax$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	83 3c 85 40 98 10 f0 	cmpl   $0x2,-0xfef67c0(,%eax,4)$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	02 $/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	75 85                	jne    f0105071 <game_loop+0x5b>$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	a1 0c e9 23 f0       	mov    0xf023e90c,%eax$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f01050f4	obj/kern/kernel.asm	/^f01050f4:	03 05 08 e9 23 f0    	add    0xf023e908,%eax$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	83 3c 85 40 98 10 f0 	cmpl   $0x2,-0xfef67c0(,%eax,4)$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	02 $/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	0f 85 69 ff ff ff    	jne    f0105071 <game_loop+0x5b>$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	a1 14 e9 23 f0       	mov    0xf023e914,%eax$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	8d 04 c0             	lea    (%eax,%eax,8),%eax$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	03 05 10 e9 23 f0    	add    0xf023e910,%eax$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	83 3c 85 40 98 10 f0 	cmpl   $0x2,-0xfef67c0(,%eax,4)$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	02 $/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	0f 85 4d ff ff ff    	jne    f0105071 <game_loop+0x5b>$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	e8 75 fa ff ff       	call   f0104b9e <draw_tux>$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	e9 43 ff ff ff       	jmp    f0105071 <game_loop+0x5b>$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e <game_display>:$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	55                   	push   %ebp$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	57                   	push   %edi$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	56                   	push   %esi$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	53                   	push   %ebx$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	68 84 99 10 f0       	push   $0xf0109984$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	e8 06 e5 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	c7 45 e0 c0 99 10 f0 	movl   $0xf01099c0,-0x20(%ebp)$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	83 c4 10             	add    $0x10,%esp$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	e9 8b 00 00 00       	jmp    f01051e2 <game_display+0xb4>$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	8b 06                	mov    (%esi),%eax$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	85 c0                	test   %eax,%eax$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	75 10                	jne    f010516d <game_display+0x3f>$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	6a 14                	push   $0x14$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	6a 09                	push   $0x9$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	57                   	push   %edi$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	53                   	push   %ebx$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	e8 44 fc ff ff       	call   f0104dac <draw_square>$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	83 c4 10             	add    $0x10,%esp$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	eb 55                	jmp    f01051c2 <game_display+0x94>$/;"	l
f010516d	obj/kern/kernel.asm	/^f010516d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	75 10                	jne    f0105182 <game_display+0x54>$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	6a 14                	push   $0x14$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	6a 14                	push   $0x14$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	57                   	push   %edi$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	53                   	push   %ebx$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	e8 2f fc ff ff       	call   f0104dac <draw_square>$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	eb 40                	jmp    f01051c2 <game_display+0x94>$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	75 10                	jne    f0105197 <game_display+0x69>$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	6a 14                	push   $0x14$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	6a 06                	push   $0x6$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	57                   	push   %edi$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	53                   	push   %ebx$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	e8 1a fc ff ff       	call   f0104dac <draw_square>$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	eb 2b                	jmp    f01051c2 <game_display+0x94>$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	75 10                	jne    f01051ac <game_display+0x7e>$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	6a 14                	push   $0x14$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	6a 00                	push   $0x0$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	57                   	push   %edi$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	53                   	push   %ebx$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	e8 05 fc ff ff       	call   f0104dac <draw_square>$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	eb 16                	jmp    f01051c2 <game_display+0x94>$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	68 1a 6d 10 f0       	push   $0xf0106d1a$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	68 e2 6c 10 f0       	push   $0xf0106ce2$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	6a 1a                	push   $0x1a$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	68 95 99 10 f0       	push   $0xf0109995$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	e8 7e ae ff ff       	call   f0100040 <_panic>$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	83 c6 04             	add    $0x4,%esi$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	83 c3 14             	add    $0x14,%ebx$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	81 fb b4 00 00 00    	cmp    $0xb4,%ebx$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	75 87                	jne    f0105157 <game_display+0x29>$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	83 45 e4 14          	addl   $0x14,-0x1c(%ebp)$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	83 45 e0 24          	addl   $0x24,-0x20(%ebp)$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	3d b4 00 00 00       	cmp    $0xb4,%eax$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	74 10                	je     f01051f2 <game_display+0xc4>$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	e9 65 ff ff ff       	jmp    f0105157 <game_display+0x29>$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	6a 14                	push   $0x14$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	6a 0e                	push   $0xe$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	a1 1c e9 23 f0       	mov    0xf023e91c,%eax$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	50                   	push   %eax$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	a1 18 e9 23 f0       	mov    0xf023e918,%eax$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	50                   	push   %eax$/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	e8 99 fb ff ff       	call   f0104dac <draw_square>$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	6a 14                	push   $0x14$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	6a 0d                	push   $0xd$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	a1 04 e9 23 f0       	mov    0xf023e904,%eax$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	50                   	push   %eax$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	a1 00 e9 23 f0       	mov    0xf023e900,%eax$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	50                   	push   %eax$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	e8 78 fb ff ff       	call   f0104dac <draw_square>$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	83 c4 20             	add    $0x20,%esp$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	6a 14                	push   $0x14$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	6a 0d                	push   $0xd$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	a1 0c e9 23 f0       	mov    0xf023e90c,%eax$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	50                   	push   %eax$/;"	l
f0105247	obj/kern/kernel.asm	/^f0105247:	a1 08 e9 23 f0       	mov    0xf023e908,%eax$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	50                   	push   %eax$/;"	l
f0105253	obj/kern/kernel.asm	/^f0105253:	e8 54 fb ff ff       	call   f0104dac <draw_square>$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	6a 14                	push   $0x14$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	6a 0d                	push   $0xd$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	a1 14 e9 23 f0       	mov    0xf023e914,%eax$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	50                   	push   %eax$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	a1 10 e9 23 f0       	mov    0xf023e910,%eax$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	50                   	push   %eax$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	e8 33 fb ff ff       	call   f0104dac <draw_square>$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	83 c4 20             	add    $0x20,%esp$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	e8 02 fb ff ff       	call   f0104d83 <display_buffer>$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	5b                   	pop    %ebx$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	5e                   	pop    %esi$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	5f                   	pop    %edi$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	5d                   	pop    %ebp$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	c3                   	ret    $/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289 <printnum>:$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	55                   	push   %ebp$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	89 e5                	mov    %esp,%ebp$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	57                   	push   %edi$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	56                   	push   %esi$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	53                   	push   %ebx$/;"	l
f010528f	obj/kern/kernel.asm	/^f010528f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105292	obj/kern/kernel.asm	/^f0105292:	89 c7                	mov    %eax,%edi$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	89 d6                	mov    %edx,%esi$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	89 d1                	mov    %edx,%ecx$/;"	l
f010529e	obj/kern/kernel.asm	/^f010529e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	39 4d e4             	cmp    %ecx,-0x1c(%ebp)$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	72 05                	jb     f01052be <printnum+0x35>$/;"	l
f01052b9	obj/kern/kernel.asm	/^f01052b9:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	77 3e                	ja     f01052fc <printnum+0x73>$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01052c7	obj/kern/kernel.asm	/^f01052c7:	53                   	push   %ebx$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	50                   	push   %eax$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	e8 c3 11 00 00       	call   f01064a0 <__udivdi3>$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	83 c4 18             	add    $0x18,%esp$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	52                   	push   %edx$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	50                   	push   %eax$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	89 f2                	mov    %esi,%edx$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	89 f8                	mov    %edi,%eax$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	e8 9e ff ff ff       	call   f0105289 <printnum>$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	83 c4 20             	add    $0x20,%esp$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	eb 13                	jmp    f0105303 <printnum+0x7a>$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	56                   	push   %esi$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	ff d7                	call   *%edi$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01052ff	obj/kern/kernel.asm	/^f01052ff:	85 db                	test   %ebx,%ebx$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	7f ed                	jg     f01052f0 <printnum+0x67>$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	56                   	push   %esi$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	e8 b5 12 00 00       	call   f01065d0 <__umoddi3>$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	0f be 80 04 9b 10 f0 	movsbl -0xfef64fc(%eax),%eax$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	50                   	push   %eax$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	ff d7                	call   *%edi$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	83 c4 10             	add    $0x10,%esp$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	5b                   	pop    %ebx$/;"	l
f010532f	obj/kern/kernel.asm	/^f010532f:	5e                   	pop    %esi$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	5f                   	pop    %edi$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	5d                   	pop    %ebp$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	c3                   	ret    $/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333 <sprintputch>:$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	55                   	push   %ebp$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	89 e5                	mov    %esp,%ebp$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	8b 10                	mov    (%eax),%edx$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	73 0a                	jae    f010534e <sprintputch+0x1b>$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	88 02                	mov    %al,(%edx)$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	5d                   	pop    %ebp$/;"	l
f010534f	obj/kern/kernel.asm	/^f010534f:	c3                   	ret    $/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350 <printfmt>:$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	55                   	push   %ebp$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	89 e5                	mov    %esp,%ebp$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	50                   	push   %eax$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	e8 05 00 00 00       	call   f010536d <vprintfmt>$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	83 c4 10             	add    $0x10,%esp$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	c9                   	leave  $/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	c3                   	ret    $/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d <vprintfmt>:$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	55                   	push   %ebp$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	57                   	push   %edi$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	56                   	push   %esi$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	53                   	push   %ebx$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	eb 12                	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	85 c0                	test   %eax,%eax$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	0f 84 36 04 00 00    	je     f01057bf <vprintfmt+0x452>$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	53                   	push   %ebx$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	50                   	push   %eax$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	ff d6                	call   *%esi$/;"	l
f0105390	obj/kern/kernel.asm	/^f0105390:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	83 c7 01             	add    $0x1,%edi$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	75 e2                	jne    f0105381 <vprintfmt+0x14>$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	eb 07                	jmp    f01053c6 <vprintfmt+0x59>$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	83 e8 23             	sub    $0x23,%eax$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	3c 55                	cmp    $0x55,%al$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	0f 87 c7 03 00 00    	ja     f01057a4 <vprintfmt+0x437>$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	ff 24 85 c0 9b 10 f0 	jmp    *-0xfef6440(,%eax,4)$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	eb d6                	jmp    f01053c6 <vprintfmt+0x59>$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01053fb	obj/kern/kernel.asm	/^f01053fb:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	77 3e                	ja     f010544b <vprintfmt+0xde>$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	83 c7 01             	add    $0x1,%edi$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	eb e9                	jmp    f01053fb <vprintfmt+0x8e>$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	8b 00                	mov    (%eax),%eax$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	eb 29                	jmp    f0105451 <vprintfmt+0xe4>$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	89 d0                	mov    %edx,%eax$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	f7 d0                	not    %eax$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	21 c2                	and    %eax,%edx$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	eb 8a                	jmp    f01053c6 <vprintfmt+0x59>$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	e9 7b ff ff ff       	jmp    f01053c6 <vprintfmt+0x59>$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010544e	obj/kern/kernel.asm	/^f010544e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	0f 89 6b ff ff ff    	jns    f01053c6 <vprintfmt+0x59>$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	e9 59 ff ff ff       	jmp    f01053c6 <vprintfmt+0x59>$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105473	obj/kern/kernel.asm	/^f0105473:	e9 4e ff ff ff       	jmp    f01053c6 <vprintfmt+0x59>$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	53                   	push   %ebx$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	ff 30                	pushl  (%eax)$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	ff d6                	call   *%esi$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	e9 ff fe ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105497	obj/kern/kernel.asm	/^f0105497:	83 45 14 04          	addl   $0x4,0x14(%ebp)$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	8b 00                	mov    (%eax),%eax$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	99                   	cltd   $/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	31 d0                	xor    %edx,%eax$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	29 d0                	sub    %edx,%eax$/;"	l
f01054a2	obj/kern/kernel.asm	/^f01054a2:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	7f 0b                	jg     f01054b2 <vprintfmt+0x145>$/;"	l
f01054a7	obj/kern/kernel.asm	/^f01054a7:	8b 14 85 20 9d 10 f0 	mov    -0xfef62e0(,%eax,4),%edx$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	85 d2                	test   %edx,%edx$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	75 18                	jne    f01054ca <vprintfmt+0x15d>$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	50                   	push   %eax$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	68 1c 9b 10 f0       	push   $0xf0109b1c$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	53                   	push   %ebx$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	56                   	push   %esi$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	e8 91 fe ff ff       	call   f0105350 <printfmt>$/;"	l
f01054bf	obj/kern/kernel.asm	/^f01054bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	e9 c9 fe ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	52                   	push   %edx$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	68 f4 6c 10 f0       	push   $0xf0106cf4$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	53                   	push   %ebx$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	56                   	push   %esi$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	e8 79 fe ff ff       	call   f0105350 <printfmt>$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	e9 b1 fe ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	83 45 14 04          	addl   $0x4,0x14(%ebp)$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	8b 38                	mov    (%eax),%edi$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	85 ff                	test   %edi,%edi$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	75 05                	jne    f01054fd <vprintfmt+0x190>$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	bf 15 9b 10 f0       	mov    $0xf0109b15,%edi$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	0f 84 91 00 00 00    	je     f0105598 <vprintfmt+0x22b>$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	0f 8e 95 00 00 00    	jle    f01055a6 <vprintfmt+0x239>$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	52                   	push   %edx$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	57                   	push   %edi$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	e8 05 04 00 00       	call   f0105920 <strnlen>$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	29 c1                	sub    %eax,%ecx$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	89 cf                	mov    %ecx,%edi$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	eb 0f                	jmp    f0105543 <vprintfmt+0x1d6>$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105537	obj/kern/kernel.asm	/^f0105537:	53                   	push   %ebx$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	ff d6                	call   *%esi$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	85 ff                	test   %edi,%edi$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	7f ed                	jg     f0105534 <vprintfmt+0x1c7>$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	89 c8                	mov    %ecx,%eax$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	f7 d0                	not    %eax$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	21 c8                	and    %ecx,%eax$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	29 c1                	sub    %eax,%ecx$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	eb 4d                	jmp    f01055b2 <vprintfmt+0x245>$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	74 1b                	je     f0105586 <vprintfmt+0x219>$/;"	l
f010556b	obj/kern/kernel.asm	/^f010556b:	0f be c0             	movsbl %al,%eax$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	76 10                	jbe    f0105586 <vprintfmt+0x219>$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	6a 3f                	push   $0x3f$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	eb 0d                	jmp    f0105593 <vprintfmt+0x226>$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	52                   	push   %edx$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	eb 1a                	jmp    f01055b2 <vprintfmt+0x245>$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	eb 0c                	jmp    f01055b2 <vprintfmt+0x245>$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	83 c7 01             	add    $0x1,%edi$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	0f be d0             	movsbl %al,%edx$/;"	l
f01055bc	obj/kern/kernel.asm	/^f01055bc:	85 d2                	test   %edx,%edx$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	74 23                	je     f01055e3 <vprintfmt+0x276>$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	85 f6                	test   %esi,%esi$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	78 a1                	js     f0105565 <vprintfmt+0x1f8>$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	79 9c                	jns    f0105565 <vprintfmt+0x1f8>$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	89 df                	mov    %ebx,%edi$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	eb 18                	jmp    f01055eb <vprintfmt+0x27e>$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	53                   	push   %ebx$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	6a 20                	push   $0x20$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	ff d6                	call   *%esi$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	eb 08                	jmp    f01055eb <vprintfmt+0x27e>$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	89 df                	mov    %ebx,%edi$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	85 ff                	test   %edi,%edi$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	7f e4                	jg     f01055d3 <vprintfmt+0x266>$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	e9 9c fd ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	7e 19                	jle    f0105615 <vprintfmt+0x2a8>$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	8b 00                	mov    (%eax),%eax$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	eb 38                	jmp    f010564d <vprintfmt+0x2e0>$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	85 c9                	test   %ecx,%ecx$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	74 1b                	je     f0105634 <vprintfmt+0x2c7>$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	8b 00                	mov    (%eax),%eax$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	89 c1                	mov    %eax,%ecx$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	eb 19                	jmp    f010564d <vprintfmt+0x2e0>$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	8b 00                	mov    (%eax),%eax$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010563c	obj/kern/kernel.asm	/^f010563c:	89 c1                	mov    %eax,%ecx$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	0f 89 0e 01 00 00    	jns    f0105770 <vprintfmt+0x403>$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	53                   	push   %ebx$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	6a 2d                	push   $0x2d$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	ff d6                	call   *%esi$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	f7 da                	neg    %edx$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	f7 d9                	neg    %ecx$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	83 c4 10             	add    $0x10,%esp$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	e9 ec 00 00 00       	jmp    f0105770 <vprintfmt+0x403>$/;"	l
f0105684	obj/kern/kernel.asm	/^f0105684:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	7e 18                	jle    f01056a1 <vprintfmt+0x334>$/;"	l
f0105689	obj/kern/kernel.asm	/^f0105689:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	8b 10                	mov    (%eax),%edx$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	e9 cf 00 00 00       	jmp    f0105770 <vprintfmt+0x403>$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	85 c9                	test   %ecx,%ecx$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	74 1a                	je     f01056bf <vprintfmt+0x352>$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	8b 10                	mov    (%eax),%edx$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	e9 b1 00 00 00       	jmp    f0105770 <vprintfmt+0x403>$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	8b 10                	mov    (%eax),%edx$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	e9 97 00 00 00       	jmp    f0105770 <vprintfmt+0x403>$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	53                   	push   %ebx$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	6a 58                	push   $0x58$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	ff d6                	call   *%esi$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	53                   	push   %ebx$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	6a 58                	push   $0x58$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	ff d6                	call   *%esi$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	53                   	push   %ebx$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	6a 58                	push   $0x58$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	ff d6                	call   *%esi$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	e9 97 fc ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	53                   	push   %ebx$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	6a 30                	push   $0x30$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	ff d6                	call   *%esi$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	53                   	push   %ebx$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	6a 78                	push   $0x78$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	ff d6                	call   *%esi$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	8b 10                	mov    (%eax),%edx$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	eb 4a                	jmp    f0105770 <vprintfmt+0x403>$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	7e 15                	jle    f0105740 <vprintfmt+0x3d3>$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	8b 10                	mov    (%eax),%edx$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	eb 30                	jmp    f0105770 <vprintfmt+0x403>$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	85 c9                	test   %ecx,%ecx$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	74 17                	je     f010575b <vprintfmt+0x3ee>$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	8b 10                	mov    (%eax),%edx$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	eb 15                	jmp    f0105770 <vprintfmt+0x403>$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	8b 10                	mov    (%eax),%edx$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	57                   	push   %edi$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	50                   	push   %eax$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	51                   	push   %ecx$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	52                   	push   %edx$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	89 da                	mov    %ebx,%edx$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	89 f0                	mov    %esi,%eax$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	e8 02 fb ff ff       	call   f0105289 <printnum>$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	83 c4 20             	add    $0x20,%esp$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	e9 01 fc ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	53                   	push   %ebx$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	52                   	push   %edx$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	ff d6                	call   *%esi$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	83 c4 10             	add    $0x10,%esp$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	e9 ef fb ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	53                   	push   %ebx$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	6a 25                	push   $0x25$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	ff d6                	call   *%esi$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	eb 03                	jmp    f01057b4 <vprintfmt+0x447>$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f01057b8	obj/kern/kernel.asm	/^f01057b8:	75 f7                	jne    f01057b1 <vprintfmt+0x444>$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	e9 d4 fb ff ff       	jmp    f0105393 <vprintfmt+0x26>$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	5b                   	pop    %ebx$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	5e                   	pop    %esi$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	5f                   	pop    %edi$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	5d                   	pop    %ebp$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	c3                   	ret    $/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7 <vsnprintf>:$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	55                   	push   %ebp$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	85 c0                	test   %eax,%eax$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	74 26                	je     f010580e <vsnprintf+0x47>$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	85 d2                	test   %edx,%edx$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	7e 22                	jle    f010580e <vsnprintf+0x47>$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	50                   	push   %eax$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	68 33 53 10 f0       	push   $0xf0105333$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	e8 6d fb ff ff       	call   f010536d <vprintfmt>$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	83 c4 10             	add    $0x10,%esp$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	eb 05                	jmp    f0105813 <vsnprintf+0x4c>$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	c9                   	leave  $/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	c3                   	ret    $/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815 <snprintf>:$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	55                   	push   %ebp$/;"	l
f0105816	obj/kern/kernel.asm	/^f0105816:	89 e5                	mov    %esp,%ebp$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	50                   	push   %eax$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105825	obj/kern/kernel.asm	/^f0105825:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	e8 9a ff ff ff       	call   f01057c7 <vsnprintf>$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	c9                   	leave  $/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	c3                   	ret    $/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f <readline>:$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	55                   	push   %ebp$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	89 e5                	mov    %esp,%ebp$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	57                   	push   %edi$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	56                   	push   %esi$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	53                   	push   %ebx$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	85 c0                	test   %eax,%eax$/;"	l
f010583d	obj/kern/kernel.asm	/^f010583d:	74 11                	je     f0105850 <readline+0x21>$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	50                   	push   %eax$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	68 f4 6c 10 f0       	push   $0xf0106cf4$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	e8 fa dd ff ff       	call   f0103647 <cprintf>$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	6a 00                	push   $0x0$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	e8 00 af ff ff       	call   f010075a <iscons>$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	89 c7                	mov    %eax,%edi$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	e8 e0 ae ff ff       	call   f0100749 <getchar>$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	89 c3                	mov    %eax,%ebx$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	85 c0                	test   %eax,%eax$/;"	l
f010586d	obj/kern/kernel.asm	/^f010586d:	79 18                	jns    f0105887 <readline+0x58>$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	50                   	push   %eax$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	68 48 9d 10 f0       	push   $0xf0109d48$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	e8 ca dd ff ff       	call   f0103647 <cprintf>$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	eb 79                	jmp    f0105900 <readline+0xd1>$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	0f 94 c2             	sete   %dl$/;"	l
f010588d	obj/kern/kernel.asm	/^f010588d:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	0f 94 c0             	sete   %al$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	08 c2                	or     %al,%dl$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	74 1a                	je     f01058b1 <readline+0x82>$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	85 f6                	test   %esi,%esi$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	7e 16                	jle    f01058b1 <readline+0x82>$/;"	l
f010589b	obj/kern/kernel.asm	/^f010589b:	85 ff                	test   %edi,%edi$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	74 0d                	je     f01058ac <readline+0x7d>$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	6a 08                	push   $0x8$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	e8 90 ae ff ff       	call   f0100739 <cputchar>$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	eb b3                	jmp    f0105864 <readline+0x35>$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	7f 20                	jg     f01058d9 <readline+0xaa>$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	7e 1b                	jle    f01058d9 <readline+0xaa>$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	85 ff                	test   %edi,%edi$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	74 0c                	je     f01058ce <readline+0x9f>$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01058c5	obj/kern/kernel.asm	/^f01058c5:	53                   	push   %ebx$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	e8 6e ae ff ff       	call   f0100739 <cputchar>$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	88 9e c0 ea 22 f0    	mov    %bl,-0xfdd1540(%esi)$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	eb 8b                	jmp    f0105864 <readline+0x35>$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	74 05                	je     f01058e3 <readline+0xb4>$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	75 81                	jne    f0105864 <readline+0x35>$/;"	l
f01058e3	obj/kern/kernel.asm	/^f01058e3:	85 ff                	test   %edi,%edi$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	74 0d                	je     f01058f4 <readline+0xc5>$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	6a 0a                	push   $0xa$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	e8 48 ae ff ff       	call   f0100739 <cputchar>$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	c6 86 c0 ea 22 f0 00 	movb   $0x0,-0xfdd1540(%esi)$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	b8 c0 ea 22 f0       	mov    $0xf022eac0,%eax$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	5b                   	pop    %ebx$/;"	l
f0105904	obj/kern/kernel.asm	/^f0105904:	5e                   	pop    %esi$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	5f                   	pop    %edi$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	5d                   	pop    %ebp$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	c3                   	ret    $/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908 <strlen>:$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	55                   	push   %ebp$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	89 e5                	mov    %esp,%ebp$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	eb 03                	jmp    f0105918 <strlen+0x10>$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	75 f7                	jne    f0105915 <strlen+0xd>$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	5d                   	pop    %ebp$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	c3                   	ret    $/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920 <strnlen>:$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	55                   	push   %ebp$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	89 e5                	mov    %esp,%ebp$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010592e	obj/kern/kernel.asm	/^f010592e:	eb 03                	jmp    f0105933 <strnlen+0x13>$/;"	l
f0105930	obj/kern/kernel.asm	/^f0105930:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	39 c2                	cmp    %eax,%edx$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	74 08                	je     f010593f <strnlen+0x1f>$/;"	l
f0105937	obj/kern/kernel.asm	/^f0105937:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	75 f3                	jne    f0105930 <strnlen+0x10>$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	89 d0                	mov    %edx,%eax$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	5d                   	pop    %ebp$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	c3                   	ret    $/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941 <strcpy>:$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	55                   	push   %ebp$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	89 e5                	mov    %esp,%ebp$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	53                   	push   %ebx$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	89 c2                	mov    %eax,%edx$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	84 db                	test   %bl,%bl$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	75 ef                	jne    f010594d <strcpy+0xc>$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	5b                   	pop    %ebx$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	5d                   	pop    %ebp$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	c3                   	ret    $/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961 <strcat>:$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	55                   	push   %ebp$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	89 e5                	mov    %esp,%ebp$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	53                   	push   %ebx$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105968	obj/kern/kernel.asm	/^f0105968:	53                   	push   %ebx$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	e8 9a ff ff ff       	call   f0105908 <strlen>$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	01 d8                	add    %ebx,%eax$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	50                   	push   %eax$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	e8 c5 ff ff ff       	call   f0105941 <strcpy>$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	89 d8                	mov    %ebx,%eax$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	c9                   	leave  $/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	c3                   	ret    $/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983 <strncpy>:$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	55                   	push   %ebp$/;"	l
f0105984	obj/kern/kernel.asm	/^f0105984:	89 e5                	mov    %esp,%ebp$/;"	l
f0105986	obj/kern/kernel.asm	/^f0105986:	56                   	push   %esi$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	53                   	push   %ebx$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	89 f3                	mov    %esi,%ebx$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	89 f2                	mov    %esi,%edx$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	eb 0f                	jmp    f01059a6 <strncpy+0x23>$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	83 c2 01             	add    $0x1,%edx$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010599d	obj/kern/kernel.asm	/^f010599d:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01059a6	obj/kern/kernel.asm	/^f01059a6:	39 da                	cmp    %ebx,%edx$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	75 ed                	jne    f0105997 <strncpy+0x14>$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	89 f0                	mov    %esi,%eax$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	5b                   	pop    %ebx$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	5e                   	pop    %esi$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	5d                   	pop    %ebp$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	c3                   	ret    $/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0 <strlcpy>:$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	55                   	push   %ebp$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	56                   	push   %esi$/;"	l
f01059b4	obj/kern/kernel.asm	/^f01059b4:	53                   	push   %ebx$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	89 f0                	mov    %esi,%eax$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	85 d2                	test   %edx,%edx$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	74 21                	je     f01059e5 <strlcpy+0x35>$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	89 f2                	mov    %esi,%edx$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	eb 09                	jmp    f01059d5 <strlcpy+0x25>$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	83 c2 01             	add    $0x1,%edx$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	39 c2                	cmp    %eax,%edx$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	74 09                	je     f01059e2 <strlcpy+0x32>$/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	84 db                	test   %bl,%bl$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	75 ec                	jne    f01059cc <strlcpy+0x1c>$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	89 d0                	mov    %edx,%eax$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	29 f0                	sub    %esi,%eax$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	5b                   	pop    %ebx$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	5e                   	pop    %esi$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	5d                   	pop    %ebp$/;"	l
f01059ea	obj/kern/kernel.asm	/^f01059ea:	c3                   	ret    $/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb <strcmp>:$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	55                   	push   %ebp$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	eb 06                	jmp    f01059fc <strcmp+0x11>$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01059ff	obj/kern/kernel.asm	/^f01059ff:	84 c0                	test   %al,%al$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	74 04                	je     f0105a07 <strcmp+0x1c>$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	3a 02                	cmp    (%edx),%al$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	74 ef                	je     f01059f6 <strcmp+0xb>$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105a0d	obj/kern/kernel.asm	/^f0105a0d:	29 d0                	sub    %edx,%eax$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	5d                   	pop    %ebp$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	c3                   	ret    $/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11 <strncmp>:$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	55                   	push   %ebp$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	53                   	push   %ebx$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a18	obj/kern/kernel.asm	/^f0105a18:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	eb 06                	jmp    f0105a28 <strncmp+0x17>$/;"	l
f0105a22	obj/kern/kernel.asm	/^f0105a22:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	74 15                	je     f0105a41 <strncmp+0x30>$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	84 c9                	test   %cl,%cl$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	74 04                	je     f0105a37 <strncmp+0x26>$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	74 eb                	je     f0105a22 <strncmp+0x11>$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105a3a	obj/kern/kernel.asm	/^f0105a3a:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	29 d0                	sub    %edx,%eax$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	eb 05                	jmp    f0105a46 <strncmp+0x35>$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	5b                   	pop    %ebx$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	5d                   	pop    %ebp$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	c3                   	ret    $/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49 <strchr>:$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	55                   	push   %ebp$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	eb 07                	jmp    f0105a5c <strchr+0x13>$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	38 ca                	cmp    %cl,%dl$/;"	l
f0105a57	obj/kern/kernel.asm	/^f0105a57:	74 0f                	je     f0105a68 <strchr+0x1f>$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105a5f	obj/kern/kernel.asm	/^f0105a5f:	84 d2                	test   %dl,%dl$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	75 f2                	jne    f0105a55 <strchr+0xc>$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	5d                   	pop    %ebp$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	c3                   	ret    $/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a <strfind>:$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	55                   	push   %ebp$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a6d	obj/kern/kernel.asm	/^f0105a6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	eb 03                	jmp    f0105a79 <strfind+0xf>$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	84 d2                	test   %dl,%dl$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	74 04                	je     f0105a84 <strfind+0x1a>$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	38 ca                	cmp    %cl,%dl$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	75 f2                	jne    f0105a76 <strfind+0xc>$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	5d                   	pop    %ebp$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	c3                   	ret    $/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86 <memset>:$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	55                   	push   %ebp$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	57                   	push   %edi$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	56                   	push   %esi$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	53                   	push   %ebx$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	85 c9                	test   %ecx,%ecx$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	74 36                	je     f0105acc <memset+0x46>$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105a9c	obj/kern/kernel.asm	/^f0105a9c:	75 28                	jne    f0105ac6 <memset+0x40>$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	75 23                	jne    f0105ac6 <memset+0x40>$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	89 d3                	mov    %edx,%ebx$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	89 d6                	mov    %edx,%esi$/;"	l
f0105aae	obj/kern/kernel.asm	/^f0105aae:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	89 d0                	mov    %edx,%eax$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	09 f0                	or     %esi,%eax$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	09 c2                	or     %eax,%edx$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	89 d0                	mov    %edx,%eax$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	09 d8                	or     %ebx,%eax$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	fc                   	cld    $/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	eb 06                	jmp    f0105acc <memset+0x46>$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9:	fc                   	cld    $/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	89 f8                	mov    %edi,%eax$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	5b                   	pop    %ebx$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	5e                   	pop    %esi$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	5f                   	pop    %edi$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	5d                   	pop    %ebp$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	c3                   	ret    $/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3 <memmove>:$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	55                   	push   %ebp$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	57                   	push   %edi$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	56                   	push   %esi$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	39 c6                	cmp    %eax,%esi$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	73 35                	jae    f0105b1a <memmove+0x47>$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	39 d0                	cmp    %edx,%eax$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	73 2e                	jae    f0105b1a <memmove+0x47>$/;"	l
f0105aec	obj/kern/kernel.asm	/^f0105aec:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	89 d6                	mov    %edx,%esi$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	09 fe                	or     %edi,%esi$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	75 13                	jne    f0105b0e <memmove+0x3b>$/;"	l
f0105afb	obj/kern/kernel.asm	/^f0105afb:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	75 0e                	jne    f0105b0e <memmove+0x3b>$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105b03	obj/kern/kernel.asm	/^f0105b03:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	fd                   	std    $/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	eb 09                	jmp    f0105b17 <memmove+0x44>$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105b14	obj/kern/kernel.asm	/^f0105b14:	fd                   	std    $/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	fc                   	cld    $/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	eb 1d                	jmp    f0105b37 <memmove+0x64>$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	89 f2                	mov    %esi,%edx$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	09 c2                	or     %eax,%edx$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	75 0f                	jne    f0105b32 <memmove+0x5f>$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	75 0a                	jne    f0105b32 <memmove+0x5f>$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105b2b	obj/kern/kernel.asm	/^f0105b2b:	89 c7                	mov    %eax,%edi$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	fc                   	cld    $/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	eb 05                	jmp    f0105b37 <memmove+0x64>$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	89 c7                	mov    %eax,%edi$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	fc                   	cld    $/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	5e                   	pop    %esi$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	5f                   	pop    %edi$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	5d                   	pop    %ebp$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	c3                   	ret    $/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b <memcpy>:$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	55                   	push   %ebp$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	e8 87 ff ff ff       	call   f0105ad3 <memmove>$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	c9                   	leave  $/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	c3                   	ret    $/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e <memcmp>:$/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e:	55                   	push   %ebp$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	56                   	push   %esi$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	53                   	push   %ebx$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	89 c6                	mov    %eax,%esi$/;"	l
f0105b5b	obj/kern/kernel.asm	/^f0105b5b:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	eb 1a                	jmp    f0105b7a <memcmp+0x2c>$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	38 d9                	cmp    %bl,%cl$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	74 0a                	je     f0105b74 <memcmp+0x26>$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	29 d8                	sub    %ebx,%eax$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	eb 0f                	jmp    f0105b83 <memcmp+0x35>$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	39 f0                	cmp    %esi,%eax$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	75 e2                	jne    f0105b60 <memcmp+0x12>$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	5b                   	pop    %ebx$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	5e                   	pop    %esi$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	5d                   	pop    %ebp$/;"	l
f0105b86	obj/kern/kernel.asm	/^f0105b86:	c3                   	ret    $/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87 <memfind>:$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	55                   	push   %ebp$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	89 c2                	mov    %eax,%edx$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	eb 07                	jmp    f0105b9e <memfind+0x17>$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	74 07                	je     f0105ba2 <memfind+0x1b>$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	39 d0                	cmp    %edx,%eax$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	72 f5                	jb     f0105b97 <memfind+0x10>$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	5d                   	pop    %ebp$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	c3                   	ret    $/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4 <strtol>:$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	55                   	push   %ebp$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	57                   	push   %edi$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	56                   	push   %esi$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	53                   	push   %ebx$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	eb 03                	jmp    f0105bb5 <strtol+0x11>$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	3c 09                	cmp    $0x9,%al$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	74 f6                	je     f0105bb2 <strtol+0xe>$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	3c 20                	cmp    $0x20,%al$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	74 f2                	je     f0105bb2 <strtol+0xe>$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	75 0a                	jne    f0105bce <strtol+0x2a>$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	eb 10                	jmp    f0105bde <strtol+0x3a>$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	75 07                	jne    f0105bde <strtol+0x3a>$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	8d 49 01             	lea    0x1(%ecx),%ecx$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	85 db                	test   %ebx,%ebx$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	0f 94 c0             	sete   %al$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	75 19                	jne    f0105c04 <strtol+0x60>$/;"	l
f0105beb	obj/kern/kernel.asm	/^f0105beb:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	75 14                	jne    f0105c04 <strtol+0x60>$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	0f 85 8a 00 00 00    	jne    f0105c84 <strtol+0xe0>$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	eb 16                	jmp    f0105c1a <strtol+0x76>$/;"	l
f0105c04	obj/kern/kernel.asm	/^f0105c04:	84 c0                	test   %al,%al$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	74 12                	je     f0105c1a <strtol+0x76>$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	75 08                	jne    f0105c1a <strtol+0x76>$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	89 f3                	mov    %esi,%ebx$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	77 08                	ja     f0105c37 <strtol+0x93>$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	eb 22                	jmp    f0105c59 <strtol+0xb5>$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	89 f3                	mov    %esi,%ebx$/;"	l
f0105c3c	obj/kern/kernel.asm	/^f0105c3c:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	77 08                	ja     f0105c49 <strtol+0xa5>$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	eb 10                	jmp    f0105c59 <strtol+0xb5>$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	89 f3                	mov    %esi,%ebx$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	77 16                	ja     f0105c69 <strtol+0xc5>$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	7d 0f                	jge    f0105c6d <strtol+0xc9>$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	01 d0                	add    %edx,%eax$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	eb b9                	jmp    f0105c22 <strtol+0x7e>$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	89 c2                	mov    %eax,%edx$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	eb 02                	jmp    f0105c6f <strtol+0xcb>$/;"	l
f0105c6d	obj/kern/kernel.asm	/^f0105c6d:	89 c2                	mov    %eax,%edx$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	74 05                	je     f0105c7a <strtol+0xd6>$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	85 ff                	test   %edi,%edi$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	74 0c                	je     f0105c8a <strtol+0xe6>$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	89 d0                	mov    %edx,%eax$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	f7 d8                	neg    %eax$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	eb 06                	jmp    f0105c8a <strtol+0xe6>$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	84 c0                	test   %al,%al$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	75 8a                	jne    f0105c12 <strtol+0x6e>$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	eb 90                	jmp    f0105c1a <strtol+0x76>$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	5b                   	pop    %ebx$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	5e                   	pop    %esi$/;"	l
f0105c8c	obj/kern/kernel.asm	/^f0105c8c:	5f                   	pop    %edi$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	5d                   	pop    %ebp$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	c3                   	ret    $/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	90                   	nop$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90 <mpentry_start>:$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	fa                   	cli    $/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	31 c0                	xor    %eax,%eax$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	8e d8                	mov    %eax,%ds$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	8e c0                	mov    %eax,%es$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	8e d0                	mov    %eax,%ss$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	74 70                	je     f0105d0e <mpsearch1+0x3>$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105ca1	obj/kern/kernel.asm	/^f0105ca1:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	08 00                	or     %al,(%eax)$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0 <start32>:$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	8e d8                	mov    %eax,%ds$/;"	l
f0105cb6	obj/kern/kernel.asm	/^f0105cb6:	8e c0                	mov    %eax,%es$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	8e d0                	mov    %eax,%ss$/;"	l
f0105cba	obj/kern/kernel.asm	/^f0105cba:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	8e e0                	mov    %eax,%fs$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	8e e8                	mov    %eax,%gs$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	8b 25 c4 ee 22 f0    	mov    0xf022eec4,%esp$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	b8 b4 01 10 f0       	mov    $0xf01001b4,%eax$/;"	l
f0105ce5	obj/kern/kernel.asm	/^f0105ce5:	ff d0                	call   *%eax$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7 <spin>:$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	eb fe                	jmp    f0105ce7 <spin>$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec <gdt>:$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	ff                   	(bad)  $/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	ff 00                	incl   (%eax)$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	00 00                	add    %al,(%eax)$/;"	l
f0105cf9	obj/kern/kernel.asm	/^f0105cf9:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04 <gdtdesc>:$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	17                   	pop    %ss$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a <mpentry_end>:$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	90                   	nop$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b <mpsearch1>:$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	55                   	push   %ebp$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	57                   	push   %edi$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	56                   	push   %esi$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	53                   	push   %ebx$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	8b 0d c8 ee 22 f0    	mov    0xf022eec8,%ecx$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	89 c3                	mov    %eax,%ebx$/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105d21	obj/kern/kernel.asm	/^f0105d21:	72 12                	jb     f0105d35 <mpsearch1+0x2a>$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	50                   	push   %eax$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	6a 57                	push   $0x57$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	68 e5 9e 10 f0       	push   $0xf0109ee5$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	e8 0b a3 ff ff       	call   f0100040 <_panic>$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	01 d0                	add    %edx,%eax$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	89 c2                	mov    %eax,%edx$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	77 12                	ja     f0105d58 <mpsearch1+0x4d>$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	50                   	push   %eax$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	6a 57                	push   $0x57$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	68 e5 9e 10 f0       	push   $0xf0109ee5$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	e8 e8 a2 ff ff       	call   f0100040 <_panic>$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	eb 2f                	jmp    f0105d8f <mpsearch1+0x84>$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	6a 04                	push   $0x4$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	68 f5 9e 10 f0       	push   $0xf0109ef5$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	53                   	push   %ebx$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	e8 de fd ff ff       	call   f0105b4e <memcmp>$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	85 c0                	test   %eax,%eax$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	75 15                	jne    f0105d8c <mpsearch1+0x81>$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	89 da                	mov    %ebx,%edx$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	01 c8                	add    %ecx,%eax$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	39 fa                	cmp    %edi,%edx$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	75 f4                	jne    f0105d7c <mpsearch1+0x71>$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	84 c0                	test   %al,%al$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	74 0e                	je     f0105d9a <mpsearch1+0x8f>$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	72 cd                	jb     f0105d60 <mpsearch1+0x55>$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	eb 02                	jmp    f0105d9c <mpsearch1+0x91>$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	89 d8                	mov    %ebx,%eax$/;"	l
f0105d9c	obj/kern/kernel.asm	/^f0105d9c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	5b                   	pop    %ebx$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	5e                   	pop    %esi$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	5f                   	pop    %edi$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	5d                   	pop    %ebp$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	c3                   	ret    $/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4 <mp_init>:$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	55                   	push   %ebp$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	57                   	push   %edi$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	56                   	push   %esi$/;"	l
f0105da9	obj/kern/kernel.asm	/^f0105da9:	53                   	push   %ebx$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	c7 05 e0 f3 23 f0 40 	movl   $0xf023f040,0xf023f3e0$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	f0 23 f0 $/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	83 3d c8 ee 22 f0 00 	cmpl   $0x0,0xf022eec8$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	75 16                	jne    f0105dd6 <mp_init+0x32>$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	68 00 04 00 00       	push   $0x400$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	6a 6f                	push   $0x6f$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	68 e5 9e 10 f0       	push   $0xf0109ee5$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	e8 6a a2 ff ff       	call   f0100040 <_panic>$/;"	l
f0105dd6	obj/kern/kernel.asm	/^f0105dd6:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	85 c0                	test   %eax,%eax$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	74 16                	je     f0105df7 <mp_init+0x53>$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	e8 1d ff ff ff       	call   f0105d0b <mpsearch1>$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	85 c0                	test   %eax,%eax$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	75 3c                	jne    f0105e31 <mp_init+0x8d>$/;"	l
f0105df5	obj/kern/kernel.asm	/^f0105df5:	eb 20                	jmp    f0105e17 <mp_init+0x73>$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0105dfe	obj/kern/kernel.asm	/^f0105dfe:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	e8 fb fe ff ff       	call   f0105d0b <mpsearch1>$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	85 c0                	test   %eax,%eax$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	75 1a                	jne    f0105e31 <mp_init+0x8d>$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	e8 e5 fe ff ff       	call   f0105d0b <mpsearch1>$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	85 c0                	test   %eax,%eax$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	0f 84 5a 02 00 00    	je     f010608b <mp_init+0x2e7>$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	85 f6                	test   %esi,%esi$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	74 06                	je     f0105e41 <mp_init+0x9d>$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	74 15                	je     f0105e56 <mp_init+0xb2>$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	68 58 9d 10 f0       	push   $0xf0109d58$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	e8 f9 d7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	e9 35 02 00 00       	jmp    f010608b <mp_init+0x2e7>$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	89 f0                	mov    %esi,%eax$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	3b 05 c8 ee 22 f0    	cmp    0xf022eec8,%eax$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	72 15                	jb     f0105e78 <mp_init+0xd4>$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	56                   	push   %esi$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	68 90 00 00 00       	push   $0x90$/;"	l
f0105e6e	obj/kern/kernel.asm	/^f0105e6e:	68 e5 9e 10 f0       	push   $0xf0109ee5$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	e8 c8 a1 ff ff       	call   f0100040 <_panic>$/;"	l
f0105e78	obj/kern/kernel.asm	/^f0105e78:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	6a 04                	push   $0x4$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	68 fa 9e 10 f0       	push   $0xf0109efa$/;"	l
f0105e88	obj/kern/kernel.asm	/^f0105e88:	53                   	push   %ebx$/;"	l
f0105e89	obj/kern/kernel.asm	/^f0105e89:	e8 c0 fc ff ff       	call   f0105b4e <memcmp>$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	85 c0                	test   %eax,%eax$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	74 15                	je     f0105eaa <mp_init+0x106>$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	68 88 9d 10 f0       	push   $0xf0109d88$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	e8 a5 d7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	e9 e1 01 00 00       	jmp    f010608b <mp_init+0x2e7>$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	eb 0d                	jmp    f0105ece <mp_init+0x12a>$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	f0 $/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	01 ca                	add    %ecx,%edx$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	39 c7                	cmp    %eax,%edi$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	75 ef                	jne    f0105ec1 <mp_init+0x11d>$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	84 d2                	test   %dl,%dl$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	74 15                	je     f0105eeb <mp_init+0x147>$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	68 bc 9d 10 f0       	push   $0xf0109dbc$/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede:	e8 64 d7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	e9 a0 01 00 00       	jmp    f010608b <mp_init+0x2e7>$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	3c 04                	cmp    $0x4,%al$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	74 1d                	je     f0105f10 <mp_init+0x16c>$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	3c 01                	cmp    $0x1,%al$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	74 19                	je     f0105f10 <mp_init+0x16c>$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	50                   	push   %eax$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	68 e0 9d 10 f0       	push   $0xf0109de0$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	e8 3f d7 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	e9 7b 01 00 00       	jmp    f010608b <mp_init+0x2e7>$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	01 ce                	add    %ecx,%esi$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	eb 0d                	jmp    f0105f33 <mp_init+0x18f>$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	f0 $/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	01 ca                	add    %ecx,%edx$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	39 c7                	cmp    %eax,%edi$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	75 ef                	jne    f0105f26 <mp_init+0x182>$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	89 d0                	mov    %edx,%eax$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	74 15                	je     f0105f53 <mp_init+0x1af>$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	68 00 9e 10 f0       	push   $0xf0109e00$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	e8 fc d6 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	e9 38 01 00 00       	jmp    f010608b <mp_init+0x2e7>$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	85 db                	test   %ebx,%ebx$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	0f 84 30 01 00 00    	je     f010608b <mp_init+0x2e7>$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	c7 05 00 f0 23 f0 01 	movl   $0x1,0xf023f000$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	00 00 00 $/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	a3 00 00 28 f0       	mov    %eax,0xf0280000$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	e9 85 00 00 00       	jmp    f0105fff <mp_init+0x25b>$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	84 c0                	test   %al,%al$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	74 06                	je     f0105f87 <mp_init+0x1e3>$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	3c 04                	cmp    $0x4,%al$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	77 55                	ja     f0105fda <mp_init+0x236>$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	eb 4e                	jmp    f0105fd5 <mp_init+0x231>$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	74 11                	je     f0105f9e <mp_init+0x1fa>$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	6b 05 e4 f3 23 f0 74 	imul   $0x74,0xf023f3e4,%eax$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	05 40 f0 23 f0       	add    $0xf023f040,%eax$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	a3 e0 f3 23 f0       	mov    %eax,0xf023f3e0$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	a1 e4 f3 23 f0       	mov    0xf023f3e4,%eax$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	7f 13                	jg     f0105fbb <mp_init+0x217>$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	88 82 40 f0 23 f0    	mov    %al,-0xfdc0fc0(%edx)$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	a3 e4 f3 23 f0       	mov    %eax,0xf023f3e4$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	eb 15                	jmp    f0105fd0 <mp_init+0x22c>$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	50                   	push   %eax$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	68 30 9e 10 f0       	push   $0xf0109e30$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	e8 7a d6 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	83 c7 14             	add    $0x14,%edi$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	eb 27                	jmp    f0105ffc <mp_init+0x258>$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	83 c7 08             	add    $0x8,%edi$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	eb 22                	jmp    f0105ffc <mp_init+0x258>$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	50                   	push   %eax$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	68 58 9e 10 f0       	push   $0xf0109e58$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	e8 5c d6 ff ff       	call   f0103647 <cprintf>$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	c7 05 00 f0 23 f0 00 	movl   $0x0,0xf023f000$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	00 00 00 $/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105fff	obj/kern/kernel.asm	/^f0105fff:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	39 c6                	cmp    %eax,%esi$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	0f 82 6f ff ff ff    	jb     f0105f7a <mp_init+0x1d6>$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	a1 e0 f3 23 f0       	mov    0xf023f3e0,%eax$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	83 3d 00 f0 23 f0 00 	cmpl   $0x0,0xf023f000$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	75 26                	jne    f0106046 <mp_init+0x2a2>$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	c7 05 e4 f3 23 f0 01 	movl   $0x1,0xf023f3e4$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	00 00 00 $/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	c7 05 00 00 28 f0 00 	movl   $0x0,0xf0280000$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	00 00 00 $/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	68 78 9e 10 f0       	push   $0xf0109e78$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	e8 06 d6 ff ff       	call   f0103647 <cprintf>$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	eb 45                	jmp    f010608b <mp_init+0x2e7>$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	ff 35 e4 f3 23 f0    	pushl  0xf023f3e4$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	50                   	push   %eax$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	68 ff 9e 10 f0       	push   $0xf0109eff$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	e8 ea d5 ff ff       	call   f0103647 <cprintf>$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	74 22                	je     f010608b <mp_init+0x2e7>$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	68 a4 9e 10 f0       	push   $0xf0109ea4$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	e8 d1 d5 ff ff       	call   f0103647 <cprintf>$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	ee                   	out    %al,(%dx)$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	b2 23                	mov    $0x23,%dl$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	ec                   	in     (%dx),%al$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	ee                   	out    %al,(%dx)$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	5b                   	pop    %ebx$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	5e                   	pop    %esi$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	5f                   	pop    %edi$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	5d                   	pop    %ebp$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	c3                   	ret    $/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093 <lapicw>:$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	55                   	push   %ebp$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	89 e5                	mov    %esp,%ebp$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	8b 0d 04 00 28 f0    	mov    0xf0280004,%ecx$/;"	l
f010609c	obj/kern/kernel.asm	/^f010609c:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	89 10                	mov    %edx,(%eax)$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	a1 04 00 28 f0       	mov    0xf0280004,%eax$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	5d                   	pop    %ebp$/;"	l
f01060aa	obj/kern/kernel.asm	/^f01060aa:	c3                   	ret    $/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab <cpunum>:$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	55                   	push   %ebp$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	a1 04 00 28 f0       	mov    0xf0280004,%eax$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	85 c0                	test   %eax,%eax$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	74 08                	je     f01060bf <cpunum+0x14>$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01060bd	obj/kern/kernel.asm	/^f01060bd:	eb 05                	jmp    f01060c4 <cpunum+0x19>$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	5d                   	pop    %ebp$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	c3                   	ret    $/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6 <lapic_init>:$/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	a1 00 00 28 f0       	mov    0xf0280000,%eax$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	85 c0                	test   %eax,%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	0f 84 21 01 00 00    	je     f01061f4 <lapic_init+0x12e>$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	55                   	push   %ebp$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	89 e5                	mov    %esp,%ebp$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	68 00 10 00 00       	push   $0x1000$/;"	l
f01060de	obj/kern/kernel.asm	/^f01060de:	50                   	push   %eax$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	e8 32 b1 ff ff       	call   f0101216 <mmio_map_region>$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	a3 04 00 28 f0       	mov    %eax,0xf0280004$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	e8 9b ff ff ff       	call   f0106093 <lapicw>$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	e8 8c ff ff ff       	call   f0106093 <lapicw>$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	e8 7d ff ff ff       	call   f0106093 <lapicw>$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	e8 6e ff ff ff       	call   f0106093 <lapicw>$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	e8 81 ff ff ff       	call   f01060ab <cpunum>$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	05 40 f0 23 f0       	add    $0xf023f040,%eax$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	39 05 e0 f3 23 f0    	cmp    %eax,0xf023f3e0$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	74 0f                	je     f010614c <lapic_init+0x86>$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	e8 47 ff ff ff       	call   f0106093 <lapicw>$/;"	l
f010614c	obj/kern/kernel.asm	/^f010614c:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	e8 38 ff ff ff       	call   f0106093 <lapicw>$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	a1 04 00 28 f0       	mov    0xf0280004,%eax$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	3c 03                	cmp    $0x3,%al$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	76 0f                	jbe    f0106179 <lapic_init+0xb3>$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	e8 1a ff ff ff       	call   f0106093 <lapicw>$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	e8 0b ff ff ff       	call   f0106093 <lapicw>$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	e8 fc fe ff ff       	call   f0106093 <lapicw>$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010619c	obj/kern/kernel.asm	/^f010619c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	e8 ed fe ff ff       	call   f0106093 <lapicw>$/;"	l
f01061a6	obj/kern/kernel.asm	/^f01061a6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	e8 de fe ff ff       	call   f0106093 <lapicw>$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	e8 cf fe ff ff       	call   f0106093 <lapicw>$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f01061c9	obj/kern/kernel.asm	/^f01061c9:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	e8 c0 fe ff ff       	call   f0106093 <lapicw>$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	8b 15 04 00 28 f0    	mov    0xf0280004,%edx$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	75 f5                	jne    f01061d9 <lapic_init+0x113>$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	e8 a0 fe ff ff       	call   f0106093 <lapicw>$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	c9                   	leave  $/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	f3 c3                	repz ret $/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6 <lapic_eoi>:$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	83 3d 04 00 28 f0 00 	cmpl   $0x0,0xf0280004$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	74 13                	je     f0106212 <lapic_eoi+0x1c>$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	55                   	push   %ebp$/;"	l
f0106200	obj/kern/kernel.asm	/^f0106200:	89 e5                	mov    %esp,%ebp$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	e8 82 fe ff ff       	call   f0106093 <lapicw>$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	5d                   	pop    %ebp$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	f3 c3                	repz ret $/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214 <lapic_startap>:$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	55                   	push   %ebp$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	89 e5                	mov    %esp,%ebp$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	56                   	push   %esi$/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218:	53                   	push   %ebx$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010621f	obj/kern/kernel.asm	/^f010621f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	ee                   	out    %al,(%dx)$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	b2 71                	mov    $0x71,%dl$/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	ee                   	out    %al,(%dx)$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	83 3d c8 ee 22 f0 00 	cmpl   $0x0,0xf022eec8$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	75 19                	jne    f0106254 <lapic_startap+0x40>$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	68 67 04 00 00       	push   $0x467$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	68 a4 67 10 f0       	push   $0xf01067a4$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	68 98 00 00 00       	push   $0x98$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	68 1c 9f 10 f0       	push   $0xf0109f1c$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	e8 ec 9d ff ff       	call   f0100040 <_panic>$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	00 00 $/;"	l
f010625d	obj/kern/kernel.asm	/^f010625d:	89 d8                	mov    %ebx,%eax$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	89 f2                	mov    %esi,%edx$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	e8 1c fe ff ff       	call   f0106093 <lapicw>$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	e8 0d fe ff ff       	call   f0106093 <lapicw>$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	e8 fe fd ff ff       	call   f0106093 <lapicw>$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	80 cf 06             	or     $0x6,%bh$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	89 f2                	mov    %esi,%edx$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	e8 ec fd ff ff       	call   f0106093 <lapicw>$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	89 da                	mov    %ebx,%edx$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	e8 e0 fd ff ff       	call   f0106093 <lapicw>$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	89 f2                	mov    %esi,%edx$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	e8 d4 fd ff ff       	call   f0106093 <lapicw>$/;"	l
f01062bf	obj/kern/kernel.asm	/^f01062bf:	89 da                	mov    %ebx,%edx$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	e8 c8 fd ff ff       	call   f0106093 <lapicw>$/;"	l
f01062cb	obj/kern/kernel.asm	/^f01062cb:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	5b                   	pop    %ebx$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	5e                   	pop    %esi$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	5d                   	pop    %ebp$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	c3                   	ret    $/;"	l
f01062d2	obj/kern/kernel.asm	/^f01062d2 <lapic_ipi>:$/;"	l
f01062d2	obj/kern/kernel.asm	/^f01062d2:	55                   	push   %ebp$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	e8 ab fd ff ff       	call   f0106093 <lapicw>$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	8b 15 04 00 28 f0    	mov    0xf0280004,%edx$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	75 f5                	jne    f01062ee <lapic_ipi+0x1c>$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	5d                   	pop    %ebp$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	c3                   	ret    $/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb <__spin_initlock>:$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	55                   	push   %ebp$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	5d                   	pop    %ebp$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	c3                   	ret    $/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316 <spin_lock>:$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	55                   	push   %ebp$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	89 e5                	mov    %esp,%ebp$/;"	l
f0106319	obj/kern/kernel.asm	/^f0106319:	56                   	push   %esi$/;"	l
f010631a	obj/kern/kernel.asm	/^f010631a:	53                   	push   %ebx$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	74 14                	je     f0106337 <spin_lock+0x21>$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	e8 80 fd ff ff       	call   f01060ab <cpunum>$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010632e	obj/kern/kernel.asm	/^f010632e:	05 40 f0 23 f0       	add    $0xf023f040,%eax$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	39 c6                	cmp    %eax,%esi$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	74 07                	je     f010633e <spin_lock+0x28>$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	eb 20                	jmp    f010635e <spin_lock+0x48>$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	e8 65 fd ff ff       	call   f01060ab <cpunum>$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	53                   	push   %ebx$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	50                   	push   %eax$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	68 2c 9f 10 f0       	push   $0xf0109f2c$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	6a 41                	push   $0x41$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	68 90 9f 10 f0       	push   $0xf0109f90$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	e8 e4 9c ff ff       	call   f0100040 <_panic>$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	f3 90                	pause  $/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	89 d0                	mov    %edx,%eax$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	85 c0                	test   %eax,%eax$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	75 f5                	jne    f010635c <spin_lock+0x46>$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	e8 3f fd ff ff       	call   f01060ab <cpunum>$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	05 40 f0 23 f0       	add    $0xf023f040,%eax$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	89 ea                	mov    %ebp,%edx$/;"	l
f010637c	obj/kern/kernel.asm	/^f010637c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	eb 0b                	jmp    f010638e <spin_lock+0x78>$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	8b 12                	mov    (%edx),%edx$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010638e	obj/kern/kernel.asm	/^f010638e:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	7f 14                	jg     f01063a7 <spin_lock+0x91>$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	77 e8                	ja     f0106383 <spin_lock+0x6d>$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	eb 0a                	jmp    f01063a7 <spin_lock+0x91>$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	7e f1                	jle    f010639d <spin_lock+0x87>$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01063af	obj/kern/kernel.asm	/^f01063af:	5b                   	pop    %ebx$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	5e                   	pop    %esi$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	5d                   	pop    %ebp$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	c3                   	ret    $/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3 <spin_unlock>:$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	55                   	push   %ebp$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	57                   	push   %edi$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	56                   	push   %esi$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	53                   	push   %ebx$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	74 18                	je     f01063dc <spin_unlock+0x29>$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	e8 df fc ff ff       	call   f01060ab <cpunum>$/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf:	05 40 f0 23 f0       	add    $0xf023f040,%eax$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	0f 84 a5 00 00 00    	je     f0106481 <spin_unlock+0xce>$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	6a 28                	push   $0x28$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f01063e4	obj/kern/kernel.asm	/^f01063e4:	50                   	push   %eax$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	53                   	push   %ebx$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	e8 e5 f6 ff ff       	call   f0105ad3 <memmove>$/;"	l
f01063ee	obj/kern/kernel.asm	/^f01063ee:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	e8 af fc ff ff       	call   f01060ab <cpunum>$/;"	l
f01063fc	obj/kern/kernel.asm	/^f01063fc:	57                   	push   %edi$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	56                   	push   %esi$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	50                   	push   %eax$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	68 58 9f 10 f0       	push   $0xf0109f58$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	e8 3e d2 ff ff       	call   f0103647 <cprintf>$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	83 c4 20             	add    $0x20,%esp$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	eb 54                	jmp    f0106465 <spin_unlock+0xb2>$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	57                   	push   %edi$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	50                   	push   %eax$/;"	l
f0106416	obj/kern/kernel.asm	/^f0106416:	e8 95 e5 ff ff       	call   f01049b0 <debuginfo_eip>$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010641e	obj/kern/kernel.asm	/^f010641e:	85 c0                	test   %eax,%eax$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	78 27                	js     f0106449 <spin_unlock+0x96>$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	8b 06                	mov    (%esi),%eax$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	89 c2                	mov    %eax,%edx$/;"	l
f0106429	obj/kern/kernel.asm	/^f0106429:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	52                   	push   %edx$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f0106436	obj/kern/kernel.asm	/^f0106436:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	50                   	push   %eax$/;"	l
f010643a	obj/kern/kernel.asm	/^f010643a:	68 a0 9f 10 f0       	push   $0xf0109fa0$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	e8 03 d2 ff ff       	call   f0103647 <cprintf>$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	eb 12                	jmp    f010645b <spin_unlock+0xa8>$/;"	l
f0106449	obj/kern/kernel.asm	/^f0106449:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	ff 36                	pushl  (%esi)$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	68 b7 9f 10 f0       	push   $0xf0109fb7$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	e8 ef d1 ff ff       	call   f0103647 <cprintf>$/;"	l
f0106458	obj/kern/kernel.asm	/^f0106458:	83 c4 10             	add    $0x10,%esp$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	83 c3 04             	add    $0x4,%ebx$/;"	l
f010645e	obj/kern/kernel.asm	/^f010645e:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	74 08                	je     f010646d <spin_unlock+0xba>$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	89 de                	mov    %ebx,%esi$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	85 c0                	test   %eax,%eax$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	75 a4                	jne    f0106411 <spin_unlock+0x5e>$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	68 bf 9f 10 f0       	push   $0xf0109fbf$/;"	l
f0106475	obj/kern/kernel.asm	/^f0106475:	6a 67                	push   $0x67$/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	68 90 9f 10 f0       	push   $0xf0109f90$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	e8 bf 9b ff ff       	call   f0100040 <_panic>$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	5b                   	pop    %ebx$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	5e                   	pop    %esi$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	5f                   	pop    %edi$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	5d                   	pop    %ebp$/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	c3                   	ret    $/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	90                   	nop$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0 <__udivdi3>:$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	55                   	push   %ebp$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	57                   	push   %edi$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	56                   	push   %esi$/;"	l
f01064a3	obj/kern/kernel.asm	/^f01064a3:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	8b 54 24 2c          	mov    0x2c(%esp),%edx$/;"	l
f01064aa	obj/kern/kernel.asm	/^f01064aa:	8b 7c 24 20          	mov    0x20(%esp),%edi$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	8b 74 24 24          	mov    0x24(%esp),%esi$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	85 d2                	test   %edx,%edx$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01064bc	obj/kern/kernel.asm	/^f01064bc:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	89 c8                	mov    %ecx,%eax$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	75 35                	jne    f01064f8 <__udivdi3+0x58>$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	39 f1                	cmp    %esi,%ecx$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	0f 87 bd 00 00 00    	ja     f0106588 <__udivdi3+0xe8>$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	85 c9                	test   %ecx,%ecx$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	89 cd                	mov    %ecx,%ebp$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	75 0b                	jne    f01064dc <__udivdi3+0x3c>$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	31 d2                	xor    %edx,%edx$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	f7 f1                	div    %ecx$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	89 c5                	mov    %eax,%ebp$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	89 f0                	mov    %esi,%eax$/;"	l
f01064de	obj/kern/kernel.asm	/^f01064de:	31 d2                	xor    %edx,%edx$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	f7 f5                	div    %ebp$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	89 c6                	mov    %eax,%esi$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	89 f8                	mov    %edi,%eax$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	f7 f5                	div    %ebp$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	89 f2                	mov    %esi,%edx$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	5e                   	pop    %esi$/;"	l
f01064ee	obj/kern/kernel.asm	/^f01064ee:	5f                   	pop    %edi$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	5d                   	pop    %ebp$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	c3                   	ret    $/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	3b 14 24             	cmp    (%esp),%edx$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	77 7b                	ja     f0106578 <__udivdi3+0xd8>$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	0f bd f2             	bsr    %edx,%esi$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	0f 84 97 00 00 00    	je     f01065a0 <__udivdi3+0x100>$/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	bd 20 00 00 00       	mov    $0x20,%ebp$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	89 d7                	mov    %edx,%edi$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	89 f1                	mov    %esi,%ecx$/;"	l
f0106512	obj/kern/kernel.asm	/^f0106512:	29 f5                	sub    %esi,%ebp$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	d3 e7                	shl    %cl,%edi$/;"	d
f0106516	obj/kern/kernel.asm	/^f0106516:	89 c2                	mov    %eax,%edx$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	89 e9                	mov    %ebp,%ecx$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	d3 ea                	shr    %cl,%edx$/;"	d
f010651c	obj/kern/kernel.asm	/^f010651c:	89 f1                	mov    %esi,%ecx$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	09 fa                	or     %edi,%edx$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	d3 e0                	shl    %cl,%eax$/;"	d
f0106525	obj/kern/kernel.asm	/^f0106525:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	89 e9                	mov    %ebp,%ecx$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	89 fa                	mov    %edi,%edx$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	d3 ea                	shr    %cl,%edx$/;"	d
f0106537	obj/kern/kernel.asm	/^f0106537:	89 f1                	mov    %esi,%ecx$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	d3 e7                	shl    %cl,%edi$/;"	d
f010653b	obj/kern/kernel.asm	/^f010653b:	89 e9                	mov    %ebp,%ecx$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	d3 e8                	shr    %cl,%eax$/;"	d
f010653f	obj/kern/kernel.asm	/^f010653f:	09 c7                	or     %eax,%edi$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	89 f8                	mov    %edi,%eax$/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	89 d5                	mov    %edx,%ebp$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	89 c7                	mov    %eax,%edi$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	39 d5                	cmp    %edx,%ebp$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	72 11                	jb     f0106567 <__udivdi3+0xc7>$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f010655a	obj/kern/kernel.asm	/^f010655a:	89 f1                	mov    %esi,%ecx$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	d3 e2                	shl    %cl,%edx$/;"	d
f010655e	obj/kern/kernel.asm	/^f010655e:	39 c2                	cmp    %eax,%edx$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	73 5e                	jae    f01065c0 <__udivdi3+0x120>$/;"	l
f0106562	obj/kern/kernel.asm	/^f0106562:	3b 2c 24             	cmp    (%esp),%ebp$/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	75 59                	jne    f01065c0 <__udivdi3+0x120>$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f010656a	obj/kern/kernel.asm	/^f010656a:	31 f6                	xor    %esi,%esi$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	89 f2                	mov    %esi,%edx$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	5e                   	pop    %esi$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	5f                   	pop    %edi$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	5d                   	pop    %ebp$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	c3                   	ret    $/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106578	obj/kern/kernel.asm	/^f0106578:	31 f6                	xor    %esi,%esi$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	31 c0                	xor    %eax,%eax$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	89 f2                	mov    %esi,%edx$/;"	l
f010657e	obj/kern/kernel.asm	/^f010657e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	5e                   	pop    %esi$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	5f                   	pop    %edi$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	5d                   	pop    %ebp$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	c3                   	ret    $/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	89 f2                	mov    %esi,%edx$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	31 f6                	xor    %esi,%esi$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	89 f8                	mov    %edi,%eax$/;"	l
f010658e	obj/kern/kernel.asm	/^f010658e:	f7 f1                	div    %ecx$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	89 f2                	mov    %esi,%edx$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	5e                   	pop    %esi$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	5f                   	pop    %edi$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	5d                   	pop    %ebp$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	c3                   	ret    $/;"	l
f0106599	obj/kern/kernel.asm	/^f0106599:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	76 0b                	jbe    f01065b1 <__udivdi3+0x111>$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	31 c0                	xor    %eax,%eax$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	3b 14 24             	cmp    (%esp),%edx$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	0f 83 37 ff ff ff    	jae    f01064e8 <__udivdi3+0x48>$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	e9 2d ff ff ff       	jmp    f01064e8 <__udivdi3+0x48>$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	90                   	nop$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	89 f8                	mov    %edi,%eax$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	31 f6                	xor    %esi,%esi$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	e9 1f ff ff ff       	jmp    f01064e8 <__udivdi3+0x48>$/;"	l
f01065c9	obj/kern/kernel.asm	/^f01065c9:	66 90                	xchg   %ax,%ax$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	66 90                	xchg   %ax,%ax$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	66 90                	xchg   %ax,%ax$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	90                   	nop$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0 <__umoddi3>:$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	55                   	push   %ebp$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	57                   	push   %edi$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	56                   	push   %esi$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	8b 44 24 34          	mov    0x34(%esp),%eax$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	89 c6                	mov    %eax,%esi$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	8b 44 24 3c          	mov    0x3c(%esp),%eax$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f01065f0	obj/kern/kernel.asm	/^f01065f0:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	89 74 24 18          	mov    %esi,0x18(%esp)$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	85 c0                	test   %eax,%eax$/;"	l
f01065fe	obj/kern/kernel.asm	/^f01065fe:	89 c2                	mov    %eax,%edx$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	75 1e                	jne    f0106620 <__umoddi3+0x50>$/;"	l
f0106602	obj/kern/kernel.asm	/^f0106602:	39 f7                	cmp    %esi,%edi$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	76 52                	jbe    f0106658 <__umoddi3+0x88>$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	89 c8                	mov    %ecx,%eax$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	89 f2                	mov    %esi,%edx$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	f7 f7                	div    %edi$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	89 d0                	mov    %edx,%eax$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	31 d2                	xor    %edx,%edx$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	5e                   	pop    %esi$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	5f                   	pop    %edi$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	5d                   	pop    %ebp$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	c3                   	ret    $/;"	l
f0106617	obj/kern/kernel.asm	/^f0106617:	89 f6                	mov    %esi,%esi$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f0106620	obj/kern/kernel.asm	/^f0106620:	39 f0                	cmp    %esi,%eax$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	77 5c                	ja     f0106680 <__umoddi3+0xb0>$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0106627	obj/kern/kernel.asm	/^f0106627:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	75 64                	jne    f0106690 <__umoddi3+0xc0>$/;"	l
f010662c	obj/kern/kernel.asm	/^f010662c:	8b 6c 24 14          	mov    0x14(%esp),%ebp$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	39 6c 24 0c          	cmp    %ebp,0xc(%esp)$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	0f 86 f6 00 00 00    	jbe    f0106730 <__umoddi3+0x160>$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	3b 44 24 18          	cmp    0x18(%esp),%eax$/;"	l
f010663e	obj/kern/kernel.asm	/^f010663e:	0f 82 ec 00 00 00    	jb     f0106730 <__umoddi3+0x160>$/;"	l
f0106644	obj/kern/kernel.asm	/^f0106644:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	8b 54 24 18          	mov    0x18(%esp),%edx$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	5e                   	pop    %esi$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	5f                   	pop    %edi$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	5d                   	pop    %ebp$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	c3                   	ret    $/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	90                   	nop$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	85 ff                	test   %edi,%edi$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	89 fd                	mov    %edi,%ebp$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	75 0b                	jne    f0106669 <__umoddi3+0x99>$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	31 d2                	xor    %edx,%edx$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	f7 f7                	div    %edi$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	89 c5                	mov    %eax,%ebp$/;"	l
f0106669	obj/kern/kernel.asm	/^f0106669:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	31 d2                	xor    %edx,%edx$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	f7 f5                	div    %ebp$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	89 c8                	mov    %ecx,%eax$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	f7 f5                	div    %ebp$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	eb 95                	jmp    f010660c <__umoddi3+0x3c>$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	89 f6                	mov    %esi,%esi$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	89 c8                	mov    %ecx,%eax$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	89 f2                	mov    %esi,%edx$/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	5e                   	pop    %esi$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	5f                   	pop    %edi$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	5d                   	pop    %ebp$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	c3                   	ret    $/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	90                   	nop$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	29 e8                	sub    %ebp,%eax$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	d3 e2                	shl    %cl,%edx$/;"	d
f010669b	obj/kern/kernel.asm	/^f010669b:	89 c7                	mov    %eax,%edi$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f01066a1	obj/kern/kernel.asm	/^f01066a1:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	89 f9                	mov    %edi,%ecx$/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	d3 e8                	shr    %cl,%eax$/;"	d
f01066a9	obj/kern/kernel.asm	/^f01066a9:	89 c1                	mov    %eax,%ecx$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	09 d1                	or     %edx,%ecx$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	89 fa                	mov    %edi,%edx$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f01066b7	obj/kern/kernel.asm	/^f01066b7:	89 e9                	mov    %ebp,%ecx$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	d3 e0                	shl    %cl,%eax$/;"	d
f01066bb	obj/kern/kernel.asm	/^f01066bb:	89 f9                	mov    %edi,%ecx$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	89 f0                	mov    %esi,%eax$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	d3 e8                	shr    %cl,%eax$/;"	d
f01066c5	obj/kern/kernel.asm	/^f01066c5:	89 e9                	mov    %ebp,%ecx$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	89 c7                	mov    %eax,%edi$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	d3 e6                	shl    %cl,%esi$/;"	d
f01066cf	obj/kern/kernel.asm	/^f01066cf:	89 d1                	mov    %edx,%ecx$/;"	l
f01066d1	obj/kern/kernel.asm	/^f01066d1:	89 fa                	mov    %edi,%edx$/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	d3 e8                	shr    %cl,%eax$/;"	d
f01066d5	obj/kern/kernel.asm	/^f01066d5:	89 e9                	mov    %ebp,%ecx$/;"	l
f01066d7	obj/kern/kernel.asm	/^f01066d7:	09 f0                	or     %esi,%eax$/;"	l
f01066d9	obj/kern/kernel.asm	/^f01066d9:	8b 74 24 1c          	mov    0x1c(%esp),%esi$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	f7 74 24 10          	divl   0x10(%esp)$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	d3 e6                	shl    %cl,%esi$/;"	d
f01066e3	obj/kern/kernel.asm	/^f01066e3:	89 d1                	mov    %edx,%ecx$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f01066e9	obj/kern/kernel.asm	/^f01066e9:	39 d1                	cmp    %edx,%ecx$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	89 d7                	mov    %edx,%edi$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	89 c6                	mov    %eax,%esi$/;"	l
f01066f3	obj/kern/kernel.asm	/^f01066f3:	72 0a                	jb     f01066ff <__umoddi3+0x12f>$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	39 44 24 14          	cmp    %eax,0x14(%esp)$/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	73 10                	jae    f010670b <__umoddi3+0x13b>$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	39 d1                	cmp    %edx,%ecx$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	75 0c                	jne    f010670b <__umoddi3+0x13b>$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	89 d7                	mov    %edx,%edi$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	89 c6                	mov    %eax,%esi$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	2b 74 24 0c          	sub    0xc(%esp),%esi$/;"	l
f0106707	obj/kern/kernel.asm	/^f0106707:	1b 7c 24 10          	sbb    0x10(%esp),%edi$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	89 ca                	mov    %ecx,%edx$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106713	obj/kern/kernel.asm	/^f0106713:	29 f0                	sub    %esi,%eax$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	19 fa                	sbb    %edi,%edx$/;"	l
f0106717	obj/kern/kernel.asm	/^f0106717:	d3 e8                	shr    %cl,%eax$/;"	d
f0106719	obj/kern/kernel.asm	/^f0106719:	0f b6 4c 24 18       	movzbl 0x18(%esp),%ecx$/;"	l
f010671e	obj/kern/kernel.asm	/^f010671e:	89 d7                	mov    %edx,%edi$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	d3 e7                	shl    %cl,%edi$/;"	d
f0106722	obj/kern/kernel.asm	/^f0106722:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	09 f8                	or     %edi,%eax$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	d3 ea                	shr    %cl,%edx$/;"	d
f0106728	obj/kern/kernel.asm	/^f0106728:	83 c4 20             	add    $0x20,%esp$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	5e                   	pop    %esi$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	5f                   	pop    %edi$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	5d                   	pop    %ebp$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	c3                   	ret    $/;"	l
f010672f	obj/kern/kernel.asm	/^f010672f:	90                   	nop$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	29 f9                	sub    %edi,%ecx$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	19 c6                	sbb    %eax,%esi$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	89 74 24 18          	mov    %esi,0x18(%esp)$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	e9 ff fe ff ff       	jmp    f0106644 <__umoddi3+0x74>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
game_dest	kern/game.h	/^	game_dest,$/;"	e	enum:__anon1
game_display	kern/game_draw.c	/^game_display(){$/;"	f
game_display	kern/game_draw.h	/^void game_display();$/;"	p	signature:()
game_loop	kern/game.c	/^game_loop(void) { \/* driven by keyboard interuption *\/$/;"	f	signature:(void)
game_loop	kern/game.h	/^void game_loop();$/;"	p	signature:()
game_out	kern/game.h	/^	game_out$/;"	e	enum:__anon1
game_space	kern/game.h	/^	game_space = 0,$/;"	e	enum:__anon1
game_wall	kern/game.h	/^	game_wall,$/;"	e	enum:__anon1
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getch	obj/kern/kernel.asm	/^		getch = getchar();$/;"	d
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
grey	kern/game_draw.h	5;"	d
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
height	kern/draw.c	40;"	d	file:
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lastenvx	kern/sched.c	/^static int lastenvx = -1;$/;"	v	file:
lastenvx	obj/kern/kernel.asm	/^                lastenvx = i;$/;"	d
lastenvx	obj/kern/kernel.asm	/^        lastenvx = cpunum();$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
log2	inc/stdio.h	34;"	d
log3	inc/stdio.h	40;"	d
log4	inc/stdio.h	46;"	d
log_var	inc/stdio.h	52;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
map	kern/game_layout.h	/^static int map[9][9] = {$/;"	v
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	signature:(physaddr_t pa, size_t size)
mmio_map_region	kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
move_area_height	kern/draw.c	43;"	d	file:
move_area_width	kern/draw.c	44;"	d	file:
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
next_box_x	kern/game.c	13;"	d	file:
next_box_x	obj/kern/kernel.asm	/^#define next_box_x(index) (box[index].x+right)$/;"	d
next_box_y	kern/game.c	14;"	d	file:
next_box_y	obj/kern/kernel.asm	/^#define next_box_y(index) (box[index].y+down)$/;"	d
next_x	kern/game.c	11;"	d	file:
next_y	kern/game.c	12;"	d	file:
nextfree	kern/pmap.c	/^static char *nextfree;	\/\/ virtual address of next byte of free memory$/;"	v	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) (n+nextfree), PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	  npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^	  npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	75;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link ;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*)boot_alloc(sizeof(struct PageInfo)*npages);$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgamt	obj/kern/kernel.asm	/^		pgamt = size;$/;"	d
pgamt	obj/kern/kernel.asm	/^		pgamt = size\/PGSIZE;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgte	obj/kern/kernel.asm	/^			pgte = (pte_t*)page2kva(npage);		  $/;"	d
pgte	obj/kern/kernel.asm	/^		pgte = (pte_t*)KADDR(PTE_ADDR(pgdir[PDX(va)]));$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) (((uint8_t *)elfhdr) + elfhdr->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pink	kern/game_draw.h	8;"	d
pos	kern/game.h	/^struct pos{$/;"	s
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pos::x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
pos::y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
position_init	kern/game.c	/^position_init() {$/;"	f	file:
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prepare_buffer	kern/video.c	/^prepare_buffer(void) {$/;"	f	signature:(void)
prepare_buffer	kern/video.h	/^void prepare_buffer(void);$/;"	p	signature:(void)
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protag	kern/game.c	/^struct pos protag, box[3];$/;"	v	typeref:struct:pos
protag_infrontof_box	kern/game.c	/^protag_infrontof_box(int right, int down) { \/\/ if false return 0,else return box index + 1$/;"	f	file:	signature:(int right, int down)
protag_movable	kern/game.c	/^protag_movable(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protag_move	kern/game.c	/^protag_move(int right, int down) {$/;"	f	file:	signature:(int right, int down)
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_store	obj/kern/kernel.asm	/^		pte_store = pgdir_walk(env->env_pgdir,(void *) start, 0);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
red	kern/game_draw.h	10;"	d
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	obj/kern/kernel.asm	/^		result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	signature:(void)
sched_halt	kern/sched.c	/^void sched_halt(void);$/;"	p	file:	signature:(void)
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int lastenvx = -1;$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static void*$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f	access:public
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f	access:public
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f	access:public
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_divzero	grade-lab3	/^def test_divzero():$/;"	f	access:public
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f	access:public
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f	access:public
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f	access:public
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f	access:public
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f	access:public
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f	access:public
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f	access:public
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f	access:public
test_faultread	grade-lab3	/^def test_faultread():$/;"	f	access:public
test_faultread	grade-lab4	/^def test_faultread():$/;"	f	access:public
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f	access:public
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f	access:public
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f	access:public
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f	access:public
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f	access:public
test_forktree	grade-lab4	/^def test_forktree():$/;"	f	access:public
test_hello	grade-lab3	/^def test_hello():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f	access:public
test_primes	grade-lab4	/^def test_primes():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f	access:public
test_softint	grade-lab3	/^def test_softint():$/;"	f	access:public
test_spin	grade-lab4	/^def test_spin():$/;"	f	access:public
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f	access:public
test_testbss	grade-lab3	/^def test_testbss():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	obj/kern/kernel.asm	/^uint8_t *vmem = VMEM_ADDR;$/;"	l
uint8_t	obj/kern/kernel.asm	/^uint8_t vbuf[SCR_SIZE];$/;"	l
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = oaddr;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^				user_mem_check_addr = start;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vbuf	kern/video.c	/^uint8_t vbuf[SCR_SIZE];$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
victory	kern/game.c	/^victory() {$/;"	f	file:
vmem	kern/video.c	/^uint8_t *vmem = VMEM_ADDR;$/;"	v
vmem	obj/kern/kernel.asm	/^	vmem = VMEM_ADDR;$/;"	d
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	kern/draw.c	39;"	d	file:
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
x	kern/game.h	/^    int x;$/;"	m	struct:pos	access:public
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
y	kern/game.h	/^    int y;$/;"	m	struct:pos	access:public
yellow	kern/game_draw.h	7;"	d
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
